MAIN_OBOF As screen:
    Fill: =RGBA(0, 0, 0, 0)
    OnHidden: =
    OnVisible: |
        =Set(isBuildChecklistTasksRunning, true);
        // INIT CONTEXT VARIABLES
        UpdateContext(
            {
                btn_NewCommentDisplayMode: DisplayMode.Disabled,
                btn_NewNewLocalTaskDisplayMode: DisplayMode.Disabled,
                btn_NewChecklistDisplayMode: DisplayMode.Disabled,
                btn_RefreshChecklistText: "Refresh Checklists",
                progress_ChecklistVisible: true,
                progress_ChecklistRefreshVisible: false,
                icon_RefreshChecklistStatusVisible: false,
                //icon_RefreshChecklistStatusVisibleFade: false,
                galleryChecklistTasksLoaderVisible: false,
                searchCriteria: Table(
                    {SearchObj: {SearchTerm: "Checklist ID", Header: "Search by Checklist ID Number", PlaceholderText: "Last, First"}},
                    {SearchObj: {SearchTerm: "Employee Name", Header: "Search by Employee's Name", PlaceholderText: "Last, First"}},
                    {SearchObj: {SearchTerm: "Organization Code", Header: "Saerch by Organization Code", PlaceholderText: "P2-IS"}},
                    {SearchObj: {SearchTerm: "Out-Processing Status", Header: "Saerch by Out-Processing Status", PlaceholderText: "P2-IS"}}
                ),
                globalFilter: "In Progress",
                globalSorter: "Days Remaining",
                isCommenttagged: "all",
                checklistWorkspaceControlSpacerWidth: 14,
                galleryCardBorderRadius: 6,
                galleryCardHTMLNonSpaceCollapse: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
                galleryChecklistTasksRowChoices: Table({Value: 1},{Value: 2}),
                outprocessingChecklist_StopBit: false,
                isNew_Toggle_Filter_t2: true,
                isNew_Toggle_Filter_t3: true,
                isToggle_Filter_t2_Enabled: true,
                isToggle_Filter_t3_Enabled: false,
                galleryXposition: -10,
                daysCompleted: 90
            }
        );
        
        Select(btn_DepartingEmployee);
        SetFocus(btn_DepartingEmployee);
        DataSourceComponent.Refresh(true, globalFilter);
        DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
        //Set(defaultGalleryCheklistItem, First(gallery_checklists.AllItems));
        
        //UpdateContext({btn_RefreshChecklistText: "Loading Checklists"});
        //Select(refreshChecklists);
        //Set(isBuildChecklistTasksRunning, true);
        //Select(refreshChecklists);

    VC_Background_1 As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =Parent.Width
        X: =0 - 150
        Y: =(Parent.Height - Self.Height) + 220
        ZIndex: =1

        BKG_1 As image:
            AccessibleLabel: ="DCMA-Seal-Color-v2"
            AlignInContainer: =AlignInContainer.Start
            AutoDisableOnSelect: =false
            Height: =1100
            Image: ='NOBAK-DCMA-Seal'
            ImagePosition: =ImagePosition.Fill
            Transparency: =0.6
            Width: =1200
            X: =VC_Background_1.X - 300
            ZIndex: =2

    CC_Checklist_Workspace As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(53, 61, 63, 1)
        BorderThickness: =0.25
        DropShadow: =DropShadow.Semilight
        Height: =((Parent.Height - CC_Header.Height - CC_Checklist_Workspace_Control.Height) - (portalPadding * 2)) - 15
        RadiusBottomLeft: =8
        RadiusBottomRight: =8
        RadiusTopLeft: =8
        RadiusTopRight: =8
        Width: =(Parent.Width - CC_VerticalMenu.Width) - (portalPadding * 4)
        X: =(Parent.Width - Self.Width) - portalPadding + 5
        Y: =(CC_Header.Height + CC_Checklist_Workspace_Control.Height + portalPadding) + 15
        ZIndex: =2

        glassBlur_3 As htmlViewer:
            AutoHeight: =true
            Height: =CC_Checklist_Workspace.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"&CC_Checklist_Workspace.Height&"px;backdrop-filter:blur(25px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =CC_Checklist_Workspace.Width
            ZIndex: =1

        HC_Checklist_EmployeeChecklists As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =(Parent.Height - HC_GalleryChecklistControls.Height)
            LayoutMode: =LayoutMode.Auto
            PaddingTop: =30
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width + 1
            X: =0 - 1
            Y: =(Parent.Height - Self.Height) - 1
            ZIndex: =2

            "gallery_checklists As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                AlignInContainer: =AlignInContainer.Start
                BorderColor: =RGBA(79, 90, 94, 1)
                Default: |+
                    =Blank()
                    //defaultGalleryCheklistItem.ID
                    /*If(IsBlank(recentlySelectedChecklist),
                       Blank(),
                       recentlySelectedChecklist
                    )*/
                    
                DelayItemLoading: =true
                FillPortions: =0
                Height: =Parent.Height - 30
                Items: |-
                    =Filter(
                        // USER INPUT FILTER
                        Filter(
                            // GLOBAL FILTER
                            Filter(
                                // GLOBAL SORT FUNCTION
                                SortByColumns(
                                    AddColumns(
                                        col_outprocessingChecklistItems, 
                                        "columnSortByLastName", Text(First(Ungroup(employee, "surname")).surname),
                                        "columnSortByCreatedDate", Text(DateTimeValue(Created), "[$-en-US]yyyy/mm/dd"),
                                        "columnSortByDepartureDate", Text(DateTimeValue(departureDate), "[$-en-US]yyyy/mm/dd"),
                                        "columnSortByDaysRemainig", Value(DateDiff(Today(), departureDate))
                                    ),
                                    Switch(columnSortBy,
                                        "Last Name", "columnSortByLastName",
                                        "Created Date", "columnSortByCreatedDate",
                                        "Departure Date", "columnSortByDepartureDate",
                                        "Days Remaining", "columnSortByDaysRemainig"
                                    ),
                                    Switch(columnSortBy,
                                        "Last Name", SortOrder.Ascending,
                                        "Created Date", SortOrder.Descending,
                                        "Departure Date", SortOrder.Descending,
                                        "Days Remaining", SortOrder.Ascending
                                    )
                                ), // END GLOBAL SORT | EXECUTE GLOBAL SORT
                                Switch(globalFilter,
                                    "In Progress", (globalFilter = outprocessingState.Value),
                                    "Completed", (globalFilter = outprocessingState.Value && DateDiff(outprocessingCompletedDate, Today()) <= daysCompleted)
                                )
                                //(IsBlank(globalFilter) || globalFilter = outprocessingState.Value)
                            ), // END GLOBAL FILTER | EXECUTE GLOBAL FILTER
                            (
                                IsBlank(input_SearchTerm.Text) || 
                                input_SearchTerm.Text in First(Ungroup(employee, "displayName")).displayName || 
                                input_SearchTerm.Text in First(Ungroup(employee, "organizationCode")).organizationCode || 
                                input_SearchTerm.Text in ID || 
                                input_SearchTerm.Text in checklistStatus.Value
                            ) // END USER INPUT FILTER | EXECUTE USER INPUT FILTER
                        ),
                        (First(currentUser).isClearingOffice || First(currentUser).isMSO || First(currentUser).isTFManager || First(currentUser).isTFProgramManager) ||
                        (uidUser = First(currentUser).uid || uidDesignee = First(currentUser).uid || uidSupervisor = First(currentUser).uid)
                    )
                    //If(First(currentUser).isClearingOffice || First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager || First(currentUser).isTFProgramManager,
                Layout: =Layout.Vertical
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =320
                OnSelect: =
                ShowScrollbar: =If(isAccessibilityEnabled, true, false)
                TemplatePadding: =0
                TemplateSize: =195
                Width: =Parent.Width
                WrapCount: =0
                X: =0 - 2
                Y: =0 - 1
                ZIndex: =2

                separator As rectangle:
                    Fill: =RGBA(139, 154, 159, 1)
                    Height: =1
                    Visible: =If(ThisItem.IsSelected, false, true)
                    Width: =Parent.Width / 2.7
                    Y: |-
                        =Parent.TemplateHeight
                        //174-3.2
                    ZIndex: =1

                CC_GalleryCard As groupContainer.manualLayoutContainer:
                    BorderColor: =RGBA(106, 122, 127, 1)
                    BorderThickness: =If(ThisItem.IsSelected, 2, 0)
                    DropShadow: =If(ThisItem.IsSelected, DropShadow.ExtraBold, DropShadow.None)
                    Fill: |
                        =/*If(!ThisItem.IsSelected,
                            RGBA(255,255,255,Cos(card_Fader.Value / card_Fader.Duration * Pi()/2)),
                            RGBA(255,255,255,1)
                        )*/
                        If(ThisItem.IsSelected, RGBA(255,255,255,1), RGBA(0,0,0,0))
                    Height: |
                        =If(ThisItem.IsSelected && ThisItem.ID <> Value(gallery_ChecklistsLastItem.Text), 
                            Parent.TemplateHeight+10,
                            Parent.TemplateHeight-0
                        )
                    RadiusBottomLeft: |-
                        =galleryCardBorderRadius
                        //If(ThisItem.IsSelected, 6, 0)
                    RadiusBottomRight: =galleryCardBorderRadius//Self.RadiusBottomLeft
                    RadiusTopLeft: =galleryCardBorderRadius//Self.RadiusBottomLeft
                    RadiusTopRight: =galleryCardBorderRadius//Self.RadiusBottomLeft
                    Width: |
                        =If(ThisItem.IsSelected,
                            (Parent.Width / 2.4),
                            (Parent.Width / 2.7)
                        )
                    X: =If(ThisItem.IsSelected, 0, 0)
                    Y: |-
                        =If(ThisItem.IsSelected && ThisItem.ID = Value(gallery_ChecklistsLastItem.Text) && ThisItem.ID = Value(gallery_ChecklistsFirstItem.Text),
                            Value(1),
                            If(ThisItem.IsSelected && ThisItem.ID = Value(gallery_ChecklistsLastItem.Text),
                                Value(-2),
                                If(ThisItem.IsSelected && ThisItem.ID = Value(gallery_ChecklistsFirstItem.Text),
                                    Value(1),
                                    If(ThisItem.IsSelected && ThisItem.ID <> Value(gallery_ChecklistsLastItem.Text) && ThisItem.ID <> Value(gallery_ChecklistsFirstItem.Text),
                                        Value(0)
                                    )
                                )
                            )
                        )
                    ZIndex: =2

                    card_call_buildChecklistTasks As timer:
                        AutoPause: =false
                        Color: =RGBA(53, 61, 63, 1)
                        DisplayMode: =DisplayMode.View
                        Duration: =1
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =22
                        OnTimerStart: |-
                            =//Set(isBuildChecklistTasksRunning, true);
                            DataSourceComponent.BuildChecklistTasks(false, ThisItem.ID);
                            
                            //Set(isBuildChecklistTasksRunning, true);
                            //Select(buildChecklistTasks);
                        PaddingTop: =0
                        Reset: =!ThisItem.IsSelected
                        Size: =11
                        Start: =ThisItem.IsSelected
                        Text: |-
                            ="Explicit Value: " & Self.Value
                        Visible: =false
                        Width: =200
                        ZIndex: =2

                HC_Footer As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    Height: =30
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =10
                    PaddingRight: =10
                    Width: =CC_GalleryCard.Width
                    Y: =CC_GalleryCard.Height - Self.Height
                    ZIndex: =3

                    badge_DaysRemainingWarning As Badge:
                        AccessibleLabel: =""
                        Appearance: ='BadgeCanvas.Appearance'.Filled
                        BasePaletteColor: =
                        Content: ="DR"
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =16
                        LayoutMinHeight: =32
                        LayoutMinWidth: =32
                        Shape: ='BadgeCanvas.Shape'.Rounded
                        ThemeColor: ='BadgeCanvas.ThemeColor'.Severe
                        Visible: =If(DateDiff(Today(), ThisItem.departureDate) <= daysRemainingWarning && ThisItem.outprocessingState.Value <> "Completed", true, false)
                        Width: =28
                        X: =8
                        Y: =11
                        ZIndex: =1

                    card_outProcessingStatus As label:
                        FillPortions: =1
                        Font: =Font.'Segoe UI'
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Bold, FontWeight.Normal)
                        Height: =20
                        OnSelect: =
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9
                        Text: =ThisItem.checklistStatus.Value & " " 
                        Tooltip: ="Out-Processing Status"
                        Width: =CC_GalleryCard.Width
                        Y: =If(ThisItem.IsSelected, (CC_GalleryCard.Height - Self.Height) - 8, CC_GalleryCard.Height - Self.Height - 6)
                        ZIndex: =2

                    CC_ChecklistComments As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Width: =125
                        ZIndex: =3

                        btn_ChecklistComments_BACKUP As button:
                            Color: =RGBA(53, 61, 63, 1)
                            Fill: =RGBA(175, 190, 190, 1)
                            Font: =Font.'Segoe UI'
                            Height: =22
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Size: =9
                            Text: ="Comments"
                            Visible: =false
                            Width: =120
                            X: =55
                            Y: =8
                            ZIndex: =1

                        btn_ChecklistComments As button:
                            Color: =RGBA(53, 61, 63, 1)
                            Fill: =RGBA(0, 0, 0, 0)
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height
                            OnSelect: =Select(btn_NewComment)
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Size: =9
                            Text: ="Comments"
                            Tooltip: ="View Checklist Comments"
                            Visible: =false//!IsBlank(LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments)
                            Width: =Parent.Width
                            ZIndex: =2

                        VC_Icon_ChecklistComments_Badge As groupContainer.verticalAutoLayoutContainer:
                            BorderColor: =ColorFade(Self.Fill, -35%)
                            BorderThickness: =0.25
                            DropShadow: =DropShadow.None
                            Fill: =RGBA(0,0,0,0)//RGBA(33, 138, 255, 1)
                            Height: =icon_ChecklistComments.Height + 4
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =1
                            PaddingRight: =1
                            PaddingTop: =1.5
                            Visible: =!IsBlank(LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments)
                            Width: =icon_ChecklistComments.Width + 8
                            X: =(Parent.Width - Self.Width) - 2
                            Y: =(Parent.Height - Self.Height) / 2
                            ZIndex: =4

                            icon_ChecklistComments As icon.Message:
                                Color: =RGBA(0, 0, 0, 1)
                                Height: =16
                                HoverColor: =ColorFade(Self.Color, 40%)
                                Icon: =Icon.Message
                                OnSelect: |-
                                    =Select(buildComments);
                                    Set(isNewCommentVisible, true);
                                Tooltip: ="View Checklist Comments"
                                Width: =16
                                X: =(Parent.Width - Self.Width) / 2
                                Y: =(Parent.Height - Self.Height) / 2
                                ZIndex: =1

                        circle_ChecklistComments_Indicicator As circle:
                            Fill: =RGBA(255, 0, 0, 1)
                            Height: =8
                            Visible: |
                                =If(checkComments,
                                
                                    If(VC_Icon_ChecklistComments_Badge.Visible,
                                        With(
                                            {
                                                totalLength: Len(LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments),
                                                startingPos: If(IsBlank(Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)), 1, Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)),
                                                comments: LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments
                                            },
                                
                                            If(IsBlank(Find(First(currentUser).uid, Mid(comments, startingPos, (totalLength - startingPos)))),
                                                true,
                                                false
                                            )
                                        ),
                                        false
                                    ),
                                
                                    If(VC_Icon_ChecklistComments_Badge.Visible,
                                        With(
                                            {
                                                totalLength: Len(LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments),
                                                startingPos: If(IsBlank(Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)), 1, Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)),
                                                comments: LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments
                                            },
                                
                                            If(IsBlank(Find(First(currentUser).uid, Mid(comments, startingPos, (totalLength - startingPos)))),
                                                true,
                                                false
                                            )
                                        ),
                                        false
                                    )
                                    
                                )
                                
                                /*
                                If(VC_Icon_ChecklistComments_Badge.Visible && checkComments,
                                    With(
                                        {
                                            totalLength: Len(LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments),
                                            startingPos: If(IsBlank(Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)), 1, Find("viewedBy", LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments, 1)),
                                            comments: LookUp('OBOF-DS-checklistOutProcessing', ID = ThisItem.ID).comments
                                        },
                                
                                        If(IsBlank(Find(First(currentUser).uid, Mid(comments, startingPos, (totalLength - startingPos)))),
                                            true,
                                            false
                                        )
                                    ),
                                    false
                                )
                                */
                            Width: =8
                            X: =VC_Icon_ChecklistComments_Badge.X + 13
                            Y: =VC_Icon_ChecklistComments_Badge.Y + 2
                            ZIndex: =5

                    btn_HealJSON_HIDDEN As button:
                        BorderColor: =RGBA(79, 90, 94, 1)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        Fill: =RGBA(255, 218, 138, 0.57)
                        Font: =Font.'Segoe UI'
                        Height: =18
                        HoverBorderColor: =RGBA(79, 90, 94, 1)
                        HoverColor: =RGBA(53, 61, 63, 1)
                        HoverFill: =RGBA(152, 208, 70, 1)
                        OnSelect: =Select(healJSON);
                        PressedBorderColor: =RGBA(79, 90, 94, 1)
                        RadiusBottomLeft: =6
                        RadiusBottomRight: =6
                        RadiusTopLeft: =6
                        RadiusTopRight: =6
                        Size: =9
                        Text: ="Heal JSON Exception"
                        Visible: =false
                        ZIndex: =4

                badge_isDelegated As Badge:
                    AccessibleLabel: =""
                    Appearance: ='BadgeCanvas.Appearance'.Filled
                    BasePaletteColor: =
                    Content: ="DELEGATED"
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =18
                    Shape: ='BadgeCanvas.Shape'.Rounded
                    ThemeColor: ='BadgeCanvas.ThemeColor'.Important
                    Visible: =ThisItem.isDelegated
                    Width: =76
                    X: =HC_Footer.X + 10
                    Y: =(HC_Footer.Y - Self.Height) + 6
                    ZIndex: =4

                selected_Indicator As rectangle:
                    BorderColor: =RGBA(102, 102, 102, 1)
                    Fill: =RGBA(40, 112, 134, 1)
                    Height: =CC_GalleryCard.Height
                    OnSelect: =Select(Parent)
                    Visible: =ThisItem.IsSelected
                    Width: =6
                    Y: =CC_GalleryCard.Y //(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =5

                card_Details As htmlViewer:
                    DisplayMode: =DisplayMode.View
                    Font: =Font.'Segoe UI'
                    Height: =130
                    HtmlText: |
                        =/*If(ThisItem.outprocessingState.Value = "Completed", "N|A", CountIf(numDays, Value in [2,3,4,5,6])) & "</strong></td>*/
                        If(!IsBlank(ThisItem.ID),
                            With(
                                {
                                    isDesigneeRegistered: If(LookUp('GLBL-DS-userRegistration', uid = First(Ungroup(ThisItem.designee, "uid")).uid).uid, true, false),
                                    varDateMod: If(Weekday(DateAdd(ThisItem.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                    DateAdd(ThisItem.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                    If(Weekday(DateAdd(ThisItem.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                        DateAdd(ThisItem.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                            DateAdd(ThisItem.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)
                                                    )
                                                )
                                },
                        $"<table>
                        <tr>
                        	<td style='padding: 0px 0px 0px 0px;'>Created Date: </td>
                        		<td style='padding: 0px 0px 0px 0px;'><strong>{Text(DateValue(ThisItem.Created))}</strong></td>
                        		
                        	<td style='padding: 0px 0px 0px 10px;'>Supervisor: </td>
                        		<td style='padding: 0px 0px 0px 10px;'><strong>{First(Ungroup(ThisItem.supervisor, "givenName")).givenName & ", " & First(Ungroup(ThisItem.supervisor, "surname")).surname}</strong></td>
                        </tr>
                        <tr>
                        	<td style='padding: 0px 0px 0px 0px;'>Departure Date: </td>
                        		<td><strong>{Text(DateValue(ThisItem.departureDate))}</strong></td>
                        		
                        	<td style='padding: 0px 0px 0px 10px;'>Designee: </td>
                        		<td style='padding: 0px 0px 0px 10px;'><strong>{First(Ungroup(ThisItem.designee, "givenName")).givenName & ", " & First(Ungroup(ThisItem.designee, "surname")).surname}</strong></td>
                        </tr>
                        <tr>
                        	<td style='padding: 0px 0px 0px 0px;'>Days Until Departure: </td>
                        		<td style='padding: 0px 0px 0px 0px;'><strong>{If(ThisItem.outprocessingState.Value = "Completed", "N|A", 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0))}</strong></td>
                        		
                        	<td style='padding: 0px 0px 0px 10px;'>Checklist State: </td>
                        		<td style='padding: 0px 0px 0px 10px;'><strong>{Text(ThisItem.outprocessingState.Value)}</strong></td>
                        </tr>
                        </tr>
                        <tr style='span'>
                        	<td style='padding: 0px 0px 0px 0px;'>Organization: </td>
                        		<td colspan='3' style='padding: 0px 0px 0px 0px;'><strong>{First(Ungroup(ThisItem.employee, "organizationCode")).organizationCode} / {First(Ungroup(ThisItem.employee, "organization_v2")).organization_v2}</strong></td>
                        </tr>
                        {If(Find("Transfer",Text(ThisItem.checklistStatus.Value)) > 0,
                            $"
                        <tr>
                        <td style='padding: 0px 0px 0px 0px;'>New Employer Agency: </td>
                            <td colspan='3' style='padding: 0px 0px 0px 0px;'><strong>{Text(ThisItem.newEmployerAgency)}</strong></td>
                        </tr>
                        <tr>
                        <td style='padding: 0px 0px 0px 0px;'>New Employer Address: </td>
                            <td colspan='3' style='padding: 0px 0px 0px 0px;'><strong>{Text(ThisItem.newEmployerAgencyAddress)}</strong></td>
                        </tr>
                            "
                        )}
                        </table>"
                                /*<tr>
                        	<td style='padding: 0px 0px 0px 0px;'>New Employer Agency: </td>
                        		<td colspan='3' style='padding: 0px 0px 0px 0px;'><strong>{Text(ThisItem.newEmployerAgency)}</strong></td>
                        </tr>
                        <tr>
                        	<td style='padding: 0px 0px 0px 0px;'>New Employer Address: </td>
                        		<td colspan='3' style='padding: 0px 0px 0px 0px;'><strong>{Text(ThisItem.newEmployerAgencyAddress)}</strong></td>
                        </tr>*/
                            )
                        )
                    PaddingBottom: =0
                    PaddingLeft: =25
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =9
                    Visible: =!IsBlank(card_Details.HtmlText)
                    Width: =CC_GalleryCard.Width
                    Y: =40  
                    ZIndex: =6

                card_DisplayName As label:
                    Color: =If(ThisItem.IsSelected, RGBA(0, 0, 0, 1), RGBA(40, 45, 47, 1))
                    DisplayMode: =DisplayMode.View
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Bold, FontWeight.Normal)
                    Height: =20
                    PaddingBottom: =0
                    PaddingLeft: =16
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =First(Ungroup(ThisItem.employee, "displayName")).displayName
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =CC_GalleryCard.Width - card_ChecklistID.Width
                    Y: =If(ThisItem.IsSelected, 10, 15)
                    ZIndex: =7

                card_ChecklistID As label:
                    Align: =Align.Right
                    Color: =If(ThisItem.IsSelected, RGBA(0, 0, 0, 1), RGBA(40, 45, 47, 1))
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold //If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =20
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =9
                    Text: ="CHKID" & ThisItem.ID
                    Width: =200
                    X: =If(First(currentUser).isTFManager || ThisItem.uidSupervisor = First(currentUser).uid, card_DisplayName.Width - 25, card_DisplayName.Width - 8)
                    Y: =If(ThisItem.IsSelected, 10, 15)
                    ZIndex: =8

                icon_EditChecklistItem As icon.OptionsList:
                    Color: =RGBA(79, 90, 94, 1)
                    DisplayMode: =If(ThisItem.IsSelected, DisplayMode.Edit, DisplayMode.View)
                    Height: =18
                    Icon: =Icon.Items
                    OnSelect: =Set(isEditChecklistVisible, true);
                    Rotation: =90
                    Visible: =If(ThisItem.uidSupervisor = First(currentUser).uid || First(currentUser).isTFManager, true, false)
                    Width: =18
                    X: =card_ChecklistID.X + card_ChecklistID.Width
                    Y: =If(ThisItem.IsSelected, 11, 16)
                    ZIndex: =9

        HC_Checklist_EmployeeChecklistTasks As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =(Parent.Height - HC_GalleryChecklistControls.Height) -20
            LayoutJustifyContent: =LayoutJustifyContent.End
            LayoutMode: =LayoutMode.Auto
            Width: =(Parent.Width - gallery_checklists.TemplateWidth / 2.4) - 20
            X: =Parent.Width - Self.Width
            Y: =(Parent.Height - Self.Height) - 1
            ZIndex: =3

            "gallery_checklistTasks As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                AlignInContainer: =AlignInContainer.Center
                Default: ={}
                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,0))
                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                Height: =Parent.Height
                Items: |-
                    =If(!IsBlank(gallery_checklists.Selected),
                        Sort(Filter(col_checklistTasks, groupValue = selectedMenuHeaderScope), actionItem, SortOrder.Ascending)
                    )
                Layout: =Layout.Vertical
                LayoutMinHeight: =287
                LayoutMinWidth: =10
                LoadingSpinner: =LoadingSpinner.Data
                OnSelect: =
                ShowNavigation: =true
                ShowScrollbar: =false
                TemplatePadding: =10
                TemplateSize: =If(combobox_GalleryChecklistTasksRows.Selected.Value = 1, 250, 175)
                Width: =Parent.Width
                WrapCount: =combobox_GalleryChecklistTasksRows.Selected.Value
                ZIndex: =1

                CC_taskCardBorder As groupContainer.manualLayoutContainer:
                    BorderColor: =RGBA(53, 61, 63, 1)
                    BorderThickness: =1
                    DropShadow: =DropShadow.Semibold
                    Fill: =RGBA(207, 211, 206, 0.5)
                    Height: =Parent.TemplateHeight
                    RadiusBottomLeft: =10
                    RadiusBottomRight: =10
                    RadiusTopLeft: =10
                    RadiusTopRight: =10
                    Width: =Parent.TemplateWidth //(Parent.Width / 2) - Parent.TemplatePadding
                    ZIndex: =1

                DynC_Signatures As groupContainer.horizontalAutoLayoutContainer:
                    ContentLanguage: =
                    DropShadow: =DropShadow.None
                    Height: |-
                        =Parent.TemplateHeight
                        //125
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: |-
                        =LayoutDirection.Vertical
                        //If(combobox_GalleryChecklistTasksRows.Selected.Value = 1, LayoutDirection.Horizontal, LayoutDirection.Vertical)
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =5
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - Self.Height
                    ZIndex: =2

                    VC_ActionBank_1_NOT_USED As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =26
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =If(combobox_GalleryChecklistTasksRows.Selected.Value = 1, LayoutDirection.Horizontal, LayoutDirection.Vertical)
                        LayoutJustifyContent: =LayoutJustifyContent.End
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        PaddingRight: =5
                        Visible: |-
                            =false
                            //If(ThisItem.isNAACB && combobox_GalleryChecklistTasksRows.Selected.Value = 1, true, false)
                        Width: =Parent.Width
                        X: =(gallery_checklists.TemplateWidth- Self.Width - 5) / 2
                        Y: =gallery_checklistTasks.TemplateHeight - Self.Height - 5
                        ZIndex: =1

                        signatureNA_1 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            Visible: =If(ThisItem.isNAACB && combobox_GalleryChecklistTasksRows.Selected.Value = 1, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =1

                            icon_SignatureEraseNA As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureNAACB.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(0,0,0,0)//RGBA(244, 244, 244, 1)
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureNAACB.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(signatureType, "signatureNAACB");
                                    Select(eraseSignatureTask)
                                Tooltip: ="Erase Signature"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateNA As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureNAACB.isComplete = 1, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                X: =40
                                Y: =40
                                ZIndex: =2

                            btn_SignatureNA As button:
                                BorderColor: =RGBA(13, 50, 61, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |
                                    =If( 1 in ThisItem.taskCompletionTelemetry.Value, 
                                        DisplayMode.Disabled, 
                                        DisplayMode.Edit
                                    )
                                Fill: |-
                                    =ColorFade(ColorValue("#abc4ab"), 0.1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(52, 98, 108, 1)
                                HoverFill: =ColorFade(Self.Fill, -0.3)
                                LayoutMinWidth: =100
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(signatureType, "signatureNAACB");
                                    Select(signatureTask)
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="N|A"
                                Tooltip: ="signatureEmployee"
                                Visible: =If(ThisItem.signatureNAACB.isComplete = 1, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateEmployee.Width) - 3
                                ZIndex: =4

                            signature_NA As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureNAACB.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureNA.Text & Char(10) &
                                    ThisItem.signatureNAACB.signature & Char(10) &
                                    "Action completed key identifier: " & ThisItem.signatureNAACB.uid & Char(10) &
                                    If(ThisItem.signatureNAACB.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureNAACB.date)
                                Visible: =If(ThisItem.signatureNAACB.isComplete = 1, true, false)
                                Width: =256
                                X: =207
                                Y: =60
                                ZIndex: =5

                    VC_ActionBank_2 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Center
                        BorderColor: =ColorFade(Self.Fill, -0.5)
                        BorderThickness: =0.25
                        DropShadow: =DropShadow.None
                        Fill: |-
                            =RGBA(0,0,0,0)//ColorFade(ColorValue("#CFD3CE"), -0.01)
                        FillPortions: |-
                            =0
                            //If(combobox_GalleryChecklistTasksRows.Selected.Value = 1 || IsBlank(combobox_GalleryChecklistTasksRows.Selected.Value), 0, 1)
                        Height: |-
                            =Parent.Height
                            //If(combobox_GalleryChecklistTasksRows.Selected.Value = 1 || IsBlank(combobox_GalleryChecklistTasksRows.Selected.Value), 26, 156)
                        LayoutAlignItems: =LayoutAlignItems.End
                        LayoutDirection: |-
                            =LayoutDirection.Vertical
                            //If(combobox_GalleryChecklistTasksRows.Selected.Value = 1 || IsBlank(combobox_GalleryChecklistTasksRows.Selected.Value), LayoutDirection.Horizontal, LayoutDirection.Vertical)
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.End
                        LayoutMinHeight: =26
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        PaddingRight: =5
                        RadiusBottomLeft: =6
                        RadiusBottomRight: =6
                        RadiusTopLeft: =6
                        RadiusTopRight: =6
                        Width: =Parent.Width
                        X: =(gallery_checklists.TemplateWidth- Self.Width - 5) / 2
                        Y: =gallery_checklistTasks.TemplateHeight - Self.Height - 5
                        ZIndex: =2

                        extendAttributes As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =100
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =ThisItem.extendAttributes
                            Width: =(CC_taskCardBorder.Width - VC_taskDetails.Width) - 35
                            X: =388
                            Y: =80
                            ZIndex: =1

                            label_extendAttributesDescription_1 As label:
                                Align: =Align.Right
                                AlignInContainer: =AlignInContainer.Start
                                FontWeight: =FontWeight.Semibold
                                Height: =18
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =15
                                PaddingTop: =0
                                Size: =9
                                Text: =If(CountRows(ThisItem.extendAttributesJSON) >= 1, Index(ThisItem.extendAttributesJSON, 1).description)
                                VerticalAlign: =VerticalAlign.Top
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 1, !IsBlank(Index(ThisItem.extendAttributesJSON, 1).ID))
                                Width: =Parent.Width
                                ZIndex: =1

                            radio_extendAttributes_1 As radio:
                                AccessibleLabel: =
                                Align: =Align.Right
                                AlignInContainer: =AlignInContainer.Start
                                Default: =If(CountRows(ThisItem.extendAttributesJSON) >= 1, Index(ThisItem.extendAttributesJSON, 1).response)
                                DisplayMode: |-
                                    =If((First(currentUser).isTFManager || gallery_checklists.Selected.uidUser = First(currentUser).uid || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0 && !ThisItem.notificationDetails.isNotified,
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =22
                                Items: |-
                                    =Table(
                                        {
                                            Value: "Yes"
                                        },
                                        {
                                            Value: "No"
                                        }
                                    )
                                Layout: =Layout.Horizontal
                                LayoutMinHeight: =16
                                LineHeight: =0.5
                                OnChange: |-
                                    =/*
                                    Set(extendAttributesJSON_ID, 1);
                                    Set(extendAttributesJSON_response, Self.Selected.Value);
                                    
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    Select(updateExtendAttributesTask);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    */
                                OnSelect: |-
                                    =Set(extendAttributesJSON_ID, 1);
                                    Set(extendAttributesJSON_response, Self.Selected.Value);
                                    //Set(runBuildChecklistTasks, false);
                                    
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.UpdateExtendedAttributes(extendAttributesJSON_ID, ThisItem.actionItem, extendAttributesJSON_response);
                                    //Select(updateExtendAttributesTask);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                PaddingBottom: =0
                                PaddingLeft: =Self.Width - 150
                                PaddingTop: =0
                                RadioSelectionFill: =RGBA(40, 112, 134, 1)
                                RadioSize: =16
                                Size: =9
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 1, !IsBlank(Index(ThisItem.extendAttributesJSON, 1).ID))
                                Width: =Parent.Width
                                ZIndex: =2

                            label_extendAttributesDescription_2 As label:
                                Align: =Align.Right
                                FontWeight: =FontWeight.Semibold
                                Height: =18
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =15
                                PaddingTop: =0
                                Size: =9
                                Text: =If(CountRows(ThisItem.extendAttributesJSON) >= 2, Index(ThisItem.extendAttributesJSON, 2).description)
                                VerticalAlign: =VerticalAlign.Top
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 2, !IsBlank(Index(ThisItem.extendAttributesJSON, 2).ID))
                                Width: =Parent.Width
                                ZIndex: =3

                            radio_extendAttributes_2 As radio:
                                Default: =If(CountRows(ThisItem.extendAttributesJSON) >= 2, Index(ThisItem.extendAttributesJSON, 2).response)
                                DisplayMode: |-
                                    =If((First(currentUser).isTFManager || gallery_checklists.Selected.uidUser = First(currentUser).uid || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0 && !ThisItem.notificationDetails.isNotified,
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                Height: =22
                                Items: |-
                                    =Table(
                                        {
                                            Value: "Yes"
                                        },
                                        {
                                            Value: "No"
                                        }
                                    )
                                Layout: =Layout.Horizontal
                                LayoutMinHeight: =16
                                OnSelect: |-
                                    =Set(extendAttributesJSON_ID, 2);
                                    Set(extendAttributesJSON_response, Self.Selected.Value);
                                    //Set(runBuildChecklistTasks, false);
                                    
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.UpdateExtendedAttributes(extendAttributesJSON_ID, ThisItem.actionItem, extendAttributesJSON_response);
                                    //Select(updateExtendAttributesTask);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                PaddingBottom: =0
                                PaddingLeft: =Self.Width - 150
                                PaddingTop: =0
                                RadioSelectionFill: =RGBA(40, 112, 134, 1)
                                RadioSize: =16
                                Size: =9
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 2, !IsBlank(Index(ThisItem.extendAttributesJSON, 2).ID))
                                Width: =Parent.Width
                                ZIndex: =4

                            label_extendAttributesDescription_3 As label:
                                FontWeight: =FontWeight.Semibold
                                Height: =18
                                PaddingBottom: =0
                                PaddingLeft: =10
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =9
                                Text: =If(CountRows(ThisItem.extendAttributesJSON) >= 3, Index(ThisItem.extendAttributesJSON, 3).description)
                                VerticalAlign: =VerticalAlign.Bottom
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 3, !IsBlank(Index(ThisItem.extendAttributesJSON, 3).ID))
                                Width: =Parent.Width
                                ZIndex: =5

                            radio_extendAttributes_3 As radio:
                                Default: =If(CountRows(ThisItem.extendAttributesJSON) >= 3, Index(ThisItem.extendAttributesJSON, 3).response)
                                DisplayMode: |-
                                    =If((gallery_checklists.Selected.uidUser = First(currentUser).uid || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0 && !ThisItem.notificationDetails.isNotified,
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                Height: =22
                                Items: |-
                                    =Table(
                                        {
                                            Value: "Yes"
                                        },
                                        {
                                            Value: "No"
                                        }
                                    )
                                Layout: =Layout.Horizontal
                                LayoutMinHeight: =16
                                OnSelect: |-
                                    =Set(extendAttributesJSON_ID, 3);
                                    Set(extendAttributesJSON_response, Self.Selected.Value);
                                    //Set(runBuildChecklistTasks, false);
                                    
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.UpdateExtendedAttributes(extendAttributesJSON_ID, ThisItem.actionItem, extendAttributesJSON_response);
                                    //Select(updateExtendAttributesTask);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                PaddingBottom: =0
                                PaddingLeft: =Self.Width - 150
                                PaddingTop: =0
                                RadioSelectionFill: =RGBA(40, 112, 134, 1)
                                RadioSize: =16
                                Size: =9
                                Visible: =If(CountRows(ThisItem.extendAttributesJSON) >= 3, !IsBlank(Index(ThisItem.extendAttributesJSON, 3).ID))
                                Width: =Parent.Width
                                ZIndex: =6

                        serviceRequestCreateAndRecord As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =100
                            LayoutAlignItems: =LayoutAlignItems.End
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =6
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingRight: =2
                            PaddingTop: =1
                            Visible: =ThisItem.createServiceRequest
                            Width: =(CC_taskCardBorder.Width - VC_taskDetails.Width) - 35
                            X: =388
                            Y: =80
                            ZIndex: =2

                            label_ChangeGearServiceRequest As label:
                                Align: =Align.Right
                                FontWeight: =FontWeight.Semibold
                                Height: =18
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =15
                                PaddingTop: =0
                                Size: =9
                                Text: ="Submit ChanegGear Service Request"
                                VerticalAlign: =VerticalAlign.Bottom
                                Width: =Parent.Width
                                ZIndex: =1

                            input_ChangeGearServiceRequest As text:
                                Align: =Align.Right
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Default: |-
                                    =If(ThisItem.isServiceRequestCompleted,
                                        ThisItem.serviceRequestNumber
                                    )
                                DisabledColor: =RGBA(40, 112, 134, 1)
                                DisplayMode: |-
                                    =If(gallery_checklists.Selected.uidUser = First(currentUser).uid || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid, 
                                        If(ThisItem.isServiceRequestCompleted, 
                                            DisplayMode.Disabled, 
                                            DisplayMode.Edit
                                        ),
                                        DisplayMode.Disabled
                                    )
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HintText: ="SR-1234567"
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =254
                                ZIndex: =3

                            btn_AttachChangeGearServiceRequest As button:
                                BorderColor: =RGBA(13, 50, 61, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |
                                    =If(
                                        (gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid || gallery_checklists.Selected.uidUser = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =20
                                HoverBorderColor: =RGBA(13, 50, 61, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //RGBA(52, 98, 108, 1)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =//Set(runBuildChecklistTasks, true);
                                    //Set(runRefreshChecklists, false);
                                    Set(serviceRequestNumber, input_ChangeGearServiceRequest.Text);
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    If(IsMatch(Upper(input_ChangeGearServiceRequest.Text), "SR-\d+\d+\d+\d+\d+\d+\d+"), 
                                        DataSourceComponent.AttachChangerGearServiceRequest(ThisItem.actionItem, serviceRequestNumber);
                                        //Select(attachChangerGearServiceRequest);
                                        DataSourceComponent.UpdateChecklistJSON();
                                        DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID), 
                                        Notify("SERVICE REQUEST NUMBER BAD FORMAT. Use the appropriate format example: SR-0000000", NotificationType.Error)
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Attach Service Request Num."
                                Tooltip: =Self.Text & " Siganture Block"
                                Visible: |-
                                    =//If(ThisItem.signatureEmployee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                    If(input_ChangeGearServiceRequest.Text = ThisItem.serviceRequestNumber, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateEmployee.Width) - 3
                                ZIndex: =4

                        notifyClearingOffice As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(ThisItem.autoNotify, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =3

                            icon_SPACER_DO_NOT_REMOVE As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =RGBA(0, 0, 0, 0)
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Bell
                                Visible: =true//If(ThisItem.signatureEmployee.isComplete = 0, false, true)
                                Width: =18
                                X: =40
                                Y: =40
                                ZIndex: =1

                            icon_notifyClearingOffice As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Bell
                                Visible: =true//If(ThisItem.signatureEmployee.isComplete = 0, false, true)
                                Width: =18
                                X: =40
                                Y: =40
                                ZIndex: =2

                            btn_notifyClearingOffice As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =If(ThisItem.notificationDetails.isNotified, RGBA(255,255,255,1), RGBA(53, 61, 63, 1))
                                DisplayMode: |-
                                    =If(ThisItem.notificationDetails.isNotified,
                                        DisplayMode.Edit,
                                        If(ThisItem.extendAttributes,
                                            If((First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0 && !("false" in Concat(ThisItem.extendAttributesJSON, responded, ",") && !ThisItem.notificationDetails.isNotified),
                                                DisplayMode.Edit,
                                                DisplayMode.Disabled
                                            ),
                                            If((First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0 && !ThisItem.notificationDetails.isNotified,
                                                DisplayMode.Edit,
                                                DisplayMode.Disabled
                                            )
                                        )
                                    )
                                Fill: |-
                                    =If(ThisItem.notificationDetails.isNotified, ColorValue("#36484b"), RGBA(180, 214, 250, 1))// RGBA(180, 214, 250, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =If(ThisItem.notificationDetails.isNotified, FontWeight.Normal, FontWeight.Bold)
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =ColorFade(Self.Fill, 0.15)
                                LayoutMinWidth: =100
                                OnSelect: |-
                                    =Set(clearingOffice, LookUp('OBOF-DS-templateOutProcessingChecklist', ThisItem.uid = uid));
                                    Select(buildMandatoryPOC);
                                    Set(isNotifyClearingOfficeVisible, true)
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: |
                                    =If(ThisItem.notificationDetails.isNotified,
                                        "Notified " & ThisItem.notificationDetails.timestamp,
                                        "Send Notification"
                                    )
                                Tooltip: ="Notify Clearing Office"
                                Visible: =If(ThisItem.signatureEmployee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateEmployee.Width) - 3
                                ZIndex: =3

                        signatureDepartingEmployee As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(ThisItem.isEmployeeACB, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =4

                            icon_SignatureEraseDepartingEmployee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureEmployee.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(0,0,0,0)//RGBA(244, 244, 244, 1)
                                DisabledFill: =//Self.Fill
                                DisplayMode: |-
                                    =If(
                                        ThisItem.signatureEmployee.uid = First(currentUser).uid,
                                        DisplayMode.Edit, 
                                        DisplayMode.View
                                    )
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureEmployee");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    //Notify($"{vcc}");
                                    If(vcc,
                                        //Notify("P3");
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Departing Employee Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateDepartingEmployee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureEmployee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Visible: =true//If(ThisItem.signatureEmployee.isComplete = 0, false, true)
                                Width: =18
                                X: =40
                                Y: =40
                                ZIndex: =2

                            btn_SignatureDepartingEmployee As button:
                                BorderColor: =RGBA(13, 50, 61, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |
                                    =If(
                                        (First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid || gallery_checklists.Selected.uidUser = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(13, 50, 61, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //RGBA(52, 98, 108, 1)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =If(ThisItem.actionItem = 36 || ThisItem.actionItem = 37,
                                        Set(transactLogScope, "addSignature");
                                        Set(signatureType, "signatureEmployee");
                                        DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                        If(DataSourceComponent.ValidateCompletionSignature(),
                                            DataSourceComponent.RecordTransactLog("addSignature");
                                            DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                            DataSourceComponent.UpdateChecklistJSON();
                                            DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                            UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()})
                                        ),
                                        Set(isBuildChecklistTasksRunning, true);
                                        Set(runBuildChecklistTasks, true);
                                        Set(transactLogScope, "addSignature");
                                        Set(signatureType, "signatureEmployee");
                                        DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                        DataSourceComponent.RecordTransactLog("addSignature");
                                        DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                        DataSourceComponent.UpdateChecklistJSON();
                                        DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                        UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()})
                                    );
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Departing Employee"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureEmployee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateEmployee.Width) - 3
                                ZIndex: =4

                            signature_DepartingEmployee As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureEmployee.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                OnSelect: =
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureDepartingEmployee.Text & " Signature" & Char(10) &
                                    ThisItem.signatureEmployee.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureEmployee.uid & Char(10) &
                                    If(ThisItem.signatureEmployee.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureEmployee.date)
                                Visible: =If(ThisItem.signatureEmployee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureSupervisorDesignee As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.End
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Visible: =If(ThisItem.isSupervisorACB && ThisItem.isDesigneeACB, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =5

                            icon_SignatureEraseSupervisorDesignee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureSupervisorDesignee.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureSupervisorDesignee.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureSupervisorDesignee");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    //Notify($"{vcc}");
                                    If(vcc,
                                        //Notify("P3");
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Supervisor / Designee Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateSupervisorDesignee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureSupervisorDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                ZIndex: =2

                            btn_SignatureSupervisorDesignee As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(
                                        (!ThisItem.signatureNAACB.isComplete && (First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid)) && ThisItem.signatureNAACB.isComplete = 0 && ThisItem.signatureNAACB.isComplete = 0 && First(currentUser).uid <> gallery_checklists.Selected.uidUser,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //ColorFade(RGBA(56, 96, 178, 1), -20%)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =If(ThisItem.actionItem = 36 || ThisItem.actionItem = 37,
                                        Set(transactLogScope, "addSignature");
                                        Set(signatureType, "signatureSupervisorDesignee");
                                        Set(signatureTypeArray, ["signatureEmployee", "signatureClearingOffice", "signatureSupervisorDesignee"]);
                                        DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                        If(DataSourceComponent.ValidateCompletionSignature(),
                                            DataSourceComponent.RecordTransactLog("addSignature");
                                            UpdateContext({returnCode: DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem)});
                                            DataSourceComponent.UpdateChecklistJSON();
                                            DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                            UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                        ),
                                    
                                        Set(isBuildChecklistTasksRunning, true);
                                        Set(runBuildChecklistTasks, true);
                                        Set(transactLogScope, "addSignature");
                                        Set(signatureType, "signatureSupervisorDesignee");
                                        DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                        DataSourceComponent.RecordTransactLog("addSignature");
                                        UpdateContext({returnCode: DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem)});
                                        DataSourceComponent.UpdateChecklistJSON();
                                        DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                        UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    );
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =1
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Supervisor / Designee"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureSupervisorDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateSupervisorDesignee.Width) - 3
                                ZIndex: =4

                            signature_SupervisorDesignee As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='99%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureSupervisorDesignee.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                    //"&Self.Width&"
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureSupervisorDesignee.Text & " Signature" & Char(10) &
                                    ThisItem.signatureSupervisorDesignee.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureSupervisorDesignee.uid & Char(10) &
                                    If(ThisItem.signatureSupervisorDesignee.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureSupervisorDesignee.date) 
                                Visible: =If(ThisItem.signatureSupervisorDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureSupervisor As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(ThisItem.isSupervisorACB && !ThisItem.isDesigneeACB, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =6

                            icon_SignatureEraseSupervisor As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureSupervisor.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureSupervisor.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureSupervisor");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Supervisor Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateSupervisor As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureSupervisor.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                ZIndex: =2

                            btn_SignatureSupervisor As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(
                                        (First(currentUser).isTFManager || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //ColorFade(RGBA(56, 96, 178, 1), -20%)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "addSignature");
                                    Set(signatureType, "signatureSupervisor");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("addSignature");
                                    DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Supervisor"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureSupervisor.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateSupervisorDesignee.Width) - 3
                                ZIndex: =4

                            signature_Supervisor As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureSupervisor.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureSupervisor.Text & " Signature" & Char(10) &
                                    ThisItem.signatureSupervisor.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureSupervisor.uid & Char(10) &
                                    If(ThisItem.signatureSupervisor.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureSupervisor.date)
                                Visible: =If(ThisItem.signatureSupervisor.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureDesignee As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(!ThisItem.isSupervisorACB && ThisItem.isDesigneeACB, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =7

                            icon_SignatureEraseDesignee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureDesignee.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureDesignee.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureDesignee");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Designee Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateDesignee As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                ZIndex: =2

                            btn_SignatureDesignee As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(
                                        (First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid) && ThisItem.signatureNAACB.isComplete = 0,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //ColorFade(RGBA(56, 96, 178, 1), -20%)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "addSignature");
                                    Set(signatureType, "signatureDesignee");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("addSignature");
                                    DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Designee"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateSupervisorDesignee.Width) - 3
                                ZIndex: =4

                            signature_Designee As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureDesignee.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureDesignee.Text & " Signature" & Char(10) &
                                    ThisItem.signatureDesignee.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureDesignee.uid & Char(10) &
                                    If(ThisItem.signatureDesignee.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureDesignee.date)
                                Visible: =If(ThisItem.signatureDesignee.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureMSO As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(ThisItem.isMSOACB, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =8

                            icon_SignatureEraseMSO As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureMSO.uid = First(currentUser).uid, RGBA(0, 0, 0, 1), RGBA(0,0,0,0))
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureMSO.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureMSO");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Mission Support Siganture Block"
                                Visible: =true//If(ThisItem.signatureSupervisorDesignee.isComplete = 0, false, true)
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateMSO As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureMSO.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Visible: =true//If(ThisItem.signatureSupervisorDesignee.isComplete = 0, false, true)
                                Width: =18
                                ZIndex: =2

                            btn_SignatureMSO As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(
                                        (First(currentUser).isTFManager || First(currentUser).isSupervisor || First(currentUser).isMSO) && ThisItem.signatureNAACB.isComplete = 0 && First(currentUser).uid <> gallery_checklists.Selected.uidUser,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //ColorFade(RGBA(56, 96, 178, 1), -20%)
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "addSignature");
                                    Set(signatureType, "signatureMSO");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("addSignature");
                                    DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Mission Support"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureMSO.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateSupervisorDesignee.Width) - 3
                                ZIndex: =4

                            signature_MSO As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureMSO.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                    //"&Self.Width&"
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureMSO.Text & " Signature" & Char(10) &
                                    ThisItem.signatureMSO.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureMSO.uid & Char(10) &
                                    If(ThisItem.signatureMSO.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureMSO.date)
                                Visible: =If(ThisItem.signatureMSO.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureClearingOffice As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: =If(ThisItem.isClearingOffice, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =9

                            icon_SignatureEraseClearingOffice As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureClearingOffice.uid = First(currentUser).uid, RGBA(0, 0, 0, 1), RGBA(0,0,0,0))
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureClearingOffice.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureClearingOffice");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove Clearing Office Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateClearingOffice As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureClearingOffice.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                ZIndex: =2

                            btn_SignatureClearingOffice As button:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(
                                        (First(currentUser).isTFManager || First(currentUser).isClearingOffice) && ThisItem.signatureNAACB.isComplete = 0 && First(currentUser).uid <> gallery_checklists.Selected.uidUser,
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                Fill: =RGBA(175, 190, 190, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: |-
                                    =ColorFade(Self.Fill, 0.15)
                                    //ColorFade(RGBA(56, 96, 178, 1), -20%)
                                LayoutMinWidth: =100
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "addSignature");
                                    Set(signatureType, "signatureClearingOffice");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("addSignature");
                                    DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="Clearing Office"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureClearingOffice.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateSupervisorDesignee.Width) - 3
                                ZIndex: =4

                            signature_ClearingOffice As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureClearingOffice.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                    //"&Self.Width&"
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureClearingOffice.Text & " Signature" & Char(10) &
                                    ThisItem.signatureClearingOffice.signature & Char(10) &
                                    "Signature key identifier: " & ThisItem.signatureClearingOffice.uid & Char(10) &
                                    If(ThisItem.signatureClearingOffice.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureClearingOffice.date)
                                Visible: =If(ThisItem.signatureClearingOffice.isComplete = 1 && ThisItem.signatureNAACB.isComplete = 0, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                        signatureNA_2 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =1
                            Visible: |-
                                =If(ThisItem.isNAACB, true, false)
                                //If(ThisItem.isNAACB && combobox_GalleryChecklistTasksRows.Selected.Value = 2, true, false)
                            Width: =293
                            X: =388
                            Y: =80
                            ZIndex: =10

                            icon_SignatureEraseNA_1 As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureNAACB.uid = First(currentUser).uid, RGBA(0,0,0,1), RGBA(0,0,0,0))
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(0,0,0,0)//RGBA(244, 244, 244, 1)
                                DisabledFill: =//Self.Fill
                                DisplayMode: =If(ThisItem.signatureNAACB.uid = First(currentUser).uid, DisplayMode.Edit, DisplayMode.View)
                                Height: =18
                                HoverColor: |-
                                    =RGBA(255,0,0,1)
                                    //ColorFade(Self.Color, 20%)
                                HoverFill: |-
                                    =
                                    //Self.Fill
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "removeSignature");
                                    Set(signatureType, "signatureNAACB");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("removeSignature");
                                    DataSourceComponent.EraseSignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    );
                                Tooltip: ="Remove N|A Siganture Block"
                                Width: =18
                                ZIndex: =1

                            icon_SignatureCertificateNA_1 As icon.Draw:
                                BorderColor: =RGBA(160, 64, 8, 1)
                                Color: =If(ThisItem.signatureNAACB.isComplete = 1, RGBA(132, 40, 38, 1), RGBA(0,0,0,0))
                                DisplayMode: =DisplayMode.View
                                Height: =18
                                Icon: =Icon.Ribbon
                                Width: =18
                                X: =40
                                Y: =40
                                ZIndex: =2

                            btn_SignatureNA_1 As button:
                                BorderColor: =RGBA(13, 50, 61, 1)
                                BorderThickness: =0.25
                                Color: =RGBA(53, 61, 63, 1)
                                DisplayMode: |
                                    =If( 1 in ThisItem.taskCompletionTelemetry.Value || (gallery_checklists.Selected.uidUser = First(currentUser).uid), 
                                        DisplayMode.Disabled, 
                                        DisplayMode.Edit
                                    )
                                Fill: =RGBA(187, 228, 233, 0.4)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1), RGBA(0,0,0,0))
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =Parent.Height - 4
                                HoverBorderColor: =RGBA(53, 61, 63, 1)
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =RGBA(187, 228, 233, 1)
                                LayoutMinWidth: =100
                                OnSelect: |-
                                    =Set(isBuildChecklistTasksRunning, true);
                                    Set(runBuildChecklistTasks, true);
                                    Set(transactLogScope, "addSignature");
                                    Set(signatureType, "signatureNAACB");
                                    DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                                    DataSourceComponent.RecordTransactLog("addSignature");
                                    DataSourceComponent.SignatureTask(signatureType, ThisItem.actionItem);
                                    DataSourceComponent.UpdateChecklistJSON();
                                    DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                                    UpdateContext({vcc: DataSourceComponent.ValidateChecklistComplete()});
                                    
                                    If(vcc,
                                        DataSourceComponent.Refresh(false, globalFilter);
                                    )
                                PaddingBottom: =2
                                PaddingTop: =0
                                RadiusBottomLeft: =35
                                RadiusBottomRight: =35
                                RadiusTopLeft: =35
                                RadiusTopRight: =35
                                Size: =9
                                Text: ="N|A"
                                Tooltip: ="Add " & Self.Text & " Signature Block"
                                Visible: =If(ThisItem.signatureNAACB.isComplete = 1, false, true)
                                Width: =254//(Parent.Width - icon_SignatureCertificateEmployee.Width) - 3
                                ZIndex: =4

                            signature_NA_1 As htmlViewer:
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =26
                                HtmlText: |-
                                    ="
                                    <svg width='100%'height='"&Self.Height-6&"'style='border:solid 1px #6A7A7F;border-radius:3px;padding-left:2;background-color:#FFFFF0;'>
                                         <g font-face='segoe-ui'>
                                            <text 
                                                y='55%'
                                                textLength='"&Self.Width-9&"'
                                                lengthAdjust='spacing'
                                                textSize=1px
                                                fill='black'
                                                alignment-baseline='middle'
                                                font-variant='all-small-caps'>"
                                                    &ThisItem.signatureNAACB.signature&
                                            "</text>
                                        </g>
                                    </svg>
                                    "
                                LayoutMinHeight: =Parent.Height
                                LayoutMinWidth: =80
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =10
                                Tooltip: |-
                                    =btn_SignatureNA_1.Text & Char(10) &
                                    ThisItem.signatureNAACB.signature & Char(10) &
                                    "Action completed key identifier: " & ThisItem.signatureNAACB.uid & Char(10) &
                                    If(ThisItem.signatureNAACB.date <> Date("1970", "1", "1"), "Action completed timestamp: " & ThisItem.signatureNAACB.date)
                                Visible: =If(ThisItem.signatureNAACB.isComplete = 1, true, false)
                                Width: =Parent.Width - (36 + 3)
                                X: =207
                                Y: =60
                                ZIndex: =5

                label_DueInDays_1 As label:
                    Font: =Font.'Segoe UI'
                    PaddingBottom: =0
                    PaddingLeft: =10
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =9.5
                    Text: |-
                        ="Due " & If(ThisItem.dueInDays < 0, ThisItem.dueInDays *-1, ThisItem.dueInDays) & " days " & If(ThisItem.dueInDays < 0, "after", "before") & " departure date." & Char(10) &
                        ThisItem.dueInDaysEval.dueDate
                    VerticalAlign: =VerticalAlign.Top
                    Visible: =If(combobox_GalleryChecklistTasksRows.Selected.Value = 2, true, false)
                    Width: =210
                    Y: =HC_statusDetails.Height + HC_statusDetails.Y
                    ZIndex: =3

                VC_taskDetails As groupContainer.verticalAutoLayoutContainer:
                    BorderColor: =RGBA(106, 122, 127, 1)
                    BorderThickness: =0.25
                    DropShadow: =DropShadow.Semilight
                    Fill: =ColorFade(CC_taskCardBorder.Fill, 0.8)
                    Height: =Parent.TemplateHeight - (HC_TaskHeader.Height + HC_statusDetails.Height)
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Visible: =If(combobox_GalleryChecklistTasksRows.Selected.Value = 1, true, false)
                    Width: |-
                        =//CC_taskCardBorder.Width / 1.5
                        If(!IsBlank(First(ThisItem.extendAttributesJSON).ID), (CC_taskCardBorder.Width - signatureNA_1.Width) * 0.75, (CC_taskCardBorder.Width - signatureNA_1.Width) * 0.95)
                    X: =0 + 10
                    Y: =HC_statusDetails.Y + HC_statusDetails.Height
                    ZIndex: =4

                    html_TaskDetails As htmlViewer:
                        DisplayMode: =DisplayMode.View
                        Font: =Font.'Segoe UI'
                        Height: =Parent.Height
                        HtmlText: |-
                            =If(ThisItem.actionItem < 200, LookUp(col_templateChecklistOutprocessing, uid = ThisItem.uid).taskDetails, LookUp(col_templateChecklistOutprocessingLocalTask, uid = ThisItem.uid).taskDetails)
                            //LookUp(col_templateChecklistOutprocessing, uid = ThisItem.uid).taskDetails
                        OnSelect: =
                        PaddingBottom: =0
                        PaddingLeft: =15
                        PaddingRight: =15
                        PaddingTop: =10
                        Size: =10
                        Width: =Parent.Width
                        Y: =HC_statusDetails.Y + HC_statusDetails.Height
                        ZIndex: =1

                HC_statusDetails As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    Height: =26
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =12
                    Width: =Parent.TemplateWidth
                    Y: =label_TaskTitle.Height
                    ZIndex: =5

                    CC_taskCompletion As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(21, 68, 18, 1)
                        BorderThickness: =0.25
                        DropShadow: =DropShadow.None
                        Fill: =RGBA(166, 215, 153, 1)
                        FillPortions: =0
                        Height: =20
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Visible: =If(ThisItem.isCompleted, true, false)
                        Width: =21
                        ZIndex: =1

                        icon_TaskCompletion As icon.Diamond:
                            Color: =RGBA(53, 61, 63, 1)
                            DisplayMode: =DisplayMode.View
                            Height: =15
                            Icon: =Icon.Diamond
                            Width: =15
                            X: =2
                            Y: =2.5
                            ZIndex: =1

                    CC_daysRemainingWarning As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =If(ThisItem.dueInDaysEval.daysRemaining <= 1 && !ThisItem.isCompleted, true, false)
                        Width: =40
                        ZIndex: =2

                        badge_DaysRemainingWarning_1 As Badge:
                            AccessibleLabel: =""
                            Appearance: ='BadgeCanvas.Appearance'.Filled
                            BasePaletteColor: =
                            Content: ="OVR"
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            FontWeight: =""
                            Height: =16
                            Shape: ='BadgeCanvas.Shape'.Rounded
                            ThemeColor: ='BadgeCanvas.ThemeColor'.Warning
                            Visible: =true
                            Width: =36
                            X: =2
                            Y: =5
                            ZIndex: =1

                    label_daysRemaining As label:
                        Height: =Parent.Height
                        Size: =10
                        Text: =If(ThisItem.dueInDaysEval.daysRemaining < 0, "This task is " & (ThisItem.dueInDaysEval.daysRemaining*-1) & " days overdue", ThisItem.dueInDaysEval.daysRemaining & " business days remain until task is due")
                        Visible: =!ThisItem.isCompleted
                        Width: =310
                        ZIndex: =3

                    label_taskCompletion As label:
                        Height: =Parent.Height
                        Size: =10
                        Text: ="Task completed"
                        Visible: =ThisItem.isCompleted
                        Width: =310
                        ZIndex: =4

                HC_TaskHeader As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    Height: =40
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =5
                    PaddingLeft: =8
                    PaddingRight: =8
                    PaddingTop: =5
                    Width: =Parent.TemplateWidth
                    ZIndex: =6

                    label_TaskTitle As label:
                        FillPortions: =1
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =28
                        LayoutMinWidth: =375
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =12
                        Text: =ThisItem.actionItem & "  -  " & If(ThisItem.actionItem < 200, LookUp(col_templateChecklistOutprocessing, uid = ThisItem.uid).taskTitle, LookUp(col_templateChecklistOutprocessingLocalTask, uid = ThisItem.uid).taskTitle)
                        Width: =425
                        ZIndex: =1

                    label_DueInDays As label:
                        Align: =Align.Right
                        Font: =Font.'Segoe UI'
                        Height: =Parent.Height
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9.5
                        Text: |-
                            ="Due " & If(ThisItem.dueInDays < 0, ThisItem.dueInDays *-1, ThisItem.dueInDays) & " day(s) " & If(ThisItem.dueInDays < 0, "after", "before") & " departure date." & Char(10) &
                            ThisItem.dueInDaysEval.dueDate
                        Visible: =If(combobox_GalleryChecklistTasksRows.Selected.Value = 2, false, true)
                        Width: =210
                        ZIndex: =2

                CC_BuildChecklistTasksRunning As groupContainer.manualLayoutContainer:
                    BorderColor: =RGBA(53, 61, 63, 1)
                    BorderThickness: =1
                    DropShadow: =DropShadow.None
                    Fill: =RGBA(255, 255, 255, 0.25)
                    Height: =Parent.TemplateHeight
                    RadiusBottomLeft: =10
                    RadiusBottomRight: =10
                    RadiusTopLeft: =10
                    RadiusTopRight: =10
                    Visible: =isBuildChecklistTasksRunning
                    Width: =Parent.TemplateWidth //(Parent.Width / 2) - Parent.TemplatePadding
                    ZIndex: =7

                    glassBlur_taskLoader As htmlViewer:
                        AutoHeight: =true
                        Height: =Parent.Height
                        HtmlText: |-
                            ="
                            <div style='background-color:rgba(255,255,255,0.1);width:100%;height:"&Parent.Height&"px;backdrop-filter:blur(4px);border-radius:10px'>
                            </div>
                            "
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        Size: =9.98
                        Width: =Parent.Width - 1
                        X: =1
                        ZIndex: =1

                    Image1 As image:
                        Height: =18
                        Image: =box_ldr
                        Visible: =false
                        Width: =18
                        X: =(Parent.Width / 2) - Self.Width
                        Y: =75
                        ZIndex: =2

        CC_BuildChecklistTasksRunningLoader As groupContainer.manualLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =(Parent.Height - HC_GalleryChecklistControls.Height) -20
            Visible: =isBuildChecklistTasksRunning
            Width: =(Parent.Width - gallery_checklists.TemplateWidth / 2.4) - 20
            X: =Parent.Width - Self.Width
            Y: =(Parent.Height - Self.Height) - 1
            ZIndex: =4

            buildChecklistTasksLoader As image:
                BorderColor: =RGBA(13, 50, 61, 1)
                Height: =60
                Image: =box_ldr
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                RadiusBottomLeft: =10
                RadiusBottomRight: =10
                RadiusTopLeft: =10
                RadiusTopRight: =10
                Width: =60
                X: =(Parent.Width / 2) - Self.Width
                Y: =(Parent.Height / 2) - Self.Height
                ZIndex: =1

        CC_Float As groupContainer.manualLayoutContainer:
            BorderColor: =RGBA(79, 90, 94, 1)
            BorderThickness: =0.25
            DropShadow: =DropShadow.None
            Height: =29
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width + 1
            X: =0 - 1
            Y: =0 - 1
            ZIndex: =5

            "'GB-GradientBlur-Glass-SubHeader_2' As htmlViewer":
                Height: =HC_GalleryChecklistControls.Height
                HtmlText: |-
                    ="
                    <div style='
                    background-image: radial-gradient( circle farthest-corner at 10% 20%,  rgba(0,152,155,0.25) 0.1%, rgba(0,94,120,0.45) 94.2% );
                    width:100%;
                    height:"&HC_GalleryChecklistControls.Height-1&"px;
                    backdrop-filter:blur(5px);
                    border-radius:0px'>
                    </div>
                    "
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0.00
                PaddingTop: =0.00
                Size: =9.98
                Width: =HC_GalleryChecklistControls.Width
                ZIndex: =1

            HC_GalleryChecklistControls As groupContainer.horizontalAutoLayoutContainer:
                BorderColor: =RGBA(79, 90, 94, 1)
                DropShadow: =DropShadow.None
                Fill: |-
                    =RGBA(0,0,0,0)
                    //RGBA(192, 222, 252, 0.25)
                Height: =Parent.Height
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                ZIndex: =2

                HC_GalleryControls As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =26
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =5
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =6
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =(Parent.Width / 2.5)
                    ZIndex: =1

                    icon_GalleryControlSortHelper As icon.Message:
                        AlignInContainer: =AlignInContainer.Center
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledColor: =RGBA(53, 61, 63, 1)
                        DisabledFill: =
                        Height: =15
                        Icon: =Icon.Help
                        OnSelect: |-
                            =Set(popupScope, "popup_main_galleryControlsSortHelp");
                            Set(isMainPopupVisible, true)
                        Tooltip: =LookUp(appSettings, Scope = "helper_OverallPercentageHelper").content_PT
                        Width: =15
                        Y: =btn_ChecklistProgress.Y + 10
                        ZIndex: =1

                    label_SortingOptions As label:
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =Parent.Height
                        LayoutMinWidth: =60
                        PaddingLeft: =2
                        Role: =TextRole.Heading4
                        Size: =9
                        Text: |-
                            ="SORT BY:"
                        Width: =62
                        ZIndex: =2

                    toggle_sort_t1 As toggleSwitch:
                        AccessibleLabel: ="Sort Checklists by Departure Date. Sorting by Departure Date toggle is currently " & If(Self.Value, "Enabled", "Disabled") 
                        Default: =If(globalSorter <> Self.TrueText, false, true)
                        FalseText: ="Departure Date"
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                        Font: =Font.'Segoe UI'
                        Height: =15
                        OnCheck: =Set(columnSortBy, "Departure Date")
                        OnSelect: |-
                            =If(globalSorter = Self.TrueText, 
                                UpdateContext({globalSorter: Blank()}),
                                UpdateContext({globalSorter: Self.TrueText})
                            )
                        Size: =10
                        Tooltip: ="Sort Checklists by Departure Date"
                        TrueFill: =RGBA(40, 112, 134, 1)
                        TrueText: ="Departure Date"
                        Width: =128
                        ZIndex: =3

                    toggle_sort_t2 As toggleSwitch:
                        AccessibleLabel: ="Sort Checklists by Created Date. Sorting by Created Date toggle is currently " & If(Self.Value, "Enabled", "Disabled") 
                        Default: =If(globalSorter <> Self.TrueText, false, true)
                        FalseText: ="Created Date"
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                        Font: =Font.'Segoe UI'
                        Height: =15
                        OnCheck: =Set(columnSortBy, "Created Date")
                        OnSelect: |-
                            =If(globalSorter = Self.TrueText, 
                                UpdateContext({globalSorter: Blank()}),
                                UpdateContext({globalSorter: Self.TrueText})
                            )
                        Size: =10
                        Tooltip: ="Sort Checklists by Created Date"
                        TrueFill: =RGBA(40, 112, 134, 1)
                        TrueText: ="Created Date"
                        Width: =115
                        ZIndex: =4

                    toggle_sort_t3 As toggleSwitch:
                        AccessibleLabel: ="Sort Checklists by Days Remaining. Sorting by Days Remaining toggle is currently " & If(Self.Value, "Enabled", "Disabled") 
                        Default: =If(globalSorter <> Self.TrueText, false, true)
                        FalseText: ="Days Remaining"
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                        Font: =Font.'Segoe UI'
                        Height: =15
                        OnCheck: =Set(columnSortBy, "Days Remaining")
                        OnSelect: |-
                            =If(globalSorter = Self.TrueText, 
                                UpdateContext({globalSorter: Blank()}),
                                UpdateContext({globalSorter: Self.TrueText})
                            )
                        Size: =10
                        Tooltip: ="Sort Checklists by Days Remaining"
                        TrueFill: =RGBA(40, 112, 134, 1)
                        TrueText: ="Days Remaining"
                        Width: =132
                        ZIndex: =5

                    toggle_sort_t4 As toggleSwitch:
                        AccessibleLabel: ="Sort Checklists by Last Name. Sorting by Last Name toggle is currently " & If(Self.Value, "Enabled", "Disabled") 
                        Default: =If(globalSorter <> Self.TrueText, false, true)
                        FalseText: ="Last Name"
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                        Font: =Font.'Segoe UI'
                        Height: =15
                        OnCheck: =Set(columnSortBy, "Last Name")
                        OnSelect: |-
                            =If(globalSorter = Self.TrueText, 
                                UpdateContext({globalSorter: Blank()}),
                                UpdateContext({globalSorter: Self.TrueText})
                            )
                        Size: =10
                        Tooltip: ="Sort Checklists by Last Name"
                        TrueFill: =RGBA(40, 112, 134, 1)
                        TrueText: ="Last Name"
                        Width: =100
                        ZIndex: =6

                label_Gallery_ChecklistTasksSectionTitle_1 As label:
                    Align: =Align.Right
                    AlignInContainer: =AlignInContainer.Center
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading4
                    Size: =9
                    Text: ="Rows"
                    Width: =70
                    ZIndex: =3

                HC_GalleryControl_ChecklistTasks As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Center
                    BorderColor: =RGBA(79, 90, 94, 1)
                    BorderThickness: =0.25
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height - 10
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: =75
                    ZIndex: =4

                    combobox_GalleryChecklistTasksRows As combobox:
                        AccessibleLabel: =If(isAccessibilityEnabled, "Organization Job Series")
                        BorderThickness: =0
                        ChevronBackground: =RGBA(167, 182, 203, 1)
                        Default: |-
                            ={Value: 1}
                        DefaultSelectedItems: |-
                            ={Value: 1}
                        DisplayFields: =["Value"]
                        FocusedBorderColor: =RGBA(255,0,0,1)
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                        Font: =Font.'Segoe UI'
                        Height: =Parent.Height
                        HoverFill: =RGBA(0, 0, 0, 0)
                        InputTextPlaceholder: =    
                        IsSearchable: =false
                        Items: =galleryChecklistTasksRowChoices
                        LayoutMinHeight: =
                        OnChange: =
                        OnSelect: =
                        PressedBorderColor: =
                        PressedColor: =RGBA(0, 0, 0, 0)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        SearchFields: =["Value"]
                        SearchItems: =[]
                        SelectionColor: =RGBA(26, 26, 26, 1)
                        SelectionFill: =RGBA(0, 0, 0, 0)
                        SelectMultiple: =false
                        Size: =9
                        TabIndex: =If(isRegisterPopupVisible, -1, 20)
                        Width: =Parent.Width
                        ZIndex: =2

        HC_ChecklistHeader As groupContainer.horizontalAutoLayoutContainer:
            BorderColor: =RGBA(139, 154, 159, 1)
            BorderThickness: =0.25
            DropShadow: =DropShadow.None
            Height: =20
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =1
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width
            Y: =28
            ZIndex: =6

            HC_Checklist As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =20
                LayoutAlignItems: =LayoutAlignItems.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width / 2.7
                ZIndex: =1

                label_DepartingEmployeeChecklists As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    PaddingBottom: =4
                    PaddingTop: =0
                    Size: =10
                    Text: ="Departing Employee Checklists"
                    Width: =Parent.Width
                    ZIndex: =1

            HC_ChecklistTasks As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =20
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width - HC_Checklist.Width
                ZIndex: =2

                label_DepartingEmployeeChecklistTasks As label:
                    Align: =Align.Center
                    AlignInContainer: =AlignInContainer.End
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    PaddingBottom: =4
                    PaddingTop: =0
                    Size: =10
                    Text: ="Departing Employee Checklist Tasks"
                    Width: =Parent.Width
                    ZIndex: =1

    HC_GalleryLabels As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =CC_Checklist_Workspace.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutGap: =10
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        Visible: |-
            =CountRows(gallery_checklists.AllItems) = 0
            //If(IsEmpty(gallery_checklists.AllItems), true, false)
        Width: =CC_Checklist_Workspace.Width
        X: =CC_Checklist_Workspace.X
        Y: =CC_Checklist_Workspace.Y
        ZIndex: =3

        introductionChecklists As htmlViewer:
            AlignInContainer: =AlignInContainer.Start
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            HtmlText: |-
                ="<div style='height:"&Self.Height-15&"px;display: flex;justify-content: center;align-items: center;'>" &
                LookUp('OBOF-DS-appSettings', ID = 22).content_RT &
                "</div>"
            Width: =(Parent.Width - (HC_ChecklistLabel.Width - HC_ChecklistsIntroductionSeparator.Width)) / 3
            ZIndex: =1

        HC_ChecklistLabel As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Center
            BorderColor: =RGBA(53, 61, 63, 1)
            DropShadow: =DropShadow.None
            Fill: =RGBA(174, 208, 221, 0.2)
            FillPortions: =0
            Height: =40
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =20
            PaddingRight: =20
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =200
            ZIndex: =2

            icon_leftArrow As icon.ArrowLeft:
                Color: =RGBA(0, 81, 100, 1)
                Height: =20
                Icon: =Icon.ArrowLeft
                Width: =20
                ZIndex: =1

            label_Checklists As label:
                Align: =Align.Center
                Color: =RGBA(0, 81, 100, 1)
                FillPortions: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Size: =12
                Text: ="Checklists"
                Width: =Parent.Width
                ZIndex: =2

        HC_ChecklistsIntroductionSeparator As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Center
            BorderColor: =RGBA(53, 61, 63, 1)
            DropShadow: =DropShadow.None
            FillPortions: =0
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =5
            ZIndex: =3

            Rectangle1 As rectangle:
                DisabledFill: =RGBA(53, 61, 63, 1)
                DisplayMode: =DisplayMode.Disabled
                Height: =Parent.Height / 1.3
                Width: =1
                ZIndex: =1

        HC_ChecklistTaskLabel As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Center
            BorderColor: =RGBA(53, 61, 63, 1)
            DropShadow: =DropShadow.None
            Fill: =RGBA(174, 208, 221, 0.2)
            FillPortions: =0
            Height: =40
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =20
            PaddingRight: =20
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =200
            ZIndex: =4

            label_ChecklistTasks As label:
                Align: =Align.Center
                Color: =RGBA(0, 81, 100, 1)
                FillPortions: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Size: =12
                Text: ="Checklist Tasks"
                Width: =Parent.Width
                ZIndex: =1

            icon_rightArrow As icon.ArrowLeft:
                Color: =RGBA(0, 81, 100, 1)
                Height: =20
                Icon: =Icon.ArrowRight
                Width: =20
                ZIndex: =2

        introductionChecklistTasks As htmlViewer:
            AlignInContainer: =AlignInContainer.Center
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            HtmlText: |-
                ="<div style='height:"&Self.Height-15&"px;display: flex;justify-content: center;align-items: center;'>" &
                LookUp('OBOF-DS-appSettings', ID = 23).content_RT &
                "</div>"
            Width: =(Parent.Width - (HC_ChecklistLabel.Width - HC_ChecklistsIntroductionSeparator.Width)) / 3
            ZIndex: =5

    CC_VerticalMenu As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(139, 154, 159, 1)
        BorderThickness: =0.25
        DropShadow: =DropShadow.Regular
        Height: =(Parent.Height - CC_Header.Height) - (portalPadding * 2)
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Width: =VC_VerticalMenu.Width
        X: =0 + 5
        Y: =CC_Header.Height + portalPadding
        ZIndex: =4

        glassBlur_1 As htmlViewer:
            AutoHeight: =true
            Height: =VC_VerticalMenu.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"&CC_VerticalMenu.Height&"px;backdrop-filter:blur(10px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_VerticalMenu.Width
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =1

        VC_VerticalMenu As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =625
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =If(isMenuExpanded, 120, 40)
            X: =0.00
            ZIndex: =2

            VC_Spacer As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =HC_Header.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                PaddingTop: =0.00
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Visible: =false
                Width: =181.41
                X: =0.00
                ZIndex: =1

            HC_ExpandCollapse As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =45
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =5
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                PaddingTop: =0.00
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                X: =0.00
                ZIndex: =2

                menu_ExpandCollapse As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    separator_ExpandCollapse As rectangle:
                        DisabledFill: =RGBA(219, 219, 219, 1)
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =If(selectedMenuScope = btn_ExpandCollapse.Text, RGBA(51, 51, 51, 1), RGBA(245, 245, 245, 1))
                        Height: =1
                        Width: =Parent.Width
                        Y: =43
                        ZIndex: =1

                    icon_Expand As icon.DockLeft:
                        AccessibleLabel: =If(isAccessibilityEnabled, "Expand Menu", "")
                        Color: =RGBA(26, 26, 26, 1)
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                        Height: =20
                        Icon: =Icon.ChevronRight
                        Tooltip: ="Expand Menu"
                        Visible: =!isMenuExpanded
                        Width: =Self.Height
                        X: =10
                        Y: =(Parent.Height - Self.Height) / 2
                        ZIndex: =2

                    icon_Collapse As icon.DockLeft:
                        AccessibleLabel: =If(isAccessibilityEnabled, "Collapse Menu", "")
                        Color: =RGBA(26, 26, 26, 1)
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                        Height: =20
                        Icon: =Icon.ChevronLeft
                        Tooltip: ="Collapse Menu"
                        Visible: =isMenuExpanded
                        Width: =Self.Height
                        X: =10
                        Y: =(Parent.Height - Self.Height) / 1.9
                        ZIndex: =3

                    btn_ExpandCollapse As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =If(isMenuExpanded, RGBA(0, 0, 0, 0), RGBA(0, 0, 0, 0))//RGBA(26, 26, 26, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(202, 202, 202, 1)
                        DisabledFill: =RGBA(215, 223, 240, 1)
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: |
                            =If(isAccessibilityEnabled, 1, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =If(selectedMenuScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Parent.Height
                        HoverBorderColor: =
                        HoverColor: =If(isMenuExpanded, RGBA(0,0,0,0), RGBA(0,0,0,0))//RGBA(26, 26, 26, 1)
                        HoverFill: =RGBA(0, 0, 0, 0.02)
                        OnSelect: =Set(isMenuExpanded, !isMenuExpanded);
                        PaddingBottom: =0
                        PaddingLeft: =icon_Collapse.Width + 20
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedBorderColor: =
                        PressedColor: =If(isMenuExpanded, RGBA(0,0,0,0), RGBA(0,0,0,0))//RGBA(26, 26, 26, 1)
                        PressedFill: =RGBA(0, 0, 0, 0.2)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        TabIndex: =1
                        Text: |
                            =If(isMenuExpanded, "Collapse", "Expand")
                        Tooltip: =btn_ExpandCollapse.Text
                        Width: =Parent.Width
                        ZIndex: =4

            HC_Employee As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =45
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =5
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                PaddingTop: =0.00
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                X: =0.00
                ZIndex: =3

                menu_Employee As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    separator_Employee As rectangle:
                        AccessibleLabel: ="Employee"
                        DisabledFill: =If(selectedMenuScope = btn_Employee.Text, RGBA(26, 26, 26, 1), RGBA(219, 219, 219, 1))
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =If(selectedMenuScope = btn_Employee.Text, RGBA(51, 51, 51, 1), RGBA(245, 245, 245, 1))
                        Height: =1
                        Width: =Parent.Width
                        Y: =43
                        ZIndex: =1

                    icon_Employee As icon.DockLeft:
                        AccessibleLabel: =If(isAccessibilityEnabled, "Collapse Menu", "")
                        Color: =RGBA(26, 26, 26, 1)
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                        Height: =20
                        Icon: =Icon.Person
                        Tooltip: ="Collapse Menu"
                        Width: =Self.Height
                        X: =10
                        Y: =(Parent.Height - Self.Height) / 1.9
                        ZIndex: =2

                    btn_Employee As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0, 0, 0, 0))
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(202, 202, 202, 1)
                        DisabledFill: =RGBA(215, 223, 240, 1)
                        Fill: =If(selectedMenuScope = Self.Text, RGBA(0, 0, 0, 0.06), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: |
                            =If(isAccessibilityEnabled, 1, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =If(selectedMenuScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Parent.Height
                        HoverBorderColor: =
                        HoverColor: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0,0,0,0))
                        HoverFill: =RGBA(0, 0, 0, 0.02)
                        OnSelect: =Set(selectedMenuScope, Self.Text);
                        PaddingBottom: =0
                        PaddingLeft: =icon_Employee.Width + 20
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedBorderColor: =
                        PressedColor: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0,0,0,0))
                        PressedFill: =RGBA(0, 0, 0, 0.2)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        TabIndex: =20
                        Text: |
                            ="Employee"
                        Tooltip: =btn_Employee.Text
                        Width: =Parent.Width
                        ZIndex: =3

            HC_TotalForce As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =45
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =5
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                PaddingTop: =0.00
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                X: =0.00
                ZIndex: =5

                menu_TotalForce As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    separator_TotalForce As rectangle:
                        AccessibleLabel: ="Employee"
                        DisabledFill: =If(selectedMenuScope = btn_TotalForce.Text, RGBA(26, 26, 26, 1), RGBA(219, 219, 219, 1))
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =If(selectedMenuScope = btn_TotalForce.Text, RGBA(51, 51, 51, 1), RGBA(245, 245, 245, 1))
                        Height: =1
                        Width: =Parent.Width
                        Y: =43
                        ZIndex: =1

                    icon_TotalForce As icon.DockLeft:
                        AccessibleLabel: =If(isAccessibilityEnabled, "Collapse Menu", "")
                        Color: =RGBA(26, 26, 26, 1)
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                        Height: =20
                        Icon: =Icon.Settings
                        Tooltip: ="Collapse Menu"
                        Width: =Self.Height
                        X: =10
                        Y: =(Parent.Height - Self.Height) / 1.9
                        ZIndex: =2

                    btn_TotalForce As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0, 0, 0, 0))
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(202, 202, 202, 1)
                        DisabledFill: =RGBA(215, 223, 240, 1)
                        Fill: =If(selectedMenuScope = Self.Text, RGBA(0, 0, 0, 0.1), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: |
                            =If(isAccessibilityEnabled, 1, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =If(selectedMenuScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Parent.Height
                        HoverBorderColor: =
                        HoverColor: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0,0,0,0))
                        HoverFill: =RGBA(0, 0, 0, 0.02)
                        OnSelect: =Set(selectedMenuScope, Self.Text);
                        PaddingBottom: =0
                        PaddingLeft: =icon_TotalForce.Width + 20
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedBorderColor: =
                        PressedColor: =If(isMenuExpanded, RGBA(26, 26, 26, 1), RGBA(0,0,0,0))
                        PressedFill: =RGBA(0, 0, 0, 0.2)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        TabIndex: =40
                        Text: ="Total Force"
                        Tooltip: =btn_TotalForce.Text
                        Width: =Parent.Width
                        ZIndex: =3

    CC_Header As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(53, 61, 63, 1)
        BorderThickness: =0.25
        DropShadow: =DropShadow.Regular
        Height: =100
        RadiusBottomLeft: =12
        RadiusBottomRight: =12
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =Parent.Width
        ZIndex: =5

        gradient_BKG_1 As htmlViewer:
            Height: =CC_Header.Height
            HtmlText: |-
                ="
                <div style='width:100%;height:"&CC_Header.Height-1&"px;border-radius:0px;
                background-image: radial-gradient( circle farthest-corner at 10% 20%,  rgba(0,152,155,1) 0.1%, rgba(0,94,120,1) 94.2% );
                '>
                </div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =false
            Width: =CC_Header.Width
            ZIndex: =1

        "'GB-GradientBlur-Glass-Header' As htmlViewer":
            AutoHeight: =true
            Height: =CC_Header.Height
            HtmlText: |-
                ="
                <div style='
                background-image: radial-gradient( circle farthest-corner at 10% 20%,  rgba(0,152,155,0.35) 0.1%, rgba(0,94,120,0.75) 94.2% );
                background-color:rgba(255,255,255,0.4);
                width:100%;
                height:"&CC_Header.Height+2&"px;
                backdrop-filter:blur(35px);
                border-radius:0px'>
                </div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Width: =CC_Header.Width
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =2

        HC_HeaderMenu_TaskCategories As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =30
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            Y: =Parent.Height - Self.Height
            ZIndex: =3

            VC_HeaderMenu_DepartingEmployee As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =200
                ZIndex: =1

                btn_DepartingEmployee As button:
                    BorderThickness: =0
                    Color: |-
                        =If(selectedMenuHeaderScope = Self.Text, ColorValue("#287086"), RGBA(26, 26, 26, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(215, 223, 240, 1)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: |
                        =If(isAccessibilityEnabled, 1, 0)
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(selectedMenuHeaderScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Parent.Height - 4.25
                    HoverBorderColor: =
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(selectedMenuHeaderScope, Self.Text);
                    PaddingBottom: =0
                    PaddingLeft: =
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =RGBA(26, 26, 26, 1)
                    PressedFill: =RGBA(255, 255, 255, 0.2)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =14
                    TabIndex: =20
                    Text: ="Departing Employee"
                    Tooltip: =btn_DepartingEmployee.Text
                    Width: =Parent.Width
                    ZIndex: =1

                selected_DepartingEmployee As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =If(selectedMenuHeaderScope = "Departing Employee", ColorValue("#287086"), RGBA(0,0,0,0))
                    Height: =4
                    Width: =Parent.Width
                    ZIndex: =2

            VC_HeaderMenu_Employee_SupervisorDesignee As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =200
                ZIndex: =2

                btn_SupervisorDesignee As button:
                    BorderThickness: =0
                    Color: |-
                        =If(selectedMenuHeaderScope = Self.Text, ColorValue("#287086"), RGBA(26, 26, 26, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(215, 223, 240, 1)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderThickness: |
                        =If(isAccessibilityEnabled, 1, 0)
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(selectedMenuHeaderScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Parent.Height - 5
                    HoverBorderColor: =
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(selectedMenuHeaderScope, Self.Text);
                    PaddingBottom: =0
                    PaddingLeft: =
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =RGBA(26, 26, 26, 1)
                    PressedFill: =RGBA(255, 255, 255, 0.2)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =14
                    TabIndex: =20
                    Text: ="Supervisor / Designee"
                    Tooltip: =btn_SupervisorDesignee.Text
                    Width: =Parent.Width
                    ZIndex: =1

                selected_SupervisorDesignee As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =If(selectedMenuHeaderScope = "Supervisor / Designee", ColorValue("#287086"), RGBA(0,0,0,0))
                    Height: =4
                    Width: =Parent.Width
                    ZIndex: =2

            VC_HeaderMenu_Employee_ClearingOffices As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =200
                ZIndex: =3

                btn_ClearingOffice As button:
                    BorderThickness: =0
                    Color: |-
                        =If(selectedMenuHeaderScope = Self.Text, ColorValue("#287086"), RGBA(26, 26, 26, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(215, 223, 240, 1)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderThickness: |
                        =If(isAccessibilityEnabled, 1, 0)
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(selectedMenuHeaderScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Parent.Height - 5
                    HoverBorderColor: =
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(selectedMenuHeaderScope, Self.Text);
                    PaddingBottom: =0
                    PaddingLeft: =
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =RGBA(26, 26, 26, 1)
                    PressedFill: =RGBA(255, 255, 255, 0.2)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =14
                    TabIndex: =20
                    Text: ="Clearing Offices"
                    Tooltip: =btn_ClearingOffice.Text
                    Width: =Parent.Width
                    ZIndex: =1

                selected_ClearingOffice As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =If(selectedMenuHeaderScope = "Clearing Offices", ColorValue("#287086"), RGBA(0,0,0,0))
                    Height: =4
                    Width: =Parent.Width
                    ZIndex: =2

            VC_HeaderMenu_Employee_MissionSupport As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =200
                ZIndex: =4

                btn_MissionSupport As button:
                    BorderThickness: =0
                    Color: |-
                        =If(selectedMenuHeaderScope = Self.Text, ColorValue("#287086"), RGBA(26, 26, 26, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(215, 223, 240, 1)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderThickness: |
                        =If(isAccessibilityEnabled, 1, 0)
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(selectedMenuHeaderScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Parent.Height - 5
                    HoverBorderColor: =
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(selectedMenuHeaderScope, Self.Text);
                    PaddingBottom: =0
                    PaddingLeft: =
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =RGBA(26, 26, 26, 1)
                    PressedFill: =RGBA(255, 255, 255, 0.2)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =14
                    TabIndex: =20
                    Text: ="Mission Support"
                    Tooltip: =btn_MissionSupport.Text
                    Width: =Parent.Width
                    ZIndex: =1

                selected_MissionSupport As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =If(selectedMenuHeaderScope = "Mission Support", ColorValue("#287086"), RGBA(0,0,0,0))
                    Height: =4
                    Width: =Parent.Width
                    ZIndex: =2

            VC_HeaderMenu_Employee_CompletionSignatures As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =200
                ZIndex: =5

                btn_CompletionSignatures As button:
                    BorderThickness: =0
                    Color: |-
                        =If(selectedMenuHeaderScope = Self.Text, ColorValue("#287086"), RGBA(26, 26, 26, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(215, 223, 240, 1)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderThickness: |
                        =If(isAccessibilityEnabled, 1, 0)
                    Font: =Font.'Segoe UI'
                    FontWeight: =If(selectedMenuHeaderScope = Self.Text, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Parent.Height - 5
                    HoverBorderColor: =
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(selectedMenuHeaderScope, Self.Text);
                    PaddingBottom: =0
                    PaddingLeft: =
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =RGBA(26, 26, 26, 1)
                    PressedFill: =RGBA(255, 255, 255, 0.2)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =14
                    TabIndex: =20
                    Text: ="Completion Signatures"
                    Tooltip: =btn_CompletionSignatures.Text
                    Width: =Parent.Width
                    ZIndex: =1

                selected_CompletionSignatures As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =If(selectedMenuHeaderScope = "Completion Signatures", ColorValue("#287086"), RGBA(0,0,0,0))
                    Height: =4
                    Width: =Parent.Width
                    ZIndex: =2

        HC_Header As groupContainer.horizontalAutoLayoutContainer:
            BorderColor: =RGBA(219, 219, 219, 1)
            DropShadow: =DropShadow.None
            Height: =Parent.Height / 2
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width
            Y: =20
            ZIndex: =4

            HC_HeaderTitle As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                PaddingRight: =0.00
                PaddingTop: =0.00
                Width: =Parent.Width - HC_User.Width
                X: =0.00
                ZIndex: =1

                Image2 As image:
                    Height: =Parent.Height - 10
                    Image: ='DCMA_Seal_Cropped-NoBKG'
                    Visible: =false
                    Width: =Self.Height
                    ZIndex: =1

                label_HeaderTitle As label:
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    Size: =28
                    Text: ="Personnel Out-Processing and Transfers Checklist"
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =Parent.Width
                    ZIndex: =2

            HC_User As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =5
                PaddingTop: =2
                Width: =Parent.Width / 3
                X: =870.76
                ZIndex: =2

                CC_User As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.Center
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    ZIndex: =3

                    image_UserImage As image:
                        Height: =Parent.Height - (Parent.PaddingBottom + Parent.PaddingTop) - 10
                        Image: =User().Image
                        OnSelect: =Set(isAccountSettingsVisible, !isAccountSettingsVisible)
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        RadiusBottomLeft: =20
                        RadiusBottomRight: =20
                        RadiusTopLeft: =20
                        RadiusTopRight: =20
                        Width: =Self.Height
                        X: =Parent.Width - Self.Width
                        Y: =(Parent.Height - Self.Height) / 2
                        ZIndex: =1

                    Label5 As label:
                        Align: =Align.Right
                        AutoHeight: =true
                        Font: =Font.'Segoe UI'
                        Height: =Parent.Height
                        Size: =10
                        Text: =First(currentUser).displayName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =400 
                        X: =Parent.Width - Self.Width - image_UserImage.Width
                        Y: =(Parent.Height - Self.Height) / 2
                        ZIndex: =2

                    btn_AccountSettings As button:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(0, 0, 0, 0)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                        Height: =image_UserImage.Height
                        HoverBorderColor: =
                        HoverColor: =RGBA(0, 0, 0, 0)
                        HoverFill: =RGBA(26, 26, 26, 0.15)
                        OnSelect: |-
                            =//Set(combobox_JobSeries_1, Filter(Choices(combobox_JobSeries_1), Val First(currentUser).jobSeries));
                            Set(isAccountSettingsVisible, !isAccountSettingsVisible);
                            UpdateContext({isOrganizationChange: false})
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedBorderColor: =
                        PressedColor: =
                        PressedFill: =
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        Size: =0
                        Text: =""
                        Width: =image_UserImage.Width
                        X: =image_UserImage.X
                        Y: =image_UserImage.Y
                        ZIndex: =3

        HC_Classification As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.None
            Height: =20
            LayoutJustifyContent: =LayoutJustifyContent.End
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =10
            Width: =Parent.Width
            ZIndex: =5

            "'DCMA-4201-MAN' As htmlViewer":
                AlignInContainer: =AlignInContainer.Start
                Height: =Parent.Height
                HtmlText: |-
                    ="<a href='https://dod365.sharepoint-mil.us/sites/DCMA-Policy/Signed%20Policies/MAN_4201-12_(C2)_(20220621)_(UnionReview).pdf?cid=f7b8b901-7cea-46c0-a972-021fcc59263a'>DCMA MAN 4201-12</a>"
                LayoutMinWidth: =80
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =8
                Width: =120
                ZIndex: =1

            label_AppSize As label:
                Align: =Align.Center
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                Size: =10
                Text: ="Current App Window Size " & App.ActiveScreen.Width & "x" & App.ActiveScreen.Height 
                Visible: =false
                Width: =250
                ZIndex: =2

            label_Classification As label:
                Align: =Align.Center
                FillPortions: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                LayoutMinWidth: =200
                Size: =10
                Text: ="CUI"
                Width: =Parent.Width/2
                ZIndex: =3

            publishApp As button:
                AlignInContainer: =AlignInContainer.Center
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(253, 207, 180, 0.49)
                Font: =Font.'Segoe UI'
                Height: =15
                HoverFill: =RGBA(255,0,0,1)
                OnSelect: |-
                    =Patch('GLBL-DS-appRegistration',
                        If(!IsBlank(appRegistration.ID),
                            {ID: appRegistration.ID},
                            Defaults('GLBL-DS-appRegistration')
                        ),
                        {
                            applicationName: appMetadata.appName,
                            applicationVersion: appMetadata.appVersion,
                            applicationPublisher: appMetadata.appPublisher,
                            applicationPublisherPrefix: appMetadata.appPrefix,
                            applicationUid: appMetadata.appUid,
                            environment: appMetadata.appEnviornment
                        }
                    )
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                RadiusBottomLeft: =6
                RadiusBottomRight: =6
                RadiusTopLeft: =6
                RadiusTopRight: =6
                Size: =10
                Text: ="PUBLISH APP"
                Visible: =If(User().Email = "travis.a.sykes.civ@mail.mil", true, false)
                X: =187
                ZIndex: =4

            label_Classification_1 As label:
                Align: =Align.Right
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                Size: =10
                Text: ="v" & appMetadata.appVersion & "-" & appMetadata.appEnviornment.Value & appMetadata.appBuild
                ZIndex: =5

    CC_Checklist_Workspace_Control As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(53, 61, 63, 1)
        BorderThickness: =1
        DropShadow: =DropShadow.Semilight
        Fill: |-
            =RGBA(0,0,0,0)
            //RGBA(180, 214, 250, 0.4)
        Height: =100//(Parent.Height - CC_Header.Height) - (portalPadding * 2)
        RadiusBottomLeft: =8
        RadiusBottomRight: =8
        RadiusTopLeft: =8
        RadiusTopRight: =8
        Width: =(Parent.Width - CC_VerticalMenu.Width) - (portalPadding * 4)
        X: =(Parent.Width - Self.Width) - portalPadding + 5
        Y: =CC_Header.Height + portalPadding
        ZIndex: =6

        "'GB-GradientBlur-Glass-SubHeader' As htmlViewer":
            DisplayMode: =DisplayMode.View
            Height: =CC_Checklist_Workspace_Control.Height+3
            HtmlText: |-
                ="
                <div style='
                background-image: radial-gradient( circle farthest-corner at 10% 250%,  rgba(0,152,155,0.25) 0.1%, rgba(0,94,120,0.65) 124.2% );
                width:100%;
                height:"&CC_Checklist_Workspace_Control.Height+2&"px;
                backdrop-filter:blur(15px);
                border-radius:0px'>
                </div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Width: =CC_Checklist_Workspace_Control.Width
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =1

        glassBlur_6 As htmlViewer:
            DisplayMode: =DisplayMode.Disabled
            Height: =CC_Checklist_Workspace_Control.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"&CC_Checklist_Workspace_Control.Height&"px;backdrop-filter:blur(30px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =false//!isAccessibilityEnabled
            Width: =CC_Checklist_Workspace_Control.Width
            ZIndex: =2

        HC_Checklist_Workspace_Control As groupContainer.horizontalAutoLayoutContainer:
            BorderColor: =RGBA(79, 90, 94, 1)
            DropShadow: =DropShadow.None
            Height: =Parent.Height
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width
            ZIndex: =3

            VC_Checklist_Workspace_Control_LEFT As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =200
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =250
                ZIndex: =1

                HC_Control_1_Set_3 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 4
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =2
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =2
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =1

                    icon_NewChecklist As icon.Message:
                        Color: =RGBA(40, 112, 134, 1)
                        DisabledColor: =RGBA(40, 112, 134, 1)
                        DisabledFill: =
                        DisplayMode: =DisplayMode.Disabled
                        Height: =15
                        Icon: =Icon.CheckBadge
                        Width: =15
                        Y: =btn_NewChecklist.Y + 10
                        ZIndex: =1

                    btn_NewChecklist As button:
                        Align: =Align.Left
                        AlignInContainer: =AlignInContainer.Center
                        BorderThickness: =0
                        Color: =RGBA(0, 81, 100, 1)
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =24
                        HoverColor: =ColorFade(Self.Color,0.5) //RGBA(0, 81, 100, 1)
                        HoverFill: =
                        OnSelect: |-
                            =Set(isNewChecklistVisible, true);
                            Set(newChecklist_BKG_FaderStart, true)
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =RGBA(83, 144, 164, 1)
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Text: ="New Checklist"
                        Tooltip: ="Create a new Checklist."
                        ZIndex: =2

                HC_Control_1_Set_2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 4
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =2
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =2
                    Visible: =If(First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager || gallery_checklists.Selected.uidDesignee = First(currentUser).uid || gallery_checklists.Selected.uidSupervisor = First(currentUser).uid, true, false)
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =2

                    icon_NewLocalTask As icon.Message:
                        Color: =RGBA(40, 112, 134, 1)
                        DisabledColor: =RGBA(40, 112, 134, 1)
                        DisabledFill: =
                        DisplayMode: =DisplayMode.Disabled
                        Height: =15
                        Icon: =Icon.AddLibrary
                        Width: =15
                        Y: =btn_NewLocalTask.Y + 10
                        ZIndex: =1

                    btn_NewLocalTask As button:
                        Align: =Align.Left
                        AlignInContainer: =AlignInContainer.Center
                        BorderThickness: =0
                        Color: =RGBA(0, 81, 100, 1)
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =24
                        HoverColor: =ColorFade(Self.Color,0.5) //RGBA(0, 81, 100, 1)
                        HoverFill: =
                        OnSelect: =Set(isNewLocalTaskVisible, true);
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =RGBA(83, 144, 164, 1)
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Text: ="Local Task"
                        Tooltip: ="Assign existing Local Task(s). Create New Local Task(s)."
                        ZIndex: =2

                HC_Control_1_Set_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 4
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =2
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =2
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =3

                    icon_NewComment As icon.Message:
                        Color: =RGBA(40, 112, 134, 1)
                        DisabledColor: =RGBA(40, 112, 134, 1)
                        DisabledFill: =
                        DisplayMode: =DisplayMode.Disabled
                        Height: =18
                        Icon: =Icon.Message
                        Width: =18
                        Y: =btn_NewComment.Y + 10
                        ZIndex: =1

                    btn_NewComment As button:
                        Align: =Align.Left
                        AlignInContainer: =AlignInContainer.Center
                        BorderThickness: =0
                        Color: =RGBA(0, 81, 100, 1)
                        DisabledColor: =ColorFade(Self.Color, 0.5)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        DisplayMode: |-
                            =If(IsBlank(gallery_checklists.Selected.ID),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =24
                        HoverColor: =ColorFade(Self.Color,0.5) //RGBA(0, 81, 100, 1)
                        HoverFill: =
                        OnSelect: |-
                            =//UpdateContext({commentScope: "viewComments"});
                            Select(buildComments);
                            Set(isNewCommentVisible, true);
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =RGBA(83, 144, 164, 1)
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Text: ="Comments"
                        Tooltip: |-
                            =Switch(Self.DisplayMode,
                                DisplayMode.Edit, "Add/View comment(s) on the selected checklist",
                                DisplayMode.Disabled, "Select/Create a Checklist before adding/reviewing comment(s)."
                            )
                        ZIndex: =2

                HC_Control_1_Set_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 4
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =2
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =2
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =4

                    icon_RefreshChecklists As icon.Message:
                        Color: =RGBA(40, 112, 134, 1)
                        DisabledColor: =RGBA(40, 112, 134, 1)
                        DisabledFill: =
                        DisplayMode: =DisplayMode.Disabled
                        Height: =15
                        Icon: =Icon.Reload
                        Width: =15
                        Y: =btn_RefreshChecklists.Y + 10
                        ZIndex: =1

                    btn_RefreshChecklists As button:
                        Align: =Align.Left
                        AlignInContainer: =AlignInContainer.Center
                        BorderThickness: =0
                        Color: =RGBA(0, 81, 100, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =24
                        HoverColor: =ColorFade(Self.Color,0.5) //RGBA(0, 81, 100, 1)
                        HoverFill: =
                        OnSelect: |-
                            =DataSourceComponent.Refresh(true, globalFilter);
                            DataSourceComponent.BuildChecklistTasks(false, gallery_checklists.Selected.ID);
                            
                            /*
                            Set(isBuildChecklistTasksRunning, true);
                            Select(refreshChecklists);
                            */
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =RGBA(83, 144, 164, 1)
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Text: ="Refresh Checklists"
                        Tooltip: ="Refresh all data sources. Useful when having poor experience."
                        Width: =130
                        ZIndex: =2

            VC_Checklist_Workspace_Control_MID As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =825
                ZIndex: =2

                HC_Control_2_Set_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 2.1
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =1

                    HC_Control_2_Set_1_1 As groupContainer.horizontalAutoLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =Parent.Height / 2.1
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutGap: =5
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width - Parent.PaddingLeft
                        ZIndex: =1

                        icon_ChecklistProgress As icon.Message:
                            Color: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(53, 61, 63, 1)
                            DisabledFill: =
                            DisplayMode: =DisplayMode.Disabled
                            Height: =18
                            Icon: =Icon.Diamond
                            Width: =18
                            Y: =btn_ChecklistProgress.Y + 10
                            ZIndex: =1

                        btn_ChecklistProgress As button:
                            Align: =Align.Left
                            BorderThickness: =0
                            Color: =RGBA(53, 61, 63, 1)
                            DisplayMode: =DisplayMode.View
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =24
                            HoverColor: =ColorFade(Self.Color,0.5) //RGBA(0, 81, 100, 1)
                            HoverFill: =
                            OnSelect: |-
                                =UpdateContext(
                                    {
                                        progress_ChecklistVisible: !progress_ChecklistVisible,
                                        progress_ChecklistRefreshVisible: !progress_ChecklistRefreshVisible
                                    }
                                )
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            PressedColor: =RGBA(83, 144, 164, 1)
                            PressedFill: =
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Size: =10
                            Text: ="Checklist Progress "&progress_Checklist.Value&"%"
                            Tooltip: ="Refresh Checklist Progress Data"
                            ZIndex: =2

                        HC_Progress As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(79, 90, 94, 1)
                            BorderThickness: =0.25
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =16
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =2
                            PaddingTop: =2
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =610
                            ZIndex: =3

                            progress_Checklist As slider:
                                AlignInContainer: =AlignInContainer.Center
                                Default: |-
                                    =If(!IsEmpty(col_checklistTasks),
                                        Round((CountRows(Filter(col_checklistTasks, isCompleted = true)) / CountRows(col_checklistTasks) * 100), 0),
                                        0
                                    )
                                    
                                    /*If(!IsBlank(gallery_checklists.Selected.ID) && !isBuildChecklistTasksRunning && CountRows(col_checklistTasks) > 0,
                                        If(toggle_OverallPercentage.Value,
                                            Round((CountRows(Filter(col_checklistTasks, isCompleted = true)) / CountRows(col_checklistTasks) * 100), 0),
                                            Round((CountRows(Filter(col_checklistTasks, groupValue = selectedMenuHeaderScope && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = selectedMenuHeaderScope)) * 100), 0)
                                        ),
                                        0
                                    )*/
                                DisplayMode: =DisplayMode.View
                                HandleFill: =If(Self.Value = 0, RGBA(0,0,0,0), Self.ValueFill)
                                HandleHoverFill: =RGBA(0,0,0,0)
                                HandleSize: =Parent.Height //16
                                Height: =Parent.Height
                                OnSelect: =//Notify("Clicked", NotificationType.Information)
                                RailFill: =RGBA(214, 221, 224, 1)
                                RailHoverFill: =
                                RailThickness: =Parent.Height //16
                                ValueFill: |-
                                    =If(Self.Value = 0, RGBA(0,0,0,0), ColorValue("#90f6d7"))
                                Width: =Parent.Width
                                ZIndex: =1

                        icon_OverallPercentageHelper As icon.Message:
                            Color: =RGBA(53, 61, 63, 1)
                            DisabledColor: =RGBA(53, 61, 63, 1)
                            DisabledFill: =
                            Height: =15
                            Icon: =Icon.Help
                            OnSelect: |-
                                =Set(popupScope, "popup_main_overallPercentageHelp");
                                Set(isMainPopupVisible, true)
                            Tooltip: =LookUp(appSettings, Scope = "helper_OverallPercentageHelper").content_PT
                            Width: =15
                            Y: =btn_ChecklistProgress.Y + 10
                            ZIndex: =4

                        label_OverallPercentage As label:
                            Font: =Font.'Segoe UI'
                            Height: =24
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =11
                            Text: ="Overall"
                            VerticalAlign: =VerticalAlign.Top
                            Visible: =false
                            Width: =50
                            ZIndex: =5

                        toggle_OverallPercentage As toggleSwitch:
                            BorderColor: =RGBA(106, 122, 127, 1)
                            Default: =true
                            FalseText: ="disabled"
                            FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                            Font: =Font.'Segoe UI'
                            Height: =15
                            OnCheck: |-
                                =UpdateContext({isOverall: true})
                            OnUncheck: |-
                                =UpdateContext({isOverall: false})
                            ShowLabel: =false
                            Tooltip: =LookUp(appSettings, Scope = "helper_OverallPercentage").content_PT
                            TrueFill: =RGBA(40, 112, 134, 1)
                            TrueText: ="enabled"
                            Visible: =false
                            Width: =30
                            ZIndex: =6

                    completionSignatures_Percentage As button:
                        AutoDisableOnSelect: =false
                        BorderColor: =ColorFade(Self.Fill, -75%)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =
                        DisplayMode: =If(IsEmpty(col_checklistTasks), DisplayMode.Disabled, DisplayMode.Edit)
                        Fill: |-
                            =If(!IsEmpty(col_checklistTasks),
                                With(
                                    {
                                        categoryTaskPercentage: Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0)
                                    },
                                    If(categoryTaskPercentage = 0, ColorFade(ColorValue("#979aaa"), 0.85), // GREY
                                            If(categoryTaskPercentage >= 1 && categoryTaskPercentage <= 32, ColorValue("#faf0be"), // GOLD (Blond)
                                                If(categoryTaskPercentage >= 33 && categoryTaskPercentage <= 65, ColorValue("#ffc87c"), // ORANGE (Topaz)
                                                    If(categoryTaskPercentage >= 66 && categoryTaskPercentage <= 99, ColorValue("#90ee90"), // GREEN (Light Green)
                                                        If(categoryTaskPercentage = 100, ColorValue("#7fff00") // GREEN (Chartreuse)
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                RGBA(0,0,0,1)
                            )
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, Self.BorderThickness)
                        Font: =Font.'Segoe UI'
                        Height: =20
                        HoverColor: =ColorFade(Self.Color, -0.5)
                        HoverFill: =Self.Fill
                        OnSelect: =Select(btn_CompletionSignatures)
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =Self.Color
                        PressedFill: =ColorFade(Self.Fill, -0.45)
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =10
                        Text: |-
                            =If(!IsEmpty(col_checklistTasks),
                                Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0) & "%",
                                Blank()
                            )
                        Tooltip: ="Completion Signatures"
                        Visible: =!IsEmpty(col_checklistTasks)
                        X: =missionSupport_Percentage.X + missionSupport_Percentage.Width + 5
                        Y: =Parent.Height - Self.Height - 1
                        ZIndex: =2

                    missionSupport_Percentage As button:
                        AutoDisableOnSelect: =false
                        BorderColor: =ColorFade(Self.Fill, -75%)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =
                        DisplayMode: =If(IsEmpty(col_checklistTasks), DisplayMode.Disabled, DisplayMode.Edit)
                        Fill: |-
                            =If(!IsEmpty(col_checklistTasks),
                                With(
                                    {
                                        categoryTaskPercentage: Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0)
                                    },
                                    If(categoryTaskPercentage = 0, ColorFade(ColorValue("#979aaa"), 0.85), // GREY
                                            If(categoryTaskPercentage >= 1 && categoryTaskPercentage <= 32, ColorValue("#faf0be"), // GOLD (Blond)
                                                If(categoryTaskPercentage >= 33 && categoryTaskPercentage <= 65, ColorValue("#ffc87c"), // ORANGE (Topaz)
                                                    If(categoryTaskPercentage >= 66 && categoryTaskPercentage <= 99, ColorValue("#90ee90"), // GREEN (Light Green)
                                                        If(categoryTaskPercentage = 100, ColorValue("#7fff00") // GREEN (Chartreuse)
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                RGBA(0,0,0,1)
                            )
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, Self.BorderThickness)
                        Font: =Font.'Segoe UI'
                        Height: =20
                        HoverColor: =ColorFade(Self.Color, -0.5)
                        HoverFill: =Self.Fill
                        OnSelect: =Select(btn_MissionSupport)
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =Self.Color
                        PressedFill: =ColorFade(Self.Fill, -0.45)
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =10
                        Text: |-
                            =If(!IsEmpty(col_checklistTasks),
                                Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0) & "%",
                                Blank()
                            )
                        Tooltip: ="Mission Support"
                        Visible: =!IsEmpty(col_checklistTasks)
                        X: =clearingOffices_Percentage.X + clearingOffices_Percentage.Width + 5
                        Y: =Parent.Height - Self.Height - 1
                        ZIndex: =3

                    clearingOffices_Percentage As button:
                        AutoDisableOnSelect: =false
                        BorderColor: =ColorFade(Self.Fill, -75%)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =
                        DisplayMode: =If(IsEmpty(col_checklistTasks), DisplayMode.Disabled, DisplayMode.Edit)
                        Fill: |-
                            =If(!IsEmpty(col_checklistTasks),
                                With(
                                    {
                                        categoryTaskPercentage: Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0)
                                    },
                                    If(categoryTaskPercentage = 0, ColorFade(ColorValue("#979aaa"), 0.85), // GREY
                                            If(categoryTaskPercentage >= 1 && categoryTaskPercentage <= 32, ColorValue("#faf0be"), // GOLD (Blond)
                                                If(categoryTaskPercentage >= 33 && categoryTaskPercentage <= 65, ColorValue("#ffc87c"), // ORANGE (Topaz)
                                                    If(categoryTaskPercentage >= 66 && categoryTaskPercentage <= 99, ColorValue("#90ee90"), // GREEN (Light Green)
                                                        If(categoryTaskPercentage = 100, ColorValue("#7fff00") // GREEN (Chartreuse)
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                RGBA(0,0,0,1)
                            )
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, Self.BorderThickness)
                        Font: =Font.'Segoe UI'
                        Height: =20
                        HoverColor: =ColorFade(Self.Color, -0.5)
                        HoverFill: =Self.Fill
                        OnSelect: =Select(btn_ClearingOffice)
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =Self.Color
                        PressedFill: =ColorFade(Self.Fill, -0.45)
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =10
                        Text: |-
                            =If(!IsEmpty(col_checklistTasks),
                                Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0) & "%",
                                Blank()
                            )
                        Tooltip: ="Clearing Offices"
                        Visible: =!IsEmpty(col_checklistTasks)
                        X: =supervisorDesignee_Percentage.X + supervisorDesignee_Percentage.Width + 5
                        Y: =Parent.Height - Self.Height - 1
                        ZIndex: =4

                    supervisorDesignee_Percentage As button:
                        AutoDisableOnSelect: =false
                        BorderColor: =ColorFade(Self.Fill, -75%)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =
                        DisplayMode: =If(IsEmpty(col_checklistTasks), DisplayMode.Disabled, DisplayMode.Edit)
                        Fill: |-
                            =If(!IsEmpty(col_checklistTasks),
                                With(
                                    {
                                        categoryTaskPercentage: Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0)
                                    },
                                    If(categoryTaskPercentage = 0, ColorFade(ColorValue("#979aaa"), 0.85), // GREY
                                            If(categoryTaskPercentage >= 1 && categoryTaskPercentage <= 32, ColorValue("#faf0be"), // GOLD (Blond)
                                                If(categoryTaskPercentage >= 33 && categoryTaskPercentage <= 65, ColorValue("#ffc87c"), // ORANGE (Topaz)
                                                    If(categoryTaskPercentage >= 66 && categoryTaskPercentage <= 99, ColorValue("#90ee90"), // GREEN (Light Green)
                                                        If(categoryTaskPercentage = 100, ColorValue("#7fff00") // GREEN (Chartreuse)
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                RGBA(0,0,0,1)
                            )
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, Self.BorderThickness)
                        Font: =Font.'Segoe UI'
                        Height: =20
                        HoverColor: =ColorFade(Self.Color, -0.5)
                        HoverFill: =Self.Fill
                        OnSelect: =Select(btn_SupervisorDesignee)
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =Self.Color
                        PressedFill: =ColorFade(Self.Fill, -0.45)
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =10
                        Text: |-
                            =If(!IsEmpty(col_checklistTasks),
                                Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0) & "%",
                                Blank()
                            )
                        Tooltip: ="Supervisor / Designee"
                        Visible: =!IsEmpty(col_checklistTasks)
                        X: =departingEmployee_Percentage.X + departingEmployee_Percentage.Width + 5
                        Y: =Parent.Height - Self.Height - 1
                        ZIndex: =5

                    departingEmployee_Percentage As button:
                        AutoDisableOnSelect: =false
                        BorderColor: =ColorFade(Self.Fill, -75%)
                        BorderThickness: =0.25
                        Color: =RGBA(53, 61, 63, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =
                        DisplayMode: =If(IsEmpty(col_checklistTasks), DisplayMode.Disabled, DisplayMode.Edit)
                        Fill: |-
                            =If(!IsEmpty(col_checklistTasks),
                                With(
                                    {
                                        categoryTaskPercentage: Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0)
                                    },
                                    If(categoryTaskPercentage = 0, ColorFade(ColorValue("#979aaa"), 0.85), // GREY
                                            If(categoryTaskPercentage >= 1 && categoryTaskPercentage <= 32, ColorValue("#faf0be"), // GOLD (Blond)
                                                If(categoryTaskPercentage >= 33 && categoryTaskPercentage <= 65, ColorValue("#ffc87c"), // ORANGE (Topaz)
                                                    If(categoryTaskPercentage >= 66 && categoryTaskPercentage <= 99, ColorValue("#90ee90"), // GREEN (Light Green)
                                                        If(categoryTaskPercentage = 100, ColorValue("#7fff00") // GREEN (Chartreuse)
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                RGBA(0,0,0,1)
                            )
                        FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, Self.BorderThickness)
                        Font: =Font.'Segoe UI'
                        Height: =20
                        HoverColor: =ColorFade(Self.Color, -0.5)
                        HoverFill: =Self.Fill
                        OnSelect: =Select(btn_DepartingEmployee)
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =Self.Color
                        PressedFill: =ColorFade(Self.Fill, -0.45)
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =10
                        Text: |-
                            =If(!IsEmpty(col_checklistTasks),
                                Round((CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip && isCompleted = true)) / CountRows(Filter(col_checklistTasks, groupValue = Self.Tooltip)) * 100), 0) & "%",
                                Blank()
                            )
                        Tooltip: ="Departing Employee"
                        Visible: =!IsEmpty(col_checklistTasks)
                        X: =0 + 1
                        Y: =Parent.Height - Self.Height - 1
                        ZIndex: =6

                HC_Control_2_Set_2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height / 2
                    LayoutGap: =6
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Visible: |-
                        =//If(First(currentUser).isTFManager || First(currentUser).isSupervisor || First(currentUser).isMSO || First(currentUser).isClearingOffice, true, false)
                        true//If(gallery_outprocessingChecklists.AllItemsCount > 1, true, false)
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =3

                    VC_SearchCategory As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =Self.Height
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =8
                        PaddingLeft: =1
                        PaddingRight: =1
                        PaddingTop: =1
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        Width: =230
                        ZIndex: =2

                        label_SearchCriteria As label:
                            Font: =Font.'Segoe UI'
                            Height: =24
                            Size: =10
                            Text: ="Search Criteria"
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_SearchCategory_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(106, 122, 127, 1)
                            BorderThickness: =0.25
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =8
                            RadiusBottomRight: =8
                            RadiusTopLeft: =8
                            RadiusTopRight: =8
                            Width: =225
                            ZIndex: =2

                            combobox_SearchCategory As combobox:
                                BorderColor: =RGBA(106, 122, 127, 1)
                                BorderThickness: =0
                                ChevronBackground: =RGBA(83, 144, 164, 1)
                                ChevronHoverBackground: =//ColorFade(RGBA(56, 96, 178, 1), -20%)
                                Color: =RGBA(79, 90, 94, 1)
                                DefaultSelectedItems: |-
                                    ={Value: "Employee Name"}
                                DisplayFields: =["Value"]
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverBorderColor: =//ColorFade(Self.BorderColor, 15%)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                IsSearchable: =false
                                Items: =ForAll(searchCriteria, SearchObj.SearchTerm)
                                OnSelect: =Reset(input_SearchTerm)
                                PaddingBottom: =7
                                PressedBorderColor: =//Self.HoverBorderColor
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(0, 0, 0, 1)
                                SelectionFill: =RGBA(0, 0, 0, 0)
                                SelectMultiple: =false
                                Size: =10
                                Width: =Parent.Width
                                ZIndex: =2

                    VC_SearchCategory_2 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =Self.Height
                        LayoutMinWidth: =Parent.Width - VC_SearchCategory.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =8
                        PaddingLeft: =2
                        PaddingRight: =1
                        PaddingTop: =1
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: |-
                            =Parent.Width
                            //(Parent.Width - VC_SearchCategory.Width) - HC_Control_2_Set_2.LayoutGap
                        ZIndex: =3

                        label_SearchCategoryHeader As label:
                            Font: =Font.'Segoe UI'
                            Height: =24
                            PaddingBottom: =2
                            PaddingLeft: =0
                            Size: =9
                            Text: |
                                ="Filter by: Checklist ID, Employee Name, Organization Code, Out-Processing Status"
                                //LookUp(searchCriteria, SearchObj.SearchTerm = combobox_SearchCategory.Selected.Value).SearchObj.Header
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            ZIndex: =1

                        HC_SearchCategory_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(79, 90, 94, 1)
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutGap: =8
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =1
                            PaddingRight: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =2

                            CC_SearchInput As groupContainer.manualLayoutContainer:
                                AlignInContainer: =AlignInContainer.Center
                                BorderColor: =RGBA(79, 90, 94, 1)
                                BorderThickness: =1
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height - 4
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Width: =Parent.Width / 2 //- (Parent.PaddingLeft + Parent.PaddingRight)
                                ZIndex: =1

                                input_SearchTerm As text:
                                    BorderColor: =RGBA(214, 221, 224, 1)
                                    BorderThickness: =0
                                    Default: =""
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledColor: =RGBA(0, 0, 0, 0)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    DisplayMode: =If(IsBlank(combobox_SearchCategory.Selected.Value), DisplayMode.Disabled, DisplayMode.Edit)
                                    Fill: |-
                                        =ColorFade(ColorValue("#5390A4"), 0.8) //RGBA(214, 221, 224, 0.35)
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =Parent.Height + 1
                                    HoverBorderColor: =RGBA(214, 221, 224, 1)
                                    HoverFill: |-
                                        =ColorFade(ColorValue("#5390A4"), 0.9) //ColorFade(Self.Fill, -0.1) //RGBA(214, 221, 224, 1)
                                    OnChange: =
                                    OnSelect: |-
                                        =/*
                                        Reset(gallery_checklists);
                                        Reset(gallery_checklistTasks);
                                        Set(defaultGalleryCheklistItem, {})
                                        */
                                    PaddingBottom: =0
                                    PaddingLeft: =30
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    PressedBorderColor: =RGBA(214, 221, 224, 1)
                                    PressedFill: =ColorFade(Self.Fill, -0.1) //Self.Fill
                                    Size: =10
                                    VirtualKeyboardMode: =VirtualKeyboardMode.Text
                                    Width: =Parent.Width
                                    ZIndex: =1

                                icon_Search As icon.Message:
                                    Color: =RGBA(53, 61, 63, 1)
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisabledFill: =
                                    DisplayMode: =DisplayMode.Disabled
                                    Height: =18
                                    Icon: =Icon.Search
                                    Tooltip: =If(IsBlank(combobox_SearchCategory.Selected.Value), "No Search Criteria Has Been Selected", "Search by "&combobox_SearchCategory.Selected.Value)
                                    Visible: =If(IsBlank(input_SearchTerm.Text) || IsBlank(combobox_SearchCategory.Selected.Value), true, false)
                                    Width: =18
                                    X: =4
                                    Y: =2
                                    ZIndex: =2

                                icon_SearchClear As icon.Message:
                                    Color: =RGBA(233, 79, 76, 1)
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisabledFill: =
                                    Height: =18
                                    HoverColor: =ColorFade(Self.Color, -30%)
                                    Icon: =Icon.Cancel
                                    OnSelect: =Reset(input_SearchTerm)
                                    Tooltip: ="Search"
                                    Visible: =!icon_Search.Visible && !IsBlank(combobox_SearchCategory.Selected.Value)
                                    Width: =18
                                    X: =4
                                    Y: =2
                                    ZIndex: =3

                            toggle_filter_t1 As toggleSwitch:
                                AccessibleLabel: ="Show All Checklists. Toggle is currently " & If(Self.Value, "Enabled", "Disabled")
                                AlignInContainer: =AlignInContainer.Center
                                Default: =If(globalFilter <> Self.TrueText, false, true)
                                FalseText: ="All"
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                                Font: =Font.'Segoe UI'
                                Height: =15
                                OnCheck: |
                                    =If(!toggle_filter_t1.Value && !toggle_filter_t2.Value && !toggle_filter_t3.Value,
                                        UpdateContext({globalFilter: Blank()}),
                                        Reset(toggle_filter_t2);
                                        Reset(toggle_filter_t3);
                                        UpdateContext({globalFilter: Blank()})
                                    );
                                    Select(btn_RefreshChecklists);
                                OnSelect: =
                                OnUncheck: |-
                                    =If(!toggle_filter_t1.Value && !toggle_filter_t2.Value && !toggle_filter_t3.Value,
                                        UpdateContext({globalFilter: Blank()});
                                        Select(btn_RefreshChecklists)
                                    );
                                Reset: =
                                Size: =10
                                Tooltip: ="Show All Checklists"
                                TrueFill: =RGBA(40, 112, 134, 1)
                                TrueText: ="All"
                                Visible: =false
                                Width: =51
                                ZIndex: =2

                            toggle_filter_t2 As toggleSwitch:
                                AccessibleLabel: ="Show In-Progress Checklists only. Toggle is currently " & If(Self.Value, "Enabled", "Disabled")
                                AlignInContainer: =AlignInContainer.Center
                                Default: =isToggle_Filter_t2_Enabled
                                DisabledBorderColor: =RGBA(0, 18, 107, 1)//RGBA(56, 56, 56, 1)
                                DisabledColor: =RGBA(0, 0, 0, 1)//RGBA(186, 186, 186, 1)
                                DisplayMode: =DisplayMode.Edit// If(Self.Value, DisplayMode.Disabled)
                                FalseText: ="In Progress"
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                                Font: =Font.'Segoe UI'
                                Height: =15
                                OnCheck: |-
                                    =UpdateContext(
                                        {
                                            globalFilter: Self.TrueText
                                        }
                                    );
                                    /*
                                    // DEBUG VALUES
                                    If(isNew_Toggle_Filter_t2,
                                        Notify("RUN REFRESH T2");
                                        Select(btn_RefreshChecklists),
                                        Notify("DO NOTHING T2")
                                    );
                                    */
                                    Reset(toggle_filter_t3);
                                    UpdateContext(
                                        {
                                            isNew_Toggle_Filter_t2: false,
                                            isNew_Toggle_Filter_t3: true,
                                            isToggle_Filter_t2_Enabled: true,
                                            isToggle_Filter_t3_Enabled: false
                                        }
                                    );
                                    DataSourceComponent.Refresh(false, globalFilter)
                                OnSelect: =
                                OnUncheck: =Reset(Self)
                                Reset: =
                                Size: =10
                                Tooltip: ="Show In-Progress Checklists Only"
                                TrueFill: =RGBA(40, 112, 134, 1)
                                TrueText: ="In Progress"
                                Width: =105
                                ZIndex: =3

                            toggle_filter_t3 As toggleSwitch:
                                AccessibleLabel: ="Show Completed Checklists only. Toggle is currently " & If(Self.Value, "Enabled", "Disabled")
                                AlignInContainer: =AlignInContainer.Center
                                Default: =isToggle_Filter_t3_Enabled
                                FalseText: ="Completed"
                                FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                                Font: =Font.'Segoe UI'
                                Height: =15
                                OnChange: =
                                OnCheck: |-
                                    =UpdateContext(
                                        {
                                            globalFilter: Self.TrueText
                                        }
                                    );
                                    /*
                                    // DEBUG VALUES
                                    If(isNew_Toggle_Filter_t3,
                                        Notify("RUN REFRESH T3");
                                        Select(btn_RefreshChecklists),
                                        Notify("DO NOTHING T3")
                                    );
                                    */
                                    Reset(toggle_filter_t2);
                                    UpdateContext(
                                        {
                                            isNew_Toggle_Filter_t3: false,
                                            isNew_Toggle_Filter_t2: true,
                                            isToggle_Filter_t3_Enabled: true,
                                            isToggle_Filter_t2_Enabled: false
                                        }
                                    );
                                    DataSourceComponent.Refresh(false, globalFilter);
                                OnSelect: =
                                OnUncheck: =Reset(Self)
                                Reset: =
                                Size: =10
                                Tooltip: ="Show Completed Checklists Only"
                                TrueFill: =RGBA(40, 112, 134, 1)
                                TrueText: ="Completed"
                                Width: =102
                                ZIndex: =4

                            CC_CompletedDays As groupContainer.manualLayoutContainer:
                                AlignInContainer: =AlignInContainer.Center
                                BorderColor: =RGBA(79, 90, 94, 1)
                                BorderThickness: =1
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height - 4
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Visible: =toggle_filter_t3.Value
                                Width: =90
                                ZIndex: =5

                                input_daysCompleted As text:
                                    BorderColor: =RGBA(214, 221, 224, 1)
                                    BorderThickness: =0
                                    Default: =daysCompleted
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledColor: =RGBA(0, 0, 0, 0)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    DisplayMode: =If(IsBlank(combobox_SearchCategory.Selected.Value), DisplayMode.Disabled, DisplayMode.Edit)
                                    Fill: |-
                                        =ColorFade(ColorValue("#5390A4"), 0.8) //RGBA(214, 221, 224, 0.35)
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =Parent.Height + 1
                                    HoverBorderColor: =RGBA(214, 221, 224, 1)
                                    HoverFill: |-
                                        =ColorFade(ColorValue("#5390A4"), 0.9) //ColorFade(Self.Fill, -0.1) //RGBA(214, 221, 224, 1)
                                    OnChange: =
                                    OnSelect: |-
                                        =/*
                                        Reset(gallery_checklists);
                                        Reset(gallery_checklistTasks);
                                        Set(defaultGalleryCheklistItem, {})
                                        */
                                    PaddingBottom: =0
                                    PaddingLeft: =5
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    PressedBorderColor: =RGBA(214, 221, 224, 1)
                                    PressedFill: =ColorFade(Self.Fill, -0.1) //Self.Fill
                                    Size: =10
                                    Tooltip: ="Days Since Completed"
                                    VirtualKeyboardMode: =VirtualKeyboardMode.Text
                                    Width: =Parent.Width / 1.7
                                    ZIndex: =1

                                icon_ComepletedDaysConfirm As icon.Message:
                                    Color: =RGBA(40, 112, 134, 1)
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisabledFill: =
                                    Height: =15
                                    HoverColor: =ColorFade(Self.Color, -30%)
                                    Icon: =Icon.CheckBadge
                                    OnSelect: |-
                                        =UpdateContext(
                                            {
                                                daysCompleted: Value(input_daysCompleted.Text)
                                            }
                                        )
                                    Tooltip: ="Submit Days Completed"
                                    Visible: |-
                                        =If(Text(daysCompleted) = input_daysCompleted.Text,
                                            false,
                                            true
                                        )
                                    Width: =15
                                    X: =(input_daysCompleted.Width - Self.Width) - 3
                                    Y: =4
                                    ZIndex: =2

                                label_DaysCompleted As label:
                                    Font: =Font.'Segoe UI'
                                    Height: =22
                                    Size: =10
                                    Text: ="Days"
                                    Width: =40
                                    X: =input_daysCompleted.Width
                                    ZIndex: =3

            VC_Checklist_Workspace_Control_RIGHT As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =Self.Height
                LayoutMinWidth: =200
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width * 0.3
                ZIndex: =3

                HC_Control_3_Set_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =(Parent.Height / 4)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =1

                    HC_Created As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =1

                        CC_Created_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        created As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Created Date: <strong>"& DateValue(gallery_checklists.Selected.Created) & "</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_Supervisor As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =3

                        CC_Supervisor_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        supervisor As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Supervisor: <strong>"& 
                                If(!IsBlank(gallery_checklists.Selected.ID),
                                    Office365Users.UserProfile(gallery_checklists.Selected.uidSupervisor).Surname & ", " & Office365Users.UserProfile(gallery_checklists.Selected.uidSupervisor).GivenName
                                )&
                                //First(Ungroup(Table(gallery_checklists.Selected), "supervisor")).supervisorSurname &", "& First(Ungroup(Table(gallery_checklists.Selected), "supervisor")).supervisorGivenName &
                                "</strong</h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_Designee As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        Width: =Parent.Width
                        ZIndex: =5

                        CC_Designee_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        designee As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Designee: <strong>"& 
                                If(!IsBlank(gallery_checklists.Selected.ID),
                                    Office365Users.UserProfile(gallery_checklists.Selected.uidDesignee).Surname & ", " & Office365Users.UserProfile(gallery_checklists.Selected.uidDesignee).GivenName
                                ) &
                                //First(Ungroup(Table(gallery_checklists.Selected), "designee")).surname &", "& First(Ungroup(Table(gallery_checklists.Selected), "designee")).givenName &
                                "</strong></h3>"
                            Size: =9
                            Width: =Parent.Width / 3
                            ZIndex: =3

                HC_Control_3_Set_2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =(Parent.Height / 4)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =2

                    HC_DepartureDate As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =1

                        CC_DepartureDate_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        departureDate As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Departure Date: <strong>"&  DateValue(gallery_checklists.Selected.departureDate) &"</strong</h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_TBD_5 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        Width: =Parent.Width / 3
                        ZIndex: =2

                        CC_TBD_5_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        tbd_5 As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>TBD_5: <strong>"& "Update Value" &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_Delegated As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =3

                        CC_Delegated_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                            indicator_Delegated As circle:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(255, 255, 0, 1)
                                Height: =12
                                Visible: =If(gallery_checklists.Selected.isDelegated, true, false)
                                Width: =12
                                X: =2
                                Y: =(Self.Height / 2) + 2
                                ZIndex: =1

                        delegated As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Delegated: <strong>"& gallery_checklists.Selected.isDelegated &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                HC_Control_3_Set_3 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =(Parent.Height / 4)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =3

                    HC_DaysLapsed As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =1

                        CC_DaysLapsed_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                            indicator_State_1 As circle:
                                BorderColor: =RGBA(106, 122, 127, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(255, 255, 0, 1)
                                Height: =13
                                Visible: =false
                                Width: =14
                                Y: =(Self.Height / 2) + 1
                                ZIndex: =1

                        daysLapsed As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Days Lapsed: <strong>"& DateDiff(gallery_checklists.Selected.Created, Today()) &"</srtrong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_TBD_6 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        Width: =Parent.Width / 3
                        ZIndex: =2

                        CC_TBD_6_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                            indicator_State_2 As circle:
                                BorderColor: =RGBA(106, 122, 127, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(255, 255, 0, 1)
                                Height: =13
                                Visible: =false
                                Width: =14
                                Y: =(Self.Height / 2) + 1
                                ZIndex: =1

                        tbd_6 As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>TBD_6: <strong>"& "Update Value" &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =3

                    HC_Status As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =3

                        CC_Status_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        status As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal;overflow: hidden;white-space:nowrap'>Checklist Status: <strong>"& gallery_checklists.Selected.checklistStatus.Value &"</strong></h3>"
                                //"<h3 style='margin:0;padding:0;font-weight:normal'>Checklist Status: <strong>"& gallery_checklists.Selected.checklistStatus.Value &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                HC_Control_3_Set_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =(Parent.Height / 4)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width - Parent.PaddingLeft
                    ZIndex: =4

                    HC_DaysRemaining As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width / 2
                        ZIndex: =1

                        CC_DaysRemaining_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                            indicator_DaysRemaining As circle:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(233, 79, 76, 1)
                                Height: =12
                                Visible: =If(DateDiff(Today(), gallery_checklists.Selected.departureDate) <= daysRemainingWarning && gallery_checklists.Selected.outprocessingState.Value = "In Progress", true, false)
                                Width: =12
                                X: =1
                                Y: =(Self.Height / 2) + 3
                                ZIndex: =1

                        daysRemining As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |
                                =If(!IsBlank(gallery_checklists.Selected.ID),
                                    With(
                                        {   
                                            varDateMod: If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                    DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                        DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)
                                                )
                                            )
                                        },
                                        "<h3 style='margin:0;padding:0;font-weight:normal'>Days Remaining: <strong>"& If(gallery_checklists.Selected.outprocessingState.Value = "Completed", "N/A", 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)) &"</strong></h3>"
                                    )
                                )
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_TBD_4 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        Width: =Parent.Width / 3
                        ZIndex: =3

                        CC_TBD_4_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                        tbd_4 As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>TBD_4: <strong>"& "Update Vlaue" &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

                    HC_State As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =6
                        RadiusBottomRight: =6
                        RadiusTopLeft: =6
                        RadiusTopRight: =6
                        Width: =Parent.Width / 2
                        ZIndex: =4

                        CC_State_Spacer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =checklistWorkspaceControlSpacerWidth
                            ZIndex: =1

                            indicator_State_Completed As circle:
                                BorderColor: =RGBA(12, 59, 94, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(166, 215, 153, 1)
                                Height: =12
                                Visible: =If(gallery_checklists.Selected.outprocessingState.Value = "Completed", true, false)
                                Width: =12
                                X: =1
                                Y: =(Self.Height / 2) + 2
                                ZIndex: =1

                            indicator_State_InProgress As circle:
                                BorderColor: =RGBA(53, 61, 63, 1)
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(255, 255, 0, 1)
                                Height: =12
                                Visible: =If(gallery_checklists.Selected.outprocessingState.Value = "In Progress", true, false)
                                Width: =12
                                X: =1
                                Y: =(Self.Height / 2) + 3
                                ZIndex: =2

                        state As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            HtmlText: |-
                                ="<h3 style='margin:0;padding:0;font-weight:normal'>Checklist State: <strong>"& gallery_checklists.Selected.outprocessingState.Value &"</strong></h3>"
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =2

    CC_EditChecklist_Display As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Semilight
        Height: =Parent.Height
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Visible: =isEditChecklistVisible
        Width: =Parent.Width
        ZIndex: =7

        glassBlur_7 As htmlViewer:
            Height: =VC_EditChecklist.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"& VC_EditChecklist.Height - 1 &"px;backdrop-filter:blur(20px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_EditChecklist.Width
            X: =VC_EditChecklist.X
            Y: =VC_EditChecklist.Y
            ZIndex: =1

        VC_EditChecklist As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(106, 122, 127, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Bold
            Fill: =If(isAccessibilityEnabled, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 0))
            Height: =575
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =850
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

            HC_EditChecklist_Header As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =1

                label_CloseEditChecklist As label:
                    Align: =Align.Center
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    Size: =16
                    TabIndex: =20
                    Text: ="Edit Out-Processing Checklist"
                    Visible: =true//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                icon_EditChecklist_Close As icon.CancelBadge:
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =20
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =Reset(toggle_DelegationNewChecklist_4);
                        Reset(checkbox_DelegationAcknowledge_4);
                        Reset(combobox_EmployeeName_4);
                        Reset(combobox_Designee_4);
                        Reset(combobox_Service_4);
                        Reset(combobox_MilitaryServiceBranch_4);
                        Reset(combobox_PayPlanGrade_4);
                        Reset(combobox_Organization_4);
                        Reset(input_OrganizationCode_4);
                        Reset(input_OfficeLocation_4);
                        Reset(combobox_State_4);
                        Reset(input_City_4);
                        Reset(combobox_OutprocessingStatus_4);
                        Reset(datepicker_DepartureDate_4_1);
                        Reset(input_NewEmployerName_4);
                        Reset(input_NewEmployerAddress_4);
                        Set(isEditChecklistVisible, false)
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =20
                    X: =0.00
                    ZIndex: =2

            VC_EditChecklist_Body As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - (HC_EditChecklist_Header.Height + HC_EditChecklist_Footer.Height)
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =10
                PaddingTop: =10
                Width: =Parent.Width
                ZIndex: =2

                HC_Delegation_2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: |-
                        =28
                        //If(toggle_DelegationNewChecklist, 150, 45)
                        //If(toggle_DelegationNewChecklist_1.Value && !checkbox_DelegationAcknowledge_1.Checked, 150, 50)
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =12
                    PaddingRight: =5
                    PaddingTop: =4
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =1

                    badge_isDelegated_4 As Badge:
                        AccessibleLabel: =""
                        Appearance: ='BadgeCanvas.Appearance'.Filled
                        BasePaletteColor: =
                        Content: ="DELEGATED"
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =20
                        LayoutMinHeight: =32
                        LayoutMinWidth: =32
                        Shape: ='BadgeCanvas.Shape'.Rounded
                        ThemeColor: ='BadgeCanvas.ThemeColor'.Important
                        Visible: =gallery_checklists.Selected.isDelegated
                        Width: =76
                        X: =card_outProcessingStatus.X + 8
                        Y: =card_outProcessingStatus.Y - Self.Height
                        ZIndex: =1

                    HC_Delegation_4 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(139, 154, 159, 1)
                        BorderThickness: =0.25
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =0
                        Height: =30
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =false
                        Width: =150
                        ZIndex: =2

                        HC_iconDelegation_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            Fill: =If(!toggle_DelegationNewChecklist_4.Value, RGBA(0,0,0,0), RGBA(166, 215, 153, 1))
                            FillPortions: =0
                            Height: =22
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =50
                            RadiusBottomRight: =50
                            RadiusTopLeft: =50
                            RadiusTopRight: =50
                            Width: =24
                            ZIndex: =1

                            icon_Delegation_4 As icon.People:
                                Color: |-
                                    =If(toggle_DelegationNewChecklist_4.Value = true, ColorValue("#000000"), ColorValue("#4F5A5E")) //RGBA(233, 79, 76, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =20
                                Icon: =Icon.Person
                                Width: =22
                                ZIndex: =1

                        label_DelegationNewChecklist_4 As label:
                            Height: =26
                            Size: =11
                            Text: ="Delegation"
                            Width: =85
                            ZIndex: =2

                        toggle_DelegationNewChecklist_4 As toggleSwitch:
                            FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                            Height: =18
                            OnCheck: =Set(popupDelegationScope, "text_DelegationDisclaimer");
                            OnUncheck: |-
                                =Set(popupDelegationScope, Blank());
                                Reset(checkbox_DelegationAcknowledge_4)
                            ShowLabel: =false
                            Width: =30
                            ZIndex: =3

                    VC_DelegationDisclaimer_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        Height: =If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked, 150, 50)
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingTop: =6
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Visible: =false
                        ZIndex: =3

                        HtmlText1_4 As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Fill: =RGBA(0, 0, 0, 0)
                            Font: =Font.'Segoe UI'
                            Height: =115
                            HtmlText: |-
                                =//Substitute(LookUp(appSettings, Scope = popupDelegationScopeScope).content_RT, "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)")
                                LookUp(appSettings, Scope = popupDelegationScope).content_RT
                            PaddingBottom: =0
                            PaddingLeft: =15
                            PaddingRight: =0
                            PaddingTop: =
                            Size: =10
                            Visible: =If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked, true, false)
                            Width: =Parent.Width
                            ZIndex: =1

                        checkbox_DelegationAcknowledge_4 As Checkbox:
                            BasePaletteColor: =
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =
                            FontItalic: =false
                            FontSize: =0
                            FontStrikethrough: =false
                            FontUnderline: =false
                            FontWeight: =""
                            Height: =24
                            Label: ="Acknowledge"
                            LayoutMinHeight: =32
                            LayoutMinWidth: =160
                            OnCheck: |-
                                =true;
                                //Set(isDelegationDisclaimerVisible, !isDelegationDisclaimerVisible)
                            OnSelect: =
                            OnUncheck: =
                            Visible: =If(toggle_DelegationNewChecklist_4.Value, true, false)
                            Width: =160
                            X: =0
                            Y: =0
                            ZIndex: =3

                HC_UserDetails_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =2

                    VC_UserName_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        label_EmployeeName_4 As label:
                            Color: =If(combobox_EmployeeName_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Employee *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_EmployeeName_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_EmployeeName_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderColor: =RGBA(106, 122, 127, 1)
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |+
                                    =If(!IsBlank(gallery_checklists.Selected.ID),
                                        With(
                                            {
                                                cu: Office365Users.UserProfileV2(gallery_checklists.Selected.uidUser)
                                            },
                                            Office365Users.SearchUser({searchTerm:cu.mail})
                                        )
                                    )
                                    
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: =DisplayMode.Disabled
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search Last, First Name (E-Mail Address)"
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Search Last, First Name (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_EmployeeName_4.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_Supervisor_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        HC_Supervisor_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_Designee_Help_4_1 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_designeeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_Designee_4_1 As label:
                                Color: =If(combobox_Supervisor_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Supervisor *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_Supervisor_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_Supervisor_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |
                                    =If(!IsBlank(gallery_checklists.Selected.ID),
                                        With(
                                            {
                                                sup: Office365Users.UserProfileV2(gallery_checklists.Selected.uidSupervisor)
                                            },
                                            Office365Users.SearchUser({searchTerm:sup.mail})
                                        )
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: |-
                                    =DisplayMode.Edit
                                    /*
                                    If(!toggle_DelegationNewChecklist_1.Value && !checkbox_DelegationAcknowledge_1.Checked, 
                                        DisplayMode.Disabled,
                                        If(toggle_DelegationNewChecklist_1.Value && checkbox_DelegationAcknowledge_1.Checked,
                                            DisplayMode.Edit,
                                            If(toggle_DelegationNewChecklist_1.Value && !checkbox_DelegationAcknowledge_1.Checked,
                                                DisplayMode.Disabled
                                            )
                                        )
                                    )
                                    */
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                    //If(!toggle_DelegationNewChecklist, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Last, First or (E-Mail Address)"   
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Last, First or (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_Supervisor_4.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_Designee_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =3

                        HC_Designee_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_Designee_Help_4_2 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_designeeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_Designee_4_2 As label:
                                Color: =If(combobox_Designee_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Designee *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_Designee_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_Designee_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |
                                    =If(!IsBlank(gallery_checklists.Selected.ID),
                                        With(
                                            {
                                                des: Office365Users.UserProfileV2(gallery_checklists.Selected.uidDesignee)
                                            },
                                            Office365Users.SearchUser({searchTerm:des.mail})
                                        )
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: |-
                                    =DisplayMode.Edit
                                    /*
                                    If(!toggle_DelegationNewChecklist_1.Value && !checkbox_DelegationAcknowledge_1.Checked, 
                                        DisplayMode.Disabled,
                                        If(toggle_DelegationNewChecklist_1.Value && checkbox_DelegationAcknowledge_1.Checked,
                                            DisplayMode.Edit,
                                            If(toggle_DelegationNewChecklist_1.Value && !checkbox_DelegationAcknowledge_1.Checked,
                                                DisplayMode.Disabled
                                            )
                                        )
                                    )
                                    */
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                    //If(!toggle_DelegationNewChecklist, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Last, First or (E-Mail Address)"
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Last, First or (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_Designee_4.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Organization_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =3

                    VC_Organization_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =1

                        label_Organization_4 As label:
                            Color: =If(combobox_Organization_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Organization *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_Orgnization_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_Organization_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp(col_organizations, ORG_ID = LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).organizationId),
                                        LookUp(col_organizations, ORG_ID = LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).organizationId)
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["ORG_NAME","ORG Code"]
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search organization"
                                Items: |-
                                    =//Choices('GLBL-DS-userRegistration'.organization)
                                    col_organizations
                                NoSelectionText: ="Search organization"   
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["ORG_NAME", "ORG Code"]
                                SearchItems: |-
                                    =Search(//Choices('GLBL-DS-userRegistration'.organization)
                                    col_organizations,combobox_Organization_4.SearchText,"ORG_NAME","ORG Code")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_OrganizationCode_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =2

                        HC_OrganizationCode_Label_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OrganizationCode_Help_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_organizationCodeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OrganizationCode_4 As label:
                                Color: =If(input_OrganizationCode_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Organization Code *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OrganizationCode_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            input_OrganizationCode_4 As text:
                                BorderThickness: =0
                                Default: |
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp(col_organizations, ORG_ID = LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).organizationId).'ORG Code',
                                        LookUp(col_organizations, ORG_ID = LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).organizationId).'ORG Code'
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Service_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =4

                    VC_Service_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        label_Service_4 As label:
                            Color: =If(combobox_Service_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Service Type*"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_Service_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_Service_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).service,
                                        LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).service
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Mail"]
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Service"
                                IsSearchable: =false
                                Items: =Choices('GLBL-DS-userRegistration'.service).Value
                                NoSelectionText: ="Select Service"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_MilitaryServiceBranch_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        label_MilitaryServiceBranch_4 As label:
                            Color: =If(combobox_MilitaryServiceBranch_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Military Service Branch *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_MilitaryServiceBranch_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_MilitaryServiceBranch_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).militaryServiceBranch,
                                        LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).militaryServiceBranch
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Mail"]
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated && combobox_Service_4.Selected.Value = "Military", DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Military Branch"
                                IsSearchable: =false
                                Items: =Choices('GLBL-DS-userRegistration'.militaryServiceBranch).Value
                                NoSelectionText: ="Select Military Branch"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_PayPlanGrade_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =3

                        label_PayPlanGrade_4 As label:
                            Color: =If(combobox_PayPlanGrade_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Payplan / Grade / Rank *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_PayPlanGrade_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_PayPlanGrade_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(gallery_checklists.Selected.isDelegated,
                                        {v: LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).payPlan_Grade},
                                        {v: LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).payPlan_Grade}
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["v"]
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated && !IsBlank(combobox_Service_4.Selected), DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Grade / Rank"
                                IsSearchable: =false
                                Items: =Ungroup(Filter(PayPlanGrades, Service = combobox_Service_4.Selected.Value), "ppg")
                                NoSelectionText: ="Select Grade / Rank"    
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["v"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Location_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    VC_StreetAddress_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_OfficeLocation_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OfficeLocation_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OfficeLocation_4 As label:
                                Color: =If(input_OfficeLocation_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Office (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OfficeLocation_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            input_OfficeLocation_4 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: |
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).officeLocation,
                                        LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).officeLocation
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_State_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Visible: =false
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        HC_State_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_State_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_State_4 As label:
                                Color: =If(combobox_State_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="State (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_State_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_State_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |
                                    =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Path","Value"]
                                DisplayMode: =If(toggle_DelegationNewChecklist_4.Value && checkbox_DelegationAcknowledge_4.Checked, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search State"
                                IsSearchable: =false
                                Items: =stateChoices
                                NoSelectionText: ="Search State"   
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_City_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =3

                        HC_City_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_City_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_City_4 As label:
                                Color: =If(input_City_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="City (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_City_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            input_City_4 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: |
                                    =If(gallery_checklists.Selected.isDelegated,
                                        LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser).city,
                                        LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser).city
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(gallery_checklists.Selected.isDelegated, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                HC_OutprocessingDetails_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =6

                    VC_OutprocessingStatus_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_OutprocessingStatus_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OutProcessing_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OutprocessingStatus_4 As label:
                                Color: =If(combobox_OutprocessingStatus_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Out-Processing Status *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OutprocessingStatus_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_OutprocessingStatus_4 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderColor: =focusedBorderColor //RGBA(0, 18, 107, 1)
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: =LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).checklistStatus
                                DisabledBorderColor: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Path","Value"]
                                DisplayMode: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked, 
                                        DisplayMode.Edit,
                                        If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked,
                                            DisplayMode.Disabled,
                                            If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked,
                                                DisplayMode.Edit
                                            )
                                        )
                                    )
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverBorderColor: =
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Status"
                                IsSearchable: =false
                                Items: =Choices('OBOF-DS-checklistOutProcessing'.checklistStatus).Value
                                NoSelectionText: ="Select Status"
                                PaddingLeft: =10
                                PaddingTop: =6
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_DepartureDate_NewChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        HC_DepartureDate_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_DepartureDate_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_DepartureDate_4 As label:
                                Color: =If(datepicker_DepartureDate_4_1.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Departure Date *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_DepartureDate_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            datepicker_DepartureDate_4_1 As datepicker:
                                BorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1))
                                BorderThickness: =0
                                Color: =datepickerSelectedColor//RGBA(0, 0, 0, 1)
                                DefaultDate: =LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).departureDate
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked, 
                                        DisplayMode.Edit,
                                        If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked,
                                            DisplayMode.Disabled,
                                            If(toggle_DelegationNewChecklist_4.Value && !checkbox_DelegationAcknowledge_4.Checked,
                                                DisplayMode.Edit
                                            )
                                        )
                                    )
                                EndYear: =2150
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                IconBackground: |-
                                    =ColorValue("#A7B6CB")//RGBA(56, 96, 178, 1)
                                InputTextPlaceholder: ="Select Departue Date"//If(IsBlank(Self.SelectedDate), Text(Date(2001,12,31), Self.Format, Self.Language))
                                OnSelect: =If(IsBlank(datepicker_DepartureDate_4_1.SelectedDate), Set(datepickerSelectedColor, RGBA(0,0,0,0)), Set(datepickerSelectedColor, RGBA(40, 112, 134, 1)))
                                PaddingBottom: =0
                                PaddingLeft: =4
                                Size: =9
                                StartYear: =2023
                                Visible: =false
                                Width: =Parent.Width
                                ZIndex: =1

                            CC_datepickerDepartureDate_4 As groupContainer.manualLayoutContainer:
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =32
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                Width: =Parent.Width
                                ZIndex: =2

                                "datepicker_DepartureDate_4 As 'Date picker'":
                                    BasePaletteColor: =
                                    DisplayMode: |-
                                        =If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 
                                            DisplayMode.Edit,
                                            If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                DisplayMode.Disabled,
                                                If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                    DisplayMode.Edit
                                                )
                                            )
                                        )
                                    Font: =""
                                    FontColor: =
                                    FontItalic: =false
                                    FontSize: =12
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Format: ='DatePickerCanvas.Format'.LongAbbreviated
                                    Height: =32
                                    Placeholder: =""
                                    SelectedDate: =gallery_checklists.Selected.departureDate
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                CC_ColorHighlight_4 As groupContainer.manualLayoutContainer:
                                    BorderColor: =RGBA(139, 154, 159, 0.5)
                                    BorderThickness: =0.25
                                    DropShadow: =DropShadow.None
                                    Fill: |-
                                        =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, ColorFade(ColorValue("#98D046"), 0.85), RGBA(255,255,255,1))
                                    Height: =32
                                    RadiusBottomLeft: =0
                                    RadiusBottomRight: =0
                                    RadiusTopLeft: =0
                                    RadiusTopRight: =0
                                    Visible: =(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked) || (!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked)
                                    Width: =Parent.Width - 40
                                    X: =0 - 1
                                    ZIndex: =2

                                label_DatePickerValue_4 As label:
                                    Color: =RGBA(40, 112, 134, 1)
                                    Font: =Font.'Segoe UI'
                                    Height: =32
                                    Size: =9
                                    Text: =datepicker_DepartureDate_4.SelectedDate
                                    Width: =CC_ColorHighlight_4.Width
                                    ZIndex: =3

                HC_NewEmployer_EditChecklist_4 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =7

                    VC_NewEmployerName_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_NewEmployerName_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_TransferEmployerAgency_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_TransferEmployerAgency_4 As label:
                                Color: =If(input_NewEmployerName_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="New Employer / Agency Name *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NewEmployerName_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            input_NewEmployerName_4 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: =gallery_checklists.Selected.newEmployerAgency
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Reset: =If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value, false, true)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_NewEmployerAddress_EditChecklist_4 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 1.5) - 12
                        ZIndex: =2

                        HC_NewEmployerAddress_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_NewEmployerAddress_Helper_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_NewEmployerAddress_4 As label:
                                Color: =If(input_NewEmployerAddress_4.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="New Employer / Agency Address (Street Address, City, State, Postal Code) *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NewEmployerAddress_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            input_NewEmployerAddress_4 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: =gallery_checklists.Selected.newEmployerAgencyAddress
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist_4.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Reset: =If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value, false, true)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

            HC_EditChecklist_Footer As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutGap: =25
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =8
                PaddingTop: =1
                Width: =Parent.Width
                X: =0.00
                ZIndex: =3

                label_InfoPopupDialog_4 As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    Size: =10
                    Text: ="Information Dialog Window"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =false//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                button_DeleteChecklist_4 As button:
                    BorderColor: =ColorFade(Self.Fill, -55%)
                    BorderThickness: =1
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(253, 207, 180, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    FontWeight: =FontWeight.Bold
                    Height: =28
                    HoverBorderColor: =ColorFade(Self.HoverFill, -0.5)
                    HoverColor: =RGBA(53, 61, 63, 1)
                    HoverFill: =RGBA(224, 86, 6, 1)
                    OnSelect: |-
                        =Set(popupScope, "popup_main_verifyDeleteChecklist");
                        Set(isMainPopupVisible, true);
                        /*
                        Set(transactLogScope, "deleteChecklist");
                        Select(recordTransactLog);
                        Set(isEditChecklistVisible, false);
                        */
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Delete"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =2

                button_SaveChecklist_4 As button:
                    BorderColor: =ColorFade(Self.Fill, -55%)
                    BorderThickness: =1
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(180, 214, 250, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    FontWeight: =FontWeight.Bold
                    Height: =28
                    HoverBorderColor: =ColorFade(Self.HoverFill, -0.5)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(71, 158, 245, 1)
                    OnSelect: |-
                        =//Select(updateChecklistAttributes);
                        If(combobox_Supervisor_4.Selected.Id <> gallery_checklists.Selected.uidSupervisor || combobox_Designee_4.Selected.Id <> gallery_checklists.Selected.uidDesignee,
                            Set(sendNotificationSupervisorDesigneeScope, "updateChecklistAttributes");
                            //Select(sendNotificationSupervisorDesignee),
                            DataSourceComponent.SendNotificationSupervisorDesignee(sendNotificationSupervisorDesigneeScope),
                            Set(runSendNotificationSupervisorDesignee, false)
                        );
                        DataSourceComponent.UpdateChecklistAttributes(gallery_checklists.Selected.ID);
                        Notify($"{DataSourceComponent.RecentlyPatchedChecklist.ID}");
                        //UpdateContext({recentlySelectedChecklist: DataSourceComponent.RecentlySelectedChecklist.ID});
                        DataSourceComponent.Refresh(false, globalFilter);
                        Set(isEditChecklistVisible, false);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Save"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =3

    CC_LocalTask As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Semilight
        Fill: =RGBA(139, 154, 159, 0.65)
        Height: =Parent.Height
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Visible: =isNewLocalTaskVisible
        Width: =Parent.Width
        ZIndex: =8

        glassBlur_9 As htmlViewer:
            Height: =VC_LocalTask_1.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"& VC_LocalTask_1.Height - 1 &"px;backdrop-filter:blur(15px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_LocalTask_1.Width
            X: =VC_LocalTask_1.X
            Y: =VC_LocalTask_1.Y
            ZIndex: =1

        VC_LocalTask_1 As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(106, 122, 127, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Bold
            Fill: =If(isAccessibilityEnabled, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 0))
            Height: =700
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: |-
                =//App.ActiveScreen.Width / 1.4
                1120
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

            HC_LocalTaskHeader_1 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =1

                label_NewLocalTask_1 As label:
                    Align: =Align.Center
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    Size: =16
                    TabIndex: =20
                    Text: ="Local Task Editor"
                    Visible: =true//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                icon_NewLocalTask_Close_2 As icon.CancelBadge:
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =20
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =
                        Reset(input_LocalTask_Title);
                        Reset(combobox_LocalTaskDetails_Service);
                        Reset(RichTextEditor_TaskDetails);
                        Reset(combobox_LocalTask_Group);
                        Reset(input_LocalTask_DueInDays_2);
                        Reset(checkbox_LocalTask_Employee);
                        Reset(checkbox_LocalTask_Supervisor);
                        Reset(checkbox_LocalTask_Designee);
                        Reset(checkbox_LocalTask_MSO);
                        Reset(checkbox_LocalTask_ClearingOffice);
                        Reset(checkbox_LocalTack_EnableNotification);
                        Set(isNewLocalTaskVisible, false);
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =20
                    X: =0.00
                    ZIndex: =2

            HC_CurrentlySelectedChecklistDetails_1 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =RGBA(79, 90, 94, 1)
                BorderThickness: =0.25
                DropShadow: =DropShadow.None
                Fill: =RGBA(180, 214, 250, 1)
                FillPortions: =0
                Height: =30
                LayoutAlignItems: =LayoutAlignItems.End
                LayoutGap: =12
                LayoutMinHeight: =100
                LayoutMinWidth: =Self.Width
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =4
                PaddingRight: =4
                RadiusBottomLeft: =6
                RadiusBottomRight: =6
                RadiusTopLeft: =6
                RadiusTopRight: =6
                Visible: =!IsBlank(gallery_checklists.Selected.ID)
                Width: =Parent.Width - 24
                ZIndex: =2

                VC_CurrentlySelectedChecklistDetails_3 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Center
                    BorderColor: =RGBA(53, 61, 63, 1)
                    DropShadow: =DropShadow.None
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =1
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =4
                    PaddingLeft: =4
                    PaddingTop: =4
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Width: =Parent.Width
                    ZIndex: =1

                    "Icon3_1 As icon.'3DPrinting'":
                        Color: =RGBA(0, 81, 100, 1)
                        Height: =20
                        Icon: =Icon.Information
                        Width: =20
                        ZIndex: =1

                    label_CurrentlySelectedChecklistDetails_1 As label:
                        Color: =RGBA(13, 50, 61, 1)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =18
                        PaddingTop: =0
                        Size: =10
                        Text: ="Currently Selected Checklist"
                        VerticalAlign: =VerticalAlign.Top
                        Width: =190
                        ZIndex: =2

                    label_CurrentlySelectedChecklistDetails_CHKID_4 As label:
                        Color: =RGBA(0,0,0,1)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =18
                        PaddingTop: =0
                        Size: =10
                        Text: |-
                            ="CHKID: " & gallery_checklists.Selected.ID
                        VerticalAlign: =VerticalAlign.Top
                        Width: =85
                        ZIndex: =3

                    label_CurrentlySelectedChecklistDetails_CHKID_2 As label:
                        Color: =RGBA(0,0,0,1)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =18
                        PaddingTop: =0
                        Size: =10
                        Text: =First(Ungroup(gallery_checklists.Selected.employee, "displayName")).displayName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.Width
                        ZIndex: =4

            HC_LocalTask_2Divider As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =12
                PaddingRight: =12
                ZIndex: =3

                VC_LocalTask_Gallery As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderColor: =RGBA(53, 61, 63, 1)
                    BorderThickness: =0.25
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height - 21
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =4
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =300
                    ZIndex: =1

                    VC_CurrentlySelectedChecklistDetails_2 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(53, 61, 63, 1)
                        DropShadow: =DropShadow.None
                        Fill: =RGBA(106, 122, 127, 0.35)
                        FillPortions: =0
                        Height: =30
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =4
                        PaddingRight: =4
                        PaddingTop: =4
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width + 4
                        ZIndex: =1

                        label_CurrentlySelectedChecklistDetails_CHKID_3 As label:
                            Color: =RGBA(0,0,0,1)
                            FillPortions: =1
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =18
                            LayoutMinHeight: =23
                            PaddingBottom: =0
                            PaddingTop: =0
                            Size: =10
                            Text: ="Local Task Repository"
                            Width: =Parent.Width
                            ZIndex: =4

                        Rectangle4 As rectangle:
                            AlignInContainer: =AlignInContainer.Start
                            Fill: =RGBA(53, 61, 63, 1)
                            Height: =1
                            Width: =Parent.Width
                            ZIndex: =5

                    CC_SearchInput_1 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(79, 90, 94, 1)
                        BorderThickness: =1
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =22
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Parent.Width - 1
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        Width: =Parent.Width - 10
                        ZIndex: =3

                        input_SearchTerm_1 As text:
                            BorderColor: =RGBA(214, 221, 224, 1)
                            BorderThickness: =0
                            Default: =""
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(0, 0, 0, 0)
                            DisabledFill: =RGBA(0, 0, 0, 0)
                            DisplayMode: =If(IsBlank(combobox_SearchCategory.Selected.Value), DisplayMode.Disabled, DisplayMode.Edit)
                            Fill: |-
                                =ColorFade(ColorValue("#5390A4"), 0.8) //RGBA(214, 221, 224, 0.35)
                            FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =Parent.Height + 1
                            HoverBorderColor: =RGBA(214, 221, 224, 1)
                            HoverFill: |-
                                =ColorFade(ColorValue("#5390A4"), 0.9) //ColorFade(Self.Fill, -0.1) //RGBA(214, 221, 224, 1)
                            OnChange: =
                            OnSelect: |-
                                =/*
                                Reset(gallery_checklists);
                                Reset(gallery_checklistTasks);
                                Set(defaultGalleryCheklistItem, {})
                                */
                            PaddingBottom: =0
                            PaddingLeft: =30
                            PaddingRight: =0
                            PaddingTop: =0
                            PressedBorderColor: =RGBA(214, 221, 224, 1)
                            PressedFill: |-
                                =Self.Fill
                                //ColorFade(Self.Fill, -0.1)
                            Size: =10
                            Tooltip: ="Search for Local Task Title"
                            VirtualKeyboardMode: =VirtualKeyboardMode.Text
                            Width: =Parent.Width - 1
                            ZIndex: =1

                        icon_Search_1 As icon.Message:
                            Color: =RGBA(53, 61, 63, 1)
                            DisabledColor: =RGBA(53, 61, 63, 1)
                            DisabledFill: =
                            DisplayMode: =DisplayMode.Disabled
                            Height: =18
                            Icon: =Icon.Search
                            Tooltip: =If(IsBlank(combobox_SearchCategory.Selected.Value), "No Search Criteria Has Been Selected", "Search by "&combobox_SearchCategory.Selected.Value)
                            Visible: =If(IsBlank(input_SearchTerm_1.Text) || IsBlank(combobox_SearchCategory.Selected.Value), true, false)
                            Width: =18
                            X: =4
                            Y: =2
                            ZIndex: =2

                        icon_SearchClear_1 As icon.Message:
                            Color: =RGBA(233, 79, 76, 1)
                            DisabledColor: =RGBA(53, 61, 63, 1)
                            DisabledFill: =
                            Height: =18
                            HoverColor: =ColorFade(Self.Color, -30%)
                            Icon: =Icon.Cancel
                            OnSelect: =Reset(input_SearchTerm_1)
                            Tooltip: ="Search"
                            Visible: =!icon_Search_1.Visible && !IsBlank(combobox_SearchCategory.Selected.Value)
                            Width: =18
                            X: =4
                            Y: =2
                            ZIndex: =3

                    CC_LocalTaskGalleryControl As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =4
                        PaddingRight: =4
                        PaddingTop: =4
                        Visible: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), true, false)
                        Width: =Parent.Width
                        ZIndex: =4

                        icon_LocalTaskClearSelection As icon.Add:
                            Color: =RGBA(15, 84, 140, 1)
                            Height: =18
                            Icon: =Icon.CancelBadge
                            OnSelect: =Reset(gallery_LocalTaskList)
                            Width: =18
                            ZIndex: =1

                        label_ClearSelection As label:
                            Color: =RGBA(15, 84, 140, 1)
                            Font: =Font.'Segoe UI'
                            Height: =18
                            Size: =9
                            Text: ="Clear Selection"
                            ZIndex: =2

                    "gallery_LocalTaskList As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Default: ={}
                        DelayItemLoading: =true
                        FillPortions: =0
                        Height: =Parent.Height
                        Items: |-
                            =Filter('OBOF-DS-templateOutProcessingChecklistLocalTask',
                                input_SearchTerm_1.Text in taskTitle || input_SearchTerm_1.Text in actionItem
                            )
                        Layout: =Layout.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Parent.Width / (1/3)
                        LoadingSpinner: =LoadingSpinner.Data
                        ShowScrollbar: =false
                        TemplatePadding: =0
                        TemplateSize: =28
                        Width: =Parent.Width
                        ZIndex: =5

                        localTaskCard As groupContainer.manualLayoutContainer:
                            DropShadow: =DropShadow.None
                            Fill: =If(ThisItem.IsSelected, RGBA(255, 255, 255, 0.60), RGBA(0,0,0,0))
                            Height: =Parent.TemplateHeight
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            Rectangle2_1 As rectangle:
                                Fill: =RGBA(79, 90, 94, 1)
                                Height: =Parent.Height
                                OnSelect: =//Select(Parent)
                                Visible: =false//ThisItem.IsSelected
                                Width: =2
                                ZIndex: =1

                        taskRow As label:
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold//If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                            Height: =localTaskCard.Height
                            OnSelect: =Select(Parent)
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =10
                            Text: =$"{ThisItem.actionItem} - {ThisItem.taskTitle}"
                            Tooltip: =$"{ThisItem.taskTitle}"
                            Width: =Parent.TemplateWidth - 10
                            Wrap: =false
                            X: =8
                            ZIndex: =2

                        Rectangle2 As rectangle:
                            Height: =Parent.TemplateHeight
                            OnSelect: =Select(Parent)
                            Visible: =false//ThisItem.IsSelected
                            Width: =4
                            ZIndex: =4

                        separator_taskRow As rectangle:
                            Fill: =RGBA(79, 90, 94, 1)
                            Height: =0.5
                            Width: =localTaskCard.Width
                            Y: =localTaskCard.Height
                            ZIndex: =5

                VC_LocalTask_Body_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =4
                    LayoutMinHeight: =40
                    LayoutMinWidth: =Parent.Width / 3
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =10
                    PaddingLeft: =2
                    PaddingTop: =10
                    Width: =Parent.Width
                    ZIndex: =3

                    HC_AvailableLocalTasks_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        BorderColor: =RGBA(79, 90, 94, 1)
                        BorderThickness: =0.25
                        DropShadow: =DropShadow.None
                        Fill: =RGBA(106, 122, 127, 0.35)
                        FillPortions: =0
                        Height: =65
                        LayoutAlignItems: =LayoutAlignItems.End
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =
                        RadiusBottomLeft: =6
                        RadiusBottomRight: =6
                        RadiusTopLeft: =6
                        RadiusTopRight: =6
                        Width: =Parent.Width - 5
                        ZIndex: =2

                        VC_TBD_LocalTask As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            ZIndex: =2

                            HC_TBD_LocalTask As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =1
                                PaddingLeft: =4
                                PaddingRight: =4
                                PaddingTop: =4
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_TBD_LocalTask As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_main_designeeHelp");
                                        Set(isMainPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Visible: =false
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_LocalTask_Info As label:
                                    Color: =RGBA(0,0,0,1)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =30
                                    Size: =9
                                    Text: |-
                                        =$"Action Item: {gallery_LocalTaskList.Selected.actionItem}{Char(10)}    Created By: {gallery_LocalTaskList.Selected.'Created By'.DisplayName}"
                                    Width: =Parent.Width
                                    ZIndex: =2

                                label_UIDUID As label:
                                    Align: =Align.Right
                                    AlignInContainer: =AlignInContainer.End
                                    Color: =RGBA(79, 90, 94, 1)
                                    Font: =Font.'Segoe UI'
                                    Height: =28
                                    LineHeight: =1
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =6
                                    PaddingTop: =0
                                    Size: =8
                                    Text: =$"[{gallery_LocalTaskList.Selected.uidTask}]-[{gallery_LocalTaskList.Selected.'Created By'.Claims}]"
                                    VerticalAlign: =VerticalAlign.Bottom
                                    Width: =Parent.Width
                                    ZIndex: =3

                            VC_TBD_LocalTask_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Visible: =false
                                Width: =Parent.Width - 12
                                ZIndex: =2

                                combobox_TBD_LocalTask As combobox:
                                    AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                    BorderThickness: =0
                                    ChevronBackground: =RGBA(167, 182, 203, 1)
                                    DefaultSelectedItems: =
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisplayFields: =["DisplayName","Mail"]
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height + 2
                                    HoverFill: |-
                                        =If(false, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                    InputTextPlaceholder: ="Last, First or (E-Mail Address)"   
                                    IsSearchable: =false
                                    NoSelectionText: ="Last, First or (E-Mail Address)"
                                    PaddingLeft: =10
                                    PressedBorderColor: =
                                    PressedColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    SearchFields: =["DisplayName","Mail"]
                                    SearchItems: =[]
                                    SelectionColor: =RGBA(40, 112, 134, 1)
                                    SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                    SelectionTagColor: |-
                                        =ColorValue("#287086") //Self.HoverColor
                                    SelectMultiple: =false
                                    Size: =9
                                    TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                    Template: =ListItemTemplate.Double
                                    Width: =Parent.Width
                                    ZIndex: =1

                    HC_LocalTaskDetails_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =60
                        LayoutAlignItems: =LayoutAlignItems.End
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        PaddingRight: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width
                        ZIndex: =3

                        VC_LocalTaskDetails_TaskTitle As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =1
                            Width: =(Parent.Width / 2) - 12
                            ZIndex: =1

                            label_LocalTask_Title As label:
                                Color: =RGBA(0,0,0,1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="What is the title of your task?* (Limit " & (60 - Len(input_LocalTask_Title.Text)) & " characters)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =1

                            VC_LocalTask_Title As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 4
                                ZIndex: =2

                                input_LocalTask_Title As text:
                                    AlignInContainer: =AlignInContainer.Center
                                    BorderThickness: =0
                                    Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.taskTitle, Blank())
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverFill: =ColorFade(Self.Fill, 0.5)
                                    PressedFill: =Self.HoverFill
                                    Size: =9
                                    Width: =Parent.Width
                                    ZIndex: =1

                        VC_LocalTaskDetails_Service As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =2
                            Width: =(Parent.Width / 2) - 12
                            ZIndex: =2

                            HC_LocalTaskDetails_TaskTitle As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =24
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_LocalTaskDetails_TaskTitle_Help As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_main_organizationCodeHelp");
                                        Set(isMainPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Visible: =false
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_LocalTaskDetails_Service As label:
                                    Color: =RGBA(0,0,0,1)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =24
                                    Size: =9
                                    Text: ="Which Service(s) does this task apply? *"
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =Parent.Width
                                    ZIndex: =2

                            VC_LocalTaskDetails_Service_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 12
                                ZIndex: =3

                                combobox_LocalTaskDetails_Service As combobox:
                                    AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                    BorderColor: =focusedBorderColor //RGBA(0, 18, 107, 1)
                                    BorderThickness: =0
                                    ChevronBackground: =RGBA(167, 182, 203, 1)
                                    DefaultSelectedItems: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.service, [])
                                    DisabledBorderColor: =
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisplayFields: =["Value","Path","Value"]
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height + 2
                                    HoverBorderColor: =
                                    HoverFill: =Self.Fill
                                    InputTextPlaceholder: =
                                    IsSearchable: =false
                                    Items: =Choices('OBOF-DS-templateOutProcessingChecklistLocalTask'.service).Value
                                    NoSelectionText: =
                                    PaddingLeft: =10
                                    PaddingTop: =6
                                    PressedBorderColor: =
                                    PressedColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    SearchFields: =["Value"]
                                    SearchItems: =[]
                                    SelectionColor: =RGBA(40, 112, 134, 1)
                                    SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                    SelectionTagColor: |-
                                        =ColorValue("#287086") //Self.HoverColor
                                    Size: =9
                                    TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                    Width: =Parent.Width
                                    ZIndex: =1

                    HC_LocalTask_Details_2 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =316
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =2
                        PaddingLeft: =5
                        PaddingRight: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width
                        ZIndex: =4

                        VC_LocalTask_TaskDetails As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =(Parent.Width / 1) - 12
                            ZIndex: =1

                            label_TaskDetails As label:
                                Color: =RGBA(0,0,0,1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Provide a detailed description of the steps to complete this task *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =1

                            VC_LocalTask_TaskDetails_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =(Parent.Height - label_TaskDetails.Height) - 1
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 6
                                ZIndex: =2

                                RichTextEditor_TaskDetails As richTextEditor:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID),gallery_LocalTaskList.Selected.taskDetails, Blank())
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    FillPortions: =1
                                    Size: =10
                                    Width: =Parent.Width
                                    ZIndex: =1

                    HC_LocalTask_Details_3 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =60
                        LayoutAlignItems: =LayoutAlignItems.End
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        PaddingRight: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width
                        ZIndex: =5

                        VC_LocalTask_Group As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =2
                            Width: =(Parent.Width / 3) - 12
                            ZIndex: =1

                            HC_LocalTask_Group As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =24
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_Group As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    DisplayMode: =DisplayMode.View
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_register_organizationCodeHelp");
                                        Set(isRegisterPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Visible: =false
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_Group As label:
                                    Color: =RGBA(0,0,0,1)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =24
                                    Size: =9
                                    Text: ="Task category *"
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =Parent.Width
                                    ZIndex: =2

                            VC_LocalTask_Group_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 12
                                ZIndex: =2

                                combobox_LocalTask_Group As combobox:
                                    AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                    BorderThickness: =0
                                    ChevronBackground: =RGBA(167, 182, 203, 1)
                                    DefaultSelectedItems: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.group, {})
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisplayFields: =["Value","Path","Value"]
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height + 2
                                    HoverFill: =Self.Fill
                                    InputTextPlaceholder: =
                                    IsSearchable: =false
                                    Items: =Choices('OBOF-DS-templateOutProcessingChecklistLocalTask'.group).Value
                                    NoSelectionText: =
                                    PaddingLeft: =10
                                    PressedBorderColor: =
                                    PressedColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    SearchFields: =["Value"]
                                    SearchItems: =[]
                                    SelectionColor: =RGBA(40, 112, 134, 1)
                                    SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                    SelectionTagColor: |-
                                        =ColorValue("#287086") //Self.HoverColor
                                    SelectMultiple: =false
                                    Size: =9
                                    TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                    Width: =Parent.Width
                                    ZIndex: =1

                        VC_LocalTask_DueInDays As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =2
                            Width: =(Parent.Width / 3) - 12
                            ZIndex: =2

                            HC_LocalTask_DueInDays As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =24
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_DueInDays As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_helper_localTaskDueInDays");
                                        Set(isRegisterPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Visible: =false
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_DueInDays_2 As label:
                                    Color: =RGBA(0,0,0,1)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =24
                                    Size: =9
                                    Text: ="Due in days before departure date? *"
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =Parent.Width
                                    ZIndex: =2

                            VC_LocalTask_DueInDays_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 12
                                ZIndex: =2

                                input_LocalTask_DueInDays_2 As text:
                                    BorderThickness: =0
                                    Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.dueInDays, "")
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverFill: =ColorFade(Self.Fill, 0.5)
                                    PressedFill: =Self.HoverFill
                                    Size: =9
                                    Width: =Parent.Width
                                    ZIndex: =2

                        VC_LocalTask_TBD As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =2
                            Visible: =false
                            Width: =(Parent.Width / 4) - 12
                            ZIndex: =3

                            HC_LocalTask_TBD As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =24
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_TBD_1 As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    DisplayMode: =DisplayMode.View
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_register_organizationCodeHelp");
                                        Set(isRegisterPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_TBD_1 As label:
                                    Color: =RGBA(0,0,0,1)
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =24
                                    Size: =9
                                    Text: ="Due In Days *"
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =Parent.Width
                                    ZIndex: =2

                            VC_LocalTask_TBD_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                BorderThickness: =0.25
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 12
                                ZIndex: =2

                                input_TBD_1 As text:
                                    BorderThickness: =0
                                    Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                    Default: =
                                    DisabledColor: =RGBA(53, 61, 63, 1)
                                    Fill: |-
                                        =ColorValue("#F3F3F3")
                                    FocusedBorderColor: =focusedBorderColor
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverFill: =ColorFade(Self.Fill, 0.5)
                                    PressedFill: =Self.HoverFill
                                    Size: =9
                                    Width: =Parent.Width
                                    ZIndex: =2

                    HC_LocalTask_Details_4 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =65
                        LayoutAlignItems: =LayoutAlignItems.End
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        PaddingRight: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width
                        ZIndex: =6

                        VC_LocalTask_RequiredSignatures As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            Height: =Parent.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =1
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =4
                            PaddingLeft: =2
                            Width: =(Parent.Width / 3) - 12
                            ZIndex: =1

                            HC_LocalTask_RequiredSignatures As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =24
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width
                                ZIndex: =1

                                icon_RequiredSignatures As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    Height: =15
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_register_organizationCodeHelp");
                                        Set(isRegisterPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Visible: =false
                                    Width: =18
                                    X: =480.73
                                    ZIndex: =1

                                label_RequiredSignatures As label:
                                    Color: =RGBA(0,0,0,1)
                                    FontWeight: =FontWeight.Semibold
                                    Height: =24
                                    Size: =9
                                    Text: ="Required Signatures *"
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =Parent.Width
                                    ZIndex: =2

                            VC_LocalTask_RequiredSignatures_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(139, 154, 159, 1)
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =26
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =6
                                RadiusBottomRight: =6
                                RadiusTopLeft: =6
                                RadiusTopRight: =6
                                Width: =Parent.Width - 6
                                ZIndex: =2

                                checkbox_LocalTask_Employee As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.isEmployeeACB, false)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    FillPortions: =1
                                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,0))
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =
                                    HoverColor: =RGBA(13, 50, 61, 1)
                                    PressedBorderColor: =
                                    PressedFill: =
                                    Size: =9
                                    Text: ="Departing Employee"
                                    Width: =200
                                    Y: =
                                    ZIndex: =1

                                checkbox_LocalTask_Supervisor As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.isSupervisorACB, supervisorSignatureSync)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    FillPortions: =1
                                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,0))
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =
                                    HoverColor: =RGBA(13, 50, 61, 1)
                                    HoverFill: =
                                    LayoutMinWidth: =100
                                    OnCheck: |-
                                        =UpdateContext({designeeSignatureSync: true})
                                    OnUncheck: |-
                                        =UpdateContext({supervisorSignatureSync: false})
                                    PressedBorderColor: =
                                    PressedFill: =
                                    Size: =9
                                    Text: ="Supervisor"
                                    Width: =200
                                    Y: =
                                    ZIndex: =2

                                checkbox_LocalTask_Designee As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.isDesigneeACB, designeeSignatureSync)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    FillPortions: =1
                                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,0))
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =
                                    HoverColor: =RGBA(13, 50, 61, 1)
                                    HoverFill: =
                                    LayoutMinWidth: =100
                                    OnCheck: |-
                                        =UpdateContext({supervisorSignatureSync: true})
                                    OnUncheck: |-
                                        =UpdateContext({designeeSignatureSync: false})
                                    PressedBorderColor: =
                                    PressedFill: =
                                    Size: =9
                                    Text: ="Designee"
                                    Width: =200
                                    Y: =
                                    ZIndex: =3

                                checkbox_LocalTask_MSO As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.isMSOACB, false)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    FillPortions: =1
                                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1), RGBA(0,0,0,0))
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =
                                    HoverColor: =RGBA(13, 50, 61, 1)
                                    HoverFill: =
                                    LayoutMinWidth: =100
                                    PressedBorderColor: =
                                    PressedFill: =
                                    Size: =9
                                    Text: ="MSO"
                                    Width: =200
                                    Y: =
                                    ZIndex: =4

                                checkbox_LocalTask_ClearingOffice As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.isClearingOffice, false)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: =RGBA(139, 154, 159, 0.45)
                                    FillPortions: =1
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =Self.Fill
                                    HoverFill: =Self.Fill
                                    PaddingRight: =10
                                    Size: =9
                                    Text: ="Clearing Office"
                                    Width: =200
                                    Y: =
                                    ZIndex: =6

                                checkbox_LocalTack_EnableNotification As checkbox:
                                    AlignInContainer: =AlignInContainer.Center
                                    CheckboxSize: =22
                                    Default: =If(!IsBlank(gallery_LocalTaskList.Selected.ID), gallery_LocalTaskList.Selected.autoNotify, false)
                                    DisplayMode: |-
                                        =If(IsBlank(gallery_LocalTaskList.Selected.ID) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager),
                                            DisplayMode.Edit,
                                            (!IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email) && (First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager), 
                                                DisplayMode.Edit, 
                                                DisplayMode.View
                                        )
                                    Fill: =RGBA(139, 154, 159, 0.45)
                                    FillPortions: =1
                                    Font: =Font.'Segoe UI'
                                    Height: =Parent.Height
                                    HoverBorderColor: =Self.Fill
                                    HoverFill: =Self.Fill
                                    PaddingRight: =10
                                    Size: =9
                                    Text: ="Enable Notification"
                                    Width: =200
                                    Y: =
                                    ZIndex: =7

            HC_NewChecklist_Footer_1 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =15
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =8
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =4

                label_InfoPopupDialog_6 As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    Size: =10
                    Text: ="Information Dialog Window"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =false//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                button_LocalTask_Save As button:
                    BorderThickness: =0.25
                    DisabledBorderColor: =RGBA(79, 90, 94, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    DisplayMode: |-
                        =If(IsBlank(gallery_LocalTaskList.Selected.ID),
                            DisplayMode.Edit,
                            !IsBlank(gallery_LocalTaskList.Selected.ID) && First(currentUser).mail = gallery_LocalTaskList.Selected.'Created By'.Email, 
                                DisplayMode.Edit, 
                                DisplayMode.Disabled
                        )
                    Fill: =RGBA(50, 86, 160, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Height: =32
                    HoverBorderColor: =
                    HoverFill: =ColorFade(Self.Fill, 0.1)
                    OnSelect: |-
                        =UpdateContext(
                            {
                                localTask: {
                                    scope: Self.Text,
                                    taskID: Value(gallery_LocalTaskList.Selected.actionItem)
                                }
                            }
                        );
                        If(
                            IsBlank(input_LocalTask_Title.Text) ||
                            Len(input_LocalTask_Title.Text) > 60 ||
                            IsBlank(combobox_LocalTaskDetails_Service.Selected.Value) ||
                            IsBlank(RichTextEditor_TaskDetails.HtmlText) ||
                            IsBlank(combobox_LocalTask_Group.Selected.Value) ||
                            IsBlank(input_LocalTask_DueInDays_2.Text) ||
                            (!checkbox_LocalTask_ClearingOffice.Value && !checkbox_LocalTask_Designee.Value && !checkbox_LocalTask_Employee.Value && !checkbox_LocalTask_MSO.Value && !checkbox_LocalTask_Supervisor.Value),
                            Set(popupScope, "popup_main_newLocalTask");
                            Set(isMainPopupVisible, true),
                            Select(newLocalTask)
                        );
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Save Only"
                    Visible: =If(First(currentUser).isMSO || First(currentUser).isSupervisor || First(currentUser).isTFManager, true, false)
                    Width: =145.13
                    X: =607.72
                    ZIndex: =2

                button_LocalTask_SaveApply As button:
                    BorderThickness: =0
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(50, 86, 160, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Height: =32
                    HoverBorderColor: =
                    HoverFill: =ColorFade(Self.Fill, 0.1)
                    OnSelect: |-
                        =UpdateContext(
                            {
                                localTask: {
                                    scope: Self.Text,
                                    taskID: Value(gallery_LocalTaskList.Selected.actionItem)
                                }
                            }
                        );
                        If(
                            IsBlank(input_LocalTask_Title.Text) ||
                            Len(input_LocalTask_Title.Text) > 60 ||
                            IsBlank(combobox_LocalTaskDetails_Service.Selected.Value) ||
                            IsBlank(RichTextEditor_TaskDetails.HtmlText) ||
                            IsBlank(combobox_LocalTask_Group.Selected.Value) ||
                            IsBlank(input_LocalTask_DueInDays_2.Text) ||
                            (!checkbox_LocalTask_ClearingOffice.Value && !checkbox_LocalTask_Designee.Value && !checkbox_LocalTask_Employee.Value && !checkbox_LocalTask_MSO.Value && !checkbox_LocalTask_Supervisor.Value),
                            Set(popupScope, "popup_main_newLocalTask");
                            Set(isMainPopupVisible, true),
                            Select(newLocalTask)
                        );
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Assign Task"
                    Visible: =!IsBlank(gallery_checklists.Selected.ID)
                    Width: =145.13
                    X: =607.72
                    ZIndex: =3

    CC_NewChecklist_Display As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Semilight
        Fill: =RGBA(139, 154, 159, 0.65)
        Height: =Parent.Height
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Visible: =isNewChecklistVisible
        Width: =Parent.Width
        ZIndex: =9

        glassBlur_4 As htmlViewer:
            Height: =VC_NewChecklist.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"& VC_NewChecklist.Height - 1 &"px;backdrop-filter:blur(30px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_NewChecklist.Width
            X: =VC_NewChecklist.X
            Y: =VC_NewChecklist.Y
            ZIndex: =1

        VC_NewChecklist As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(106, 122, 127, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Bold
            Fill: =If(isAccessibilityEnabled, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 0))
            Height: =575
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =850
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

            HC_NewChecklist_Header As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =1

                label_CloseNewChecklist As label:
                    Align: =Align.Center
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    Size: =16
                    TabIndex: =20
                    Text: ="Begin New Out-Processing Checklist"
                    Visible: =true//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                icon_NewChecklist_Close As icon.CancelBadge:
                    AlignInContainer: =AlignInContainer.Center
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =20
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =Reset(toggle_DelegationNewChecklist);
                        Reset(checkbox_DelegationAcknowledge);
                        Reset(combobox_EmployeeName_3);
                        Reset(combobox_Designee_3);
                        Reset(combobox_Service_3);
                        Reset(combobox_MilitaryServiceBranch_3);
                        Reset(combobox_PayPlanGrade_3);
                        Reset(combobox_Organization_3);
                        Reset(input_OrganizationCode_3);
                        Reset(input_OfficeLocation_3);
                        Reset(combobox_State_3);
                        Reset(input_City_3);
                        Reset(combobox_OutprocessingStatus_3);
                        Reset(datepicker_DepartureDate_3);
                        Reset(input_NewEmployerName_3);
                        Reset(input_NewEmployerAddress_3);
                        Set(isNewChecklistVisible, false)
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =20
                    X: =0.00
                    ZIndex: =2

            VC_NewChecklist_Body As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - (HC_NewChecklist_Header.Height + HC_NewChecklist_Footer.Height)
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =10
                PaddingTop: =10
                Width: =Parent.Width
                ZIndex: =2

                HC_Delegation As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: |-
                        =//If(toggle_DelegationNewChecklist, 150, 45)
                        If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 150, 50)
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =12
                    PaddingRight: =5
                    PaddingTop: =4
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Visible: =If(First(currentUser).isSupervisor || First(currentUser).isMSO || First(currentUser).isTFManager, true, false)
                    Width: =Parent.Width
                    ZIndex: =1

                    HC_Delegation_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(139, 154, 159, 1)
                        BorderThickness: =0.25
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =0
                        Height: =30
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =150
                        ZIndex: =1

                        HC_iconDelegation As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            Fill: =If(!toggle_DelegationNewChecklist.Value, RGBA(0,0,0,0), RGBA(166, 215, 153, 1))
                            FillPortions: =0
                            Height: =22
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =50
                            RadiusBottomRight: =50
                            RadiusTopLeft: =50
                            RadiusTopRight: =50
                            Width: =24
                            ZIndex: =1

                            icon_Delegation As icon.People:
                                Color: |-
                                    =If(toggle_DelegationNewChecklist.Value = true, ColorValue("#000000"), ColorValue("#4F5A5E")) //RGBA(233, 79, 76, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =20
                                Icon: =Icon.Person
                                Width: =22
                                ZIndex: =1

                        label_DelegationNewChecklist As label:
                            Height: =26
                            Size: =11
                            Text: ="Delegation"
                            Width: =85
                            ZIndex: =2

                        toggle_DelegationNewChecklist As toggleSwitch:
                            FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                            Height: =18
                            OnCheck: |-
                                =Set(popupDelegationScope, "text_DelegationDisclaimer");
                                Reset(combobox_OutprocessingStatus_3);
                                Reset(datepicker_DepartureDate_3);
                                Reset(combobox_EmployeeName_3);
                            OnUncheck: |-
                                =Set(popupDelegationScope, Blank());
                                Reset(combobox_OutprocessingStatus_3);
                                Reset(datepicker_DepartureDate_3);
                                Reset(checkbox_DelegationAcknowledge)
                            ShowLabel: =false
                            Width: =30
                            ZIndex: =3

                    VC_DelegationDisclaimer As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        Height: =If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 150, 50)
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingTop: =6
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        ZIndex: =5

                        HtmlText1_3 As htmlViewer:
                            DisplayMode: =DisplayMode.View
                            Fill: =RGBA(0, 0, 0, 0)
                            Font: =Font.'Segoe UI'
                            Height: =115
                            HtmlText: |-
                                =//Substitute(LookUp(appSettings, Scope = popupDelegationScopeScope).content_RT, "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)")
                                LookUp(appSettings, Scope = popupDelegationScope).content_RT
                            PaddingBottom: =0
                            PaddingLeft: =15
                            PaddingRight: =0
                            PaddingTop: =
                            Size: =10
                            Visible: =If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, true, false)
                            Width: =Parent.Width
                            ZIndex: =1

                        checkbox_DelegationAcknowledge As Checkbox:
                            AlignInContainer: =AlignInContainer.End
                            BasePaletteColor: =RGBA(62, 128, 149, 1)
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =
                            FontItalic: =false
                            FontSize: =0
                            FontStrikethrough: =false
                            FontUnderline: =false
                            FontWeight: =""
                            Height: =24
                            Label: ="Acknowledge"
                            LayoutMinHeight: =32
                            LayoutMinWidth: =160
                            OnCheck: =true
                            OnSelect: =
                            OnUncheck: =
                            Visible: =If(toggle_DelegationNewChecklist.Value, true, false)
                            Width: =160
                            X: =0
                            Y: =0
                            ZIndex: =3

                HC_UserDetails_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =2

                    VC_UserName_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / If(toggle_DelegationNewChecklist.Value, 3, 2)) - 12
                        ZIndex: =1

                        label_EmployeeName_3 As label:
                            Color: =If(combobox_EmployeeName_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Employee *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_EmployeeName_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_EmployeeName_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderColor: =RGBA(106, 122, 127, 1)
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        Office365Users.SearchUser({searchTerm:First(currentUser).mail}),
                                        [{}]
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search Last, First Name (E-Mail Address)"
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Search Last, First Name (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_EmployeeName_3.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_Supervisor_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / If(toggle_DelegationNewChecklist.Value, 3, 2)) - 12
                        ZIndex: =2

                        HC_Supervisor_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_Designee_Help_4 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_designeeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_Designee_4 As label:
                                Color: =If(combobox_Supervisor_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Supervisor *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_Supervisor_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_Supervisor_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(toggle_DelegationNewChecklist.Value,
                                        Office365Users.SearchUser({searchTerm:First(currentUser).mail}),
                                        !IsBlank(First(currentUser).uid) && !IsBlank(First(currentUser).supervisorEmail) && !toggle_DelegationNewChecklist.Value, 
                                        Office365Users.SearchUser({searchTerm:First(currentUser).supervisorEmail}),
                                        [{}]
                                    )
                                    /*
                                    If(!IsBlank(First(currentUser).uid) && !IsBlank(First(currentUser).supervisorEmail) && !toggle_DelegationNewChecklist, 
                                        Office365Users.SearchUser({searchTerm:First(currentUser).supervisorEmail}),
                                        Office365Users.SearchUser({searchTerm:First(currentUser).mail})
                                    )
                                    */
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: |-
                                    =If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                        DisplayMode.View,
                                        If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked && !IsBlank(First(currentUser).supervisorEmail), 
                                            DisplayMode.View,
                                            If((toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked) || IsBlank(First(currentUser).supervisorEmail),
                                                DisplayMode.Edit,
                                                If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                    DisplayMode.View
                                                )
                                            )
                                        )
                                    )
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                    //If(!toggle_DelegationNewChecklist, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Last, First or (E-Mail Address)"   
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Last, First or (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_Supervisor_3.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_Designee_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Visible: =If(toggle_DelegationNewChecklist.Value, true, false)
                        Width: =(Parent.Width / If(toggle_DelegationNewChecklist.Value, 3, 2)) - 12
                        ZIndex: =3

                        HC_Designee_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_Designee_Help_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_designeeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_Designee_3 As label:
                                Color: =If(combobox_Designee_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Designee *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_Designee_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_Designee_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(!toggle_DelegationNewChecklist.Value, 
                                        Office365Users.SearchUser({searchTerm:First(currentUser).supervisorEmail}), 
                                        [{}]
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: |-
                                    =If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 
                                        DisplayMode.View,
                                        If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked,
                                            DisplayMode.Edit,
                                            If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                DisplayMode.View
                                            )
                                        )
                                    )
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                    //If(!toggle_DelegationNewChecklist, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Last, First or (E-Mail Address)"
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                                NoSelectionText: ="Last, First or (E-Mail Address)"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_Designee_3.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Organization_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =3

                    VC_Organization_NewChecklist As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =1

                        label_Organization_3 As label:
                            Color: =If(combobox_Organization_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Organization *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_Orgnization_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_Organization_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =/*If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist, 
                                        First(currentUser).organization, 
                                        Blank()
                                    )*/
                                    If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value,
                                        LookUp(col_organizations, ORG_ID = First(currentUser).organizationId),
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["ORG_NAME","ORG Code","Value"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search organization"
                                Items: |-
                                    =//Choices('GLBL-DS-userRegistration'.organization)
                                    col_organizations
                                NoSelectionText: ="Search organization"   
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["ORG_NAME", "ORG Code"]
                                SearchItems: |-
                                    =Search(//Choices('GLBL-DS-userRegistration'.organization)
                                    col_organizations,combobox_Organization_3.SearchText,"ORG_NAME","ORG Code")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_Supervisor_NewChecklist_1 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =2

                        HC_OrganizationCode_Label_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OrganizationCode_Help_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OrganizationCode_3 As label:
                                Color: =If(input_OrganizationCode_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Organization Code *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OrganizationCode_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            input_OrganizationCode_3 As text:
                                BorderThickness: =0
                                Default: |
                                    =/*If(First(currentUser).organizationCode,
                                        First(currentUser).organizationCode,
                                        First(Filter(
                                            managedMetadataTaxonomy,
                                            id = combobox_Organization_3.Selected.TermGuid
                                        )).label
                                    )*/
                                    If(!IsBlank(First(currentUser).organizationCode) && !toggle_DelegationNewChecklist.Value,
                                        First(currentUser).organizationCode,
                                        combobox_Organization_3.Selected.'ORG Code'
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Service_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =4

                    VC_Service_NewChecklist As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        label_Service_3 As label:
                            Color: =If(combobox_Service_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Service Type*"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_Service_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_Service_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(toggle_DelegationNewChecklist.Value && !IsBlank(Find("civ", combobox_EmployeeName_3.Selected.Mail)),
                                        {Value: "Civilian"},
                                        If(toggle_DelegationNewChecklist.Value && !IsBlank(Find("ctr", combobox_EmployeeName_3.Selected.Mail)),
                                            {Value: "Contractor"},
                                            If(toggle_DelegationNewChecklist.Value && !IsBlank(Find("mil", combobox_EmployeeName_3.Selected.Mail)),
                                                {Value: "Military"},
                                                If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value,
                                                    First(currentUser).service
                                                )
                                            )
                                        )
                                    )
                                    /*
                                    If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist, 
                                        {Value: First(currentUser).service}, 
                                        Blank()
                                    )
                                    */
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Mail"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Service"
                                IsSearchable: =false
                                Items: =Choices('GLBL-DS-userRegistration'.service).Value
                                NoSelectionText: ="Select Service"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_MilitaryServiceBranch_NewChecklist As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Visible: =If(combobox_Service_3.Selected.Value = "Military", true, false)
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        label_MilitaryServiceBranch_3 As label:
                            Color: =If(combobox_MilitaryServiceBranch_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Military Service Branch *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_MilitaryServiceBranch_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_MilitaryServiceBranch_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        {Value: First(currentUser).militaryServiceBranch}, 
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Mail"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked && combobox_Service_3.Selected.Value = "Military", DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Military Branch"
                                IsSearchable: =false
                                Items: =Choices('GLBL-DS-userRegistration'.militaryServiceBranch).Value
                                NoSelectionText: ="Select Military Branch"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_PayPlanGrade_NewChecklist As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =3

                        label_PayPlanGrade_3 As label:
                            Color: =If(combobox_PayPlanGrade_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Payplan / Grade / Rank *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_PayPlanGrade_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_PayPlanGrade_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        {v: First(currentUser).payPlan_Grade},
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["v"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked && !IsBlank(combobox_Service_3.Selected), DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Grade / Rank"
                                IsSearchable: =false
                                Items: =Ungroup(Filter(PayPlanGrades, Service = combobox_Service_3.Selected.Value), "ppg")
                                NoSelectionText: ="Select Grade / Rank"    
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["v"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                HC_Location_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    VC_StreetAddress_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_OfficeLocation_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OfficeLocation_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OfficeLocation_3 As label:
                                Color: =If(input_OfficeLocation_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Office (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OfficeLocation_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            input_OfficeLocation_3 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        First(currentUser).officeLocation, 
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_State_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        HC_State_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_State_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_State_3 As label:
                                Color: =If(combobox_State_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="State (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_State_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            combobox_State_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        {Value: First(currentUser).state},
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Path","Value"]
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Search State"
                                IsSearchable: =false
                                Items: =stateChoices
                                NoSelectionText: ="Search State"   
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_City_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =3

                        HC_City_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_City_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                DisplayMode: =DisplayMode.View
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_City_3 As label:
                                Color: =If(input_City_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="City (Current Duty Station)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_City_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =2

                            input_City_3 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: |-
                                    =If(!IsBlank(First(currentUser).uid) && !toggle_DelegationNewChecklist.Value, 
                                        First(currentUser).city, 
                                        Blank()
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, DisplayMode.Edit, DisplayMode.View)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                HC_OutprocessingDetails_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =6

                    VC_OutprocessingStatus_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_OutprocessingStatus_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_OutProcessing_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_OutprocessingStatus_3 As label:
                                Color: =If(combobox_OutprocessingStatus_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Out-Processing Status *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_OutprocessingStatus_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_OutprocessingStatus_3 As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderColor: =focusedBorderColor //RGBA(0, 18, 107, 1)
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: =
                                DisabledBorderColor: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Value","Path","Value"]
                                DisplayMode: |-
                                    =If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 
                                        DisplayMode.Edit,
                                        If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                            DisplayMode.Disabled,
                                            If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                DisplayMode.Edit
                                            )
                                        )
                                    )
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverBorderColor: =
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                                InputTextPlaceholder: ="Select Status"
                                IsSearchable: =false
                                Items: =Choices('OBOF-DS-checklistOutProcessing'.checklistStatus).Value
                                NoSelectionText: ="Select Status"
                                PaddingLeft: =10
                                PaddingTop: =6
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Value"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_DepartureDate_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =2

                        HC_DepartureDate_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_DepartureDate_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_DepartureDate_3 As label:
                                Color: =If(datepicker_DepartureDate_3_1.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Departure Date *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_DepartureDate_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            datepicker_DepartureDate_3_1 As datepicker:
                                BorderColor: =If(isAccessibilityEnabled, RGBA(255, 0, 0, 1))
                                BorderThickness: =0
                                Color: =datepickerSelectedColor//RGBA(0, 0, 0, 1)
                                DefaultDate: =//Today()
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: |-
                                    =If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 
                                        DisplayMode.Edit,
                                        If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                            DisplayMode.Disabled,
                                            If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                DisplayMode.Edit
                                            )
                                        )
                                    )
                                EndYear: =2150
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                IconBackground: |-
                                    =ColorValue("#A7B6CB")//RGBA(56, 96, 178, 1)
                                InputTextPlaceholder: ="Select Departue Date"//If(IsBlank(Self.SelectedDate), Text(Date(2001,12,31), Self.Format, Self.Language))
                                OnSelect: =If(IsBlank(datepicker_DepartureDate_3_1.SelectedDate), Set(datepickerSelectedColor, RGBA(0,0,0,0)), Set(datepickerSelectedColor, RGBA(40, 112, 134, 1)))
                                PaddingBottom: =0
                                PaddingLeft: =4
                                Size: =9
                                StartYear: =2023
                                Visible: =false
                                Width: =Parent.Width
                                ZIndex: =1

                            CC_datepickerDepartureDate As groupContainer.manualLayoutContainer:
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =32
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                Width: =Parent.Width
                                ZIndex: =3

                                "datepicker_DepartureDate_3 As 'Date picker'":
                                    BasePaletteColor: =
                                    DisplayMode: |-
                                        =If(!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked, 
                                            DisplayMode.Edit,
                                            If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                DisplayMode.Disabled,
                                                If(toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked,
                                                    DisplayMode.Edit
                                                )
                                            )
                                        )
                                    Font: =""
                                    FontColor: =
                                    FontItalic: =false
                                    FontSize: =12
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Format: ='DatePickerCanvas.Format'.LongAbbreviated
                                    Height: =32
                                    Placeholder: =""
                                    SelectedDate: =
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                CC_ColorHighlight As groupContainer.manualLayoutContainer:
                                    BorderColor: =RGBA(139, 154, 159, 0.5)
                                    BorderThickness: =0.25
                                    DropShadow: =DropShadow.None
                                    Fill: |-
                                        =If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, ColorFade(ColorValue("#98D046"), 0.85), RGBA(255,255,255,1))
                                    Height: =32
                                    RadiusBottomLeft: =0
                                    RadiusBottomRight: =0
                                    RadiusTopLeft: =0
                                    RadiusTopRight: =0
                                    Visible: =(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked) || (!toggle_DelegationNewChecklist.Value && !checkbox_DelegationAcknowledge.Checked)
                                    Width: =Parent.Width - 40
                                    X: =0 - 1
                                    ZIndex: =2

                                label_DatePickerValue As label:
                                    Color: =RGBA(40, 112, 134, 1)
                                    Font: =Font.'Segoe UI'
                                    Height: =32
                                    Size: =9
                                    Text: =datepicker_DepartureDate_3.SelectedDate
                                    Width: =CC_ColorHighlight.Width
                                    ZIndex: =3

                    HC_DepartureDateWarning As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.End
                        DropShadow: =DropShadow.None
                        Height: =48//Self.LayoutMinHeight
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =Parent.Height
                        LayoutMinWidth: =(Parent.Width/3) - 10
                        LayoutMode: =LayoutMode.Auto
                        Visible: =If(IsBlank(label_DepartureDateWarning.Text), false, true)
                        Width: =Self.LayoutMinWidth
                        ZIndex: =3

                        icon_DepartureDateWarning As icon.Warning:
                            Color: =RGBA(224, 86, 6, 1)
                            DisplayMode: =DisplayMode.View
                            Height: =22
                            Icon: =Icon.Warning
                            Width: =22
                            ZIndex: =1

                        label_DepartureDateWarning As label:
                            AutoHeight: =true
                            DisplayMode: =DisplayMode.View
                            FillPortions: =1
                            Height: =Parent.Height
                            PaddingBottom: =0
                            PaddingLeft: =10
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =9
                            Text: |-
                                =With(
                                    {
                                        varDateMod: If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                            If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                    DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)))
                                    },
                                
                                    If(1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0) < 31 && !IsBlank(datepicker_DepartureDate_3.SelectedDate),
                                        "WARNING: Departure Date selected " & datepicker_DepartureDate_3.SelectedDate & " only allows " &
                                        Text(1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)) & " business days to complete Checklist Tasks.",
                                        ""
                                    )
                                )
                            ZIndex: =2

                HC_NewEmployer_NewChecklist As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =7

                    VC_NewEmployerName_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Visible: =If(input_NewEmployerAddress_3.DisplayMode = DisplayMode.Edit, true, false)
                        Width: =(Parent.Width / 3) - 12
                        ZIndex: =1

                        HC_NewEmployerName_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_TransferEmployerAgency_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_TransferEmployerAgency_3 As label:
                                Color: =If(input_NewEmployerName_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="New Employer / Agency Name *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NewEmployerName_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            input_NewEmployerName_3 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If("Transfer" in combobox_OutprocessingStatus_3.Selected.Value, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_NewEmployerAddress_NewChecklist_3 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Visible: =If(input_NewEmployerAddress_3.DisplayMode = DisplayMode.Edit, true, false)
                        Width: =(Parent.Width / 1.5) - 12
                        ZIndex: =2

                        HC_NewEmployerAddress_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_NewEmployerAddress_Helper_3 As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_register_organizationCodeHelp");
                                    Set(isRegisterPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_NewEmployerAddress_3 As label:
                                Color: =If(input_NewEmployerAddress_3.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="New Employer / Agency Address (Street Address, City, State, Postal Code) *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NewEmployerAddress_3 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            input_NewEmployerAddress_3 As text:
                                BorderThickness: =0
                                Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                                Default: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayMode: =If("Transfer" in combobox_OutprocessingStatus_3.Selected.Value, DisplayMode.Edit, DisplayMode.Disabled)
                                Fill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height
                                HoverFill: |-
                                    =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025))
                                PressedFill: =ColorFade(Self.Fill, -0.04)
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =1

            HC_NewChecklist_Footer As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =8
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =3

                label_InfoPopupDialog_3 As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    Size: =10
                    Text: ="Information Dialog Window"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =false//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                button_NewChecklist_Continue As button:
                    BorderThickness: =0
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(50, 86, 160, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Height: =32
                    HoverBorderColor: =
                    HoverFill: =ColorFade(Self.Fill, 0.1)
                    OnSelect: |
                        =Set(sendNotificationSupervisorDesigneeScope, "newChecklist");
                        Set(runSendNotificationSupervisorDesignee, true);
                        If(DataSourceComponent.NewChcklist(),
                            DataSourceComponent.SendNotificationSupervisorDesignee(sendNotificationSupervisorDesigneeScope);
                            DataSourceComponent.Refresh(false, globalFilter);
                        );
                        //Select(sendNotificationSupervisorDesignee);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Continue"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =2

    CC_NotifyClearingOffice As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Semilight
        Height: =Parent.Height
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Visible: =isNotifyClearingOfficeVisible
        Width: =Parent.Width
        ZIndex: =10

        glassBlur_8 As htmlViewer:
            Height: =VC_NotifyClearingOffice.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.4);width:100%;height:"& VC_NotifyClearingOffice.Height - 1 &"px;backdrop-filter:blur(30px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_NotifyClearingOffice.Width
            X: =VC_NotifyClearingOffice.X
            Y: =VC_NotifyClearingOffice.Y
            ZIndex: =1

        VC_NotifyClearingOffice As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(106, 122, 127, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Bold
            Fill: =If(isAccessibilityEnabled, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 0))
            Height: =575
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =850
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

            HC_NewChecklist_Header_1 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =1

                label_CloseNewChecklist_1 As label:
                    Align: =Align.Center
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    Size: =16
                    TabIndex: =20
                    Text: =clearingOffice.taskTitle
                    Visible: =true//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                icon_NewChecklist_Close_1 As icon.CancelBadge:
                    AlignInContainer: =AlignInContainer.Center
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =18
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =Set(clearingOffice, Blank());
                        Set(isNotifyClearingOfficeVisible, false);
                        Reset(combobox_NotifyClearingOfficeCommand);
                        Reset(combobox_NotifyClearingOfficeLocation);
                        Reset(combobox_NotifyClearingOfficeAvailablePOCs);
                        Reset(combobox_NotifyClearingOfficeAdditionalPOCs);
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =18
                    X: =0.00
                    ZIndex: =2

            VC_NotifyClearingOfficeBody As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - (HC_NewChecklist_Header_1.Height + HC_NotifyClearingOffice_Footer_1.Height)
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =10
                PaddingTop: =10
                Width: =Parent.Width
                ZIndex: =2

                HC_NotifyClearingOffice_Row1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =3

                    VC_NotifyClearingOfficeCommand As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =1

                        label_NotifyClearingOfficeCommand As label:
                            Color: =If(combobox_NotifyClearingOfficeCommand.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Command *"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =1

                        VC_NotifyClearingOfficeCommand_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_NotifyClearingOfficeCommand As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Command","uid"]
                                DisplayMode: |-
                                    =If(CountRows(col_mandatoryOfficesPOC) > 1, 
                                        DisplayMode.Edit, 
                                        If(CountRows(First(col_mandatoryOfficesPOC).POCs) > 0,
                                            DisplayMode.Edit,
                                            DisplayMode.Disabled
                                        )
                                    )
                                Fill: |-
                                    =ColorValue("#F3F3F3")
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: =ColorFade(RGBA(255,255,255,1), -0.025)
                                InputTextPlaceholder: ="Select Command"
                                IsSearchable: =false
                                Items: =col_mandatoryOfficesPOCCommand.Command
                                NoSelectionText: ="Select Command"
                                OnSelect: |-
                                    =Reset(combobox_NotifyClearingOfficeLocation);
                                    Reset(combobox_NotifyClearingOfficeAvailablePOCs)
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Command"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_NotifyClearingOfficeLocation As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =2

                        HC_NotifyClearingOfficeLocation As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =1

                            icon_NotifyClearingOfficeLocationHelp As icon.Help:
                                Color: =RGBA(26, 26, 26, 1)
                                Height: =15
                                Icon: =Icon.Help
                                OnSelect: |-
                                    =Set(popupScope, "popup_main_organizationCodeHelp");
                                    Set(isMainPopupVisible, true)
                                PaddingRight: =0.00
                                PaddingTop: =0.00
                                Visible: =false
                                Width: =18
                                X: =480.73
                                ZIndex: =1

                            label_NotifyClearingOfficeLocation As label:
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Location *"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NotifyClearingOfficeLocation_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =3

                            combobox_NotifyClearingOfficeLocation As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Location","ID"]
                                DisplayMode: |-
                                    =If(combobox_NotifyClearingOfficeCommand.DisplayMode = DisplayMode.Disabled, 
                                        DisplayMode.Disabled,
                                        If(CountRows(Filter(col_mandatoryOfficesPOC, Command.Value = combobox_NotifyClearingOfficeCommand.Selected.Command)) > 0,
                                            DisplayMode.Edit,
                                            DisplayMode.Disabled
                                        )
                                    )
                                Fill: |-
                                    =ColorValue("#F3F3F3")
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: =ColorFade(RGBA(255,255,255,1), -0.025)
                                InputTextPlaceholder: ="Select Location"
                                IsSearchable: =false
                                Items: =Filter(col_mandatoryOfficesPOC, Command.Value = combobox_NotifyClearingOfficeCommand.Selected.Command)
                                NoSelectionText: ="Select Location"
                                OnSelect: =Reset(combobox_NotifyClearingOfficeAvailablePOCs);
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Location"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                SelectMultiple: =false
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =2

                HC_NotifyClearingOffice_Row2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =4

                    VC_NotifyClearingOfficeAvailablePOCs As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =1

                        HC_NotifyClearingOfficeAvailablePOCs As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width - 6
                            ZIndex: =1

                            label_NotifyClearingOfficeAvailablePOCs_1 As label:
                                Color: =If(combobox_NotifyClearingOfficeAdditionalPOCs.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Available POCs to be notified (limit "& 6 - CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) & " selections)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width - 25
                                ZIndex: =1

                            Icon_clearLastAvailablePOCs As icon.clearDrawing:
                                AlignInContainer: =AlignInContainer.Center
                                Color: =RGBA(215, 58, 60, 1)
                                Height: =18
                                HoverColor: |-
                                    =//RGBA(189, 49, 51, 1)
                                    ColorFade(Self.Color, -0.4)
                                Icon: =Icon.CancelBadge
                                OnSelect: =Reset([@combobox_NotifyClearingOfficeAvailablePOCs])
                                Tooltip: ="Clear Selection"
                                Width: =18
                                ZIndex: =2

                        VC_NotifyClearingOfficeAvailablePOCs_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =2

                            combobox_NotifyClearingOfficeAvailablePOCs As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: |-
                                    =If(IsEmpty(LookUp(col_mandatoryOfficesPOC, ID = combobox_NotifyClearingOfficeLocation.Selected.ID).Emails),
                                        {Email: "NO EMAIL ADDRESSES FOUND..."}
                                    )
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["Email"]
                                DisplayMode: |-
                                    =If(combobox_NotifyClearingOfficeLocation.DisplayMode = DisplayMode.Disabled, 
                                        DisplayMode.Disabled,
                                        If(!IsBlank(combobox_NotifyClearingOfficeLocation.SelectedItems) /*!IsEmpty(LookUp(col_mandatoryOfficesPOC, ID = combobox_NotifyClearingOfficeLocation.Selected.ID).Emails)*/,
                                            If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) >= 6, 
                                                DisplayMode.View, 
                                                DisplayMode.Edit
                                            ),
                                            DisplayMode.Disabled
                                        )
                                    )
                                    //If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) >= 6, DisplayMode.View, DisplayMode.Edit)
                                Fill: |-
                                    =ColorValue("#F3F3F3")
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: =ColorFade(RGBA(255,255,255,1), -0.025)
                                InputTextPlaceholder: ="Select POC"
                                IsSearchable: =false
                                Items: |-
                                    =If(!IsEmpty(LookUp(col_mandatoryOfficesPOC, ID = combobox_NotifyClearingOfficeLocation.Selected.ID).Emails),
                                        Filter(LookUp(col_mandatoryOfficesPOC, ID = combobox_NotifyClearingOfficeLocation.Selected.ID).Emails,
                                            Email <> Blank()
                                        ),
                                        {Email: ""}
                                    )
                                NoSelectionText: ="Select POC"
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["Email"]
                                SearchItems: =[]
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Width: =Parent.Width
                                ZIndex: =1

                    VC_NotifyClearingOfficeAdditionalPOCs As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        Width: =(Parent.Width / 2) - 12
                        ZIndex: =2

                        HC_NotifyClearingOfficeAdditionalPOCs As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =24
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width - 6
                            ZIndex: =1

                            label_NotifyClearingOfficeAdditionalPOCs_1 As label:
                                Color: =If(combobox_NotifyClearingOfficeAdditionalPOCs.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                Size: =9
                                Text: ="Other POCs to be notified (limit "& 3 - CountRows(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems) & " selections)"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width - 25
                                ZIndex: =1

                            Icon_clearLastAdditionalPOC As icon.clearDrawing:
                                Color: =RGBA(215, 58, 60, 1)
                                Height: =18
                                HoverColor: |-
                                    =//RGBA(189, 49, 51, 1)
                                    ColorFade(Self.Color, -0.4)
                                Icon: =Icon.CancelBadge
                                OnSelect: =Reset([@combobox_NotifyClearingOfficeAdditionalPOCs])
                                Tooltip: ="Clear Selection"
                                Width: =18
                                ZIndex: =2

                        VC_NotifyClearingOfficeAdditionalPOCs_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            FillPortions: =0
                            Height: =26
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 6
                            ZIndex: =3

                            combobox_NotifyClearingOfficeAdditionalPOCs As combobox:
                                AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Select Service type")
                                BorderThickness: =0
                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                DefaultSelectedItems: =
                                DisabledColor: =RGBA(53, 61, 63, 1)
                                DisplayFields: =["DisplayName","Mail"]
                                DisplayMode: =If(CountRows(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems) >= 3, DisplayMode.View, DisplayMode.Edit)
                                Fill: |-
                                    =ColorValue("#F3F3F3")
                                FocusedBorderColor: =focusedBorderColor
                                FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                                Font: =Font.'Segoe UI'
                                Height: =Parent.Height + 2
                                HoverFill: =ColorFade(RGBA(255,255,255,1), -0.025)
                                InputTextPlaceholder: ="Search POC"
                                IsSearchable: =If(CountRows(Self.SelectedItems.Mail) < 3, true, false)
                                Items: |-
                                    =Office365Users.SearchUser({searchTerm:Self.SearchText, top: 10})
                                NoSelectionText: ="Select POC"
                                OnSelect: =
                                PaddingLeft: =10
                                PressedBorderColor: =
                                PressedColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                SearchFields: =["DisplayName","Mail"]
                                SearchItems: |-
                                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText, top: 10}),combobox_NotifyClearingOfficeAdditionalPOCs.SearchText,"DisplayName","Mail")
                                SelectionColor: =RGBA(40, 112, 134, 1)
                                SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                                SelectionTagColor: |-
                                    =ColorValue("#287086") //Self.HoverColor
                                Size: =9
                                TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                Template: =ListItemTemplate.Double
                                Width: =Parent.Width
                                ZIndex: =1

                HC_NotifyClearingOffice_Row3 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =265
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =5

                    VC_NotifyClearingOfficeDetails As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =1
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =4
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        Width: =(Parent.Width / 1) - 12
                        ZIndex: =3

                        VC_NotifyClearingOfficeDetails_1 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(139, 154, 159, 1)
                            BorderThickness: =0.25
                            DropShadow: =DropShadow.Semilight
                            FillPortions: =0
                            Height: =65
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =6
                            RadiusBottomRight: =6
                            RadiusTopLeft: =6
                            RadiusTopRight: =6
                            Width: =Parent.Width - 12
                            ZIndex: =1

                            label_NotificationDetails As label:
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Bold
                                Height: =24
                                PaddingLeft: =15
                                Size: =10
                                Text: ="Notification Details"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =1

                            html_NotificationDetailsTable As htmlViewer:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.View
                                Font: =Font.'Segoe UI'
                                Height: =75
                                HtmlText: |-
                                    ="
                                    <table width='100%'>
                                        <tr>
                                            <td style='padding: 0px 0px 0px 20px;'>Clearing Office Assignment: <strong>" & clearingOffice.assignment.Value & "</strong></td>
                                            <td style='padding: 0px 0px 0px 20px;'>Command: <strong>" & If(IsBlank(combobox_NotifyClearingOfficeCommand.Selected.Command), "N|A", combobox_NotifyClearingOfficeCommand.Selected.Command) & "</strong></td>
                                            <td style='padding: 0px 0px 0px 20px;'>Location: <strong>" & If(IsBlank(combobox_NotifyClearingOfficeLocation.Selected.Location), "N|A", combobox_NotifyClearingOfficeLocation.Selected.Location) & "</strong></td>
                                        </tr>
                                    </table>
                                    "
                                PaddingLeft: =0
                                PaddingRight: =0
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =2

                        VC_NotifyClearingOfficePOCs As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            Height: =125
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Width: =Parent.Width
                            ZIndex: =2

                            label_NotifyClearingOfficePOCs As label:
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =24
                                PaddingBottom: =0
                                PaddingLeft: =10
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =9
                                Text: |-
                                    ="POCs to be included on notification:"
                                VerticalAlign: =VerticalAlign.Bottom
                                Width: =Parent.Width
                                ZIndex: =2

                            html_NotificationDetailsTable_1 As htmlViewer:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.View
                                FillPortions: =1
                                Font: =Font.'Segoe UI'
                                Height: =75
                                HtmlText: |-
                                    =$"
                                    <table width='{html_NotificationDetailsTable_1.Width}px';table-layout: fixed;>
                                    <tr>
                                    {
                                        If(!IsBlank(combobox_NotifyClearingOfficeAvailablePOCs.Selected) && !(combobox_NotifyClearingOfficeAvailablePOCs.Selected.Email = "No available email addresses found..."),
                                            Concat(
                                                FirstN(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems, 
                                                    If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) >= 3, 
                                                        3, 
                                                        Mod(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems),3)
                                                    )
                                                ),
                                                $"<td style='padding: 8px 0px 8px 0px;'><strong>{Email}</strong></br>{First(ShowColumns(Office365Users.SearchUser({searchTerm:Email}),"DisplayName")).DisplayName}"
                                            )
                                        )
                                    }
                                    </tr>
                                    <tr>
                                    {
                                        If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) > 3 && !(combobox_NotifyClearingOfficeAvailablePOCs.Selected.Email = "No available email addresses found..."),
                                            Concat(
                                                LastN(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems, 
                                                    If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) > 3 && CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) < 6, 
                                                        Mod(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems), 3),
                                                        If(CountRows(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems) = 6,
                                                            3,
                                                            0
                                                        )
                                                    )
                                                ),
                                                $"<td style='padding: 8px 0px 8px 0px;'><strong>{Email}</strong></br>{First(ShowColumns(Office365Users.SearchUser({searchTerm:Email}),"DisplayName")).DisplayName}"
                                            )
                                        )
                                    }
                                    </tr>
                                    <tr>
                                    {
                                        If(!IsBlank(combobox_NotifyClearingOfficeAdditionalPOCs.Selected),
                                            Concat(
                                                FirstN(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems, 
                                                    If(CountRows(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems) >= 3, 
                                                        3, 
                                                        Mod(CountRows(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems),3)
                                                    )
                                                ),
                                                $"<td style='padding: 8px 0px 8px 0px;;'><strong>{Mail}</strong></br>{First(ShowColumns(Office365Users.SearchUser({searchTerm:Mail}),"DisplayName")).DisplayName}"
                                            )
                                        )
                                    }
                                    </tr>
                                    </table>
                                    "
                                LayoutMinHeight: =100
                                PaddingBottom: =0
                                PaddingLeft: =10
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =9
                                Width: =Parent.Width
                                ZIndex: =3

                HC_NewEmployer_NewChecklist_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =70
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Parent.Width
                    ZIndex: =7

            HC_NotifyClearingOffice_Footer_1 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =8
                PaddingTop: =0.00
                Width: =Parent.Width
                X: =0.00
                ZIndex: =3

                label_InfoPopupDialog_5 As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    Size: =10
                    Text: ="Information Dialog Window"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =false//isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                button_NotifyClearingOffice_Submit As button:
                    BorderThickness: =0.25
                    DisabledBorderColor: =RGBA(79, 90, 94, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    DisplayMode: =If(!IsBlank(combobox_NotifyClearingOfficeAvailablePOCs.Selected) || !IsBlank(combobox_NotifyClearingOfficeAdditionalPOCs.Selected), DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(50, 86, 160, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Height: =26
                    HoverBorderColor: =
                    HoverFill: =ColorFade(Self.Fill, 0.1)
                    OnSelect: |-
                        =DataSourceComponent.BuildChecklistTasks(true, gallery_checklists.Selected.ID);
                        Select(sendNotification);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Send Notification"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =2

    CC_NewComment As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Semilight
        Fill: =RGBA(139, 154, 159, 0.25)
        Height: =Parent.Height
        RadiusBottomLeft: =10
        RadiusBottomRight: =10
        RadiusTopLeft: =10
        RadiusTopRight: =10
        Visible: =isNewCommentVisible
        Width: =Parent.Width
        ZIndex: =11

        glassBlur_10 As htmlViewer:
            Height: =VC_Comments.Height
            HtmlText: |-
                ="
                <div style='background-color:rgba(255,255,255,0.1);width:100%;height:"& VC_Comments.Height - 1 &"px;backdrop-filter:blur(30px);border-radius:10px'></div>
                "
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            Size: =9.98
            Visible: =!isAccessibilityEnabled
            Width: =VC_Comments.Width
            X: =VC_Comments.X
            Y: =VC_Comments.Y
            ZIndex: =1

        VC_Comments As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(106, 122, 127, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Bold
            Fill: =If(isAccessibilityEnabled, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 0))
            Height: |-
                =//App.ActiveScreen.Height / 1.2
                700
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =10
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =10
            PaddingTop: =10
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Width: =800
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =4

            HC_NewCOmment_Controller As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =30
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =24
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =10
                Width: =Parent.Width - ((Parent.PaddingLeft * 2) + Parent.PaddingRight)
                ZIndex: =1

                label_NewComment_HeaderInfo As label:
                    Color: =If(combobox_NewComment_Notify.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                    FillPortions: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =24
                    PaddingLeft: =12
                    PaddingRight: =12
                    Size: =9
                    Text: =$"Checklist ID {gallery_checklists.Selected.ID} // {First(currentUser).displayName}"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =400
                    ZIndex: =1

                toggle_Tagged As toggleSwitch:
                    AccessibleLabel: ="Show In-Progress Checklists only. Toggle is currently " & If(Self.Value, "Enabled", "Disabled")
                    AlignInContainer: =AlignInContainer.Center
                    DisabledBorderColor: =RGBA(0, 18, 107, 1)//RGBA(56, 56, 56, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)//RGBA(186, 186, 186, 1)
                    DisplayMode: =DisplayMode.Edit// If(Self.Value, DisplayMode.Disabled)
                    FalseText: ="Tagged"
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 2, 0)
                    Font: =Font.'Segoe UI'
                    Height: =15
                    OnCheck: |-
                        =UpdateContext({isCommenttagged: "tagged"})
                    OnSelect: =
                    OnUncheck: |-
                        =UpdateContext({isCommenttagged: "all"})
                    Reset: =
                    Size: =10
                    Tooltip: ="Focus messages tagged To Me"
                    TrueFill: =RGBA(40, 112, 134, 1)
                    TrueText: ="Tagged"
                    Width: =78
                    ZIndex: =2

                icon_NewComment_Close As icon.CancelBadge:
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =20
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =//Select(updateNewCommentJSON);
                        UpdateContext({commentScope: ""});
                        Set(isNewCommentVisible, false);
                        Reset(combobox_NewComment_Notify);
                        Reset(input_NewComment);
                        Reset(toggle_Tagged);
                        Clear(col_commentsJSON);
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =20
                    X: =0.00
                    ZIndex: =4

            VC_NewComment_Gallery As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =RGBA(79, 90, 94, 1)
                BorderThickness: =0.25
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =8
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                Width: =Parent.Width - 20
                ZIndex: =2

                "gallery_Comments As gallery.'BrowseLayout_Flexible_SocialFeed_ver5.0'":
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Default: ={}
                    DelayItemLoading: =true
                    Height: =400
                    Items: |-
                        =Filter(
                            Sort(First(col_commentsJSON.comments).comments, ID, SortOrder.Descending),
                            Switch(isCommenttagged,
                                "tagged", (notifyUid = First(currentUser).uid || uid = First(currentUser).uid),
                                "all", true
                            )
                        )
                    Layout: =Layout.Vertical
                    LayoutMinHeight: =50
                    LayoutMinWidth: =150
                    LoadingSpinner: =LoadingSpinner.Data
                    Selectable: =false
                    ShowScrollbar: =false
                    TemplatePadding: =10
                    TemplateSize: =Min(870, Self.Height - 60)
                    Width: =Parent.Width
                    Y: =galleryXposition
                    ZIndex: =2

                    comment_Container As groupContainer.manualLayoutContainer:
                        BorderColor: =ColorFade(Self.Fill, -35%)
                        BorderThickness: =0.25
                        DropShadow: =DropShadow.Semibold
                        Fill: |-
                            =If(ThisItem.uid = First(currentUser).uid, ColorValue("#464669"), ColorFade(ColorValue("#292929"), 10%))
                        Height: =((comment.Y + comment.Height) + displayName.Height + timestamp.Height) + 25
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =displayName.Width + 20
                        X: =If(ThisItem.uid = First(currentUser).uid, Parent.Width - Self.Width - 60, 25)
                        ZIndex: =1

                    icon_NotifyLink As icon.Link:
                        Color: =If(ThisItem.uid = First(currentUser).uid, RGBA(255,255,255,0.6), RGBA(255,255,255,0.6))
                        Height: =18
                        Icon: =Icon.Link
                        Visible: =!IsBlank(ThisItem.notifyUid)
                        Width: =18
                        X: =(notifyEmail.X - Self.Width) - 2
                        Y: =notifyEmail.Y - 3
                        ZIndex: =2

                    notifyEmail As label:
                        Color: |-
                            =If(ThisItem.uid = First(currentUser).uid, ColorValue("#AAAAFC"), RGBA(255,255,255,0.8))
                        Font: =Font.Verdana
                        FontWeight: =FontWeight.Lighter
                        Height: =Self.Size * 1.8
                        HoverBorderColor: =RGBA(0, 0, 0, 1)
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9
                        Text: =If(!IsBlank(Text(ThisItem.notifyEmail)), First(Split(Text(ThisItem.notifyEmail), "@")).Value)
                        VerticalAlign: =VerticalAlign.Top
                        Width: =120
                        X: =If(ThisItem.uid = First(currentUser).uid, comment_Container.X + 30, comment_Container.X + 30)
                        Y: =(comment_Container.Height - Self.Height) - 2
                        ZIndex: =3

                    timestamp As label:
                        Align: =Align.Right
                        Color: =If(ThisItem.uid = First(currentUser).uid, RGBA(255,255,255,0.8), RGBA(255,255,255,0.8))
                        Font: =Font.Verdana
                        FontWeight: =FontWeight.Lighter
                        Height: =Self.Size * 1.8
                        HoverBorderColor: =RGBA(0, 0, 0, 1)
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9
                        Text: =DateTimeValue(ThisItem.timestamp)
                        VerticalAlign: =VerticalAlign.Top
                        Width: =220
                        X: =If(ThisItem.uid = First(currentUser).uid, Parent.Width - Self.Width - 80, comment_Container.Width - Self.Width)
                        Y: =(comment_Container.Height - Self.Height) - 2
                        ZIndex: =4

                    comment As label:
                        AutoHeight: =true
                        Color: =If(ThisItem.uid = First(currentUser).uid, RGBA(255,255,255,1), RGBA(255,255,255,1))
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =If(ThisItem.uid <> First(currentUser).uid, Self.Size * 4, Self.Size * 4)
                        LineHeight: =1.4
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Text: =ThisItem.comment
                        VerticalAlign: =VerticalAlign.Top
                        Width: =(Parent.TemplateWidth - 250) - 25
                        X: =comment_Container.X + 24
                        Y: =If(ThisItem.uid <> First(currentUser).uid, (displayName.Height + replyTo.Height/replyTo.Height) + 20, 14)
                        ZIndex: =5

                    displayName As label:
                        Color: =If(ThisItem.uid = First(currentUser).uid, RGBA(255,255,255,0.9), RGBA(255,255,255,0.8))
                        Font: =Font.Verdana
                        FontWeight: =FontWeight.Lighter
                        Height: =Self.Size * 1.8
                        HoverBorderColor: =RGBA(0, 0, 0, 1)
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9
                        Text: =If(ThisItem.uid <> First(currentUser).uid, ThisItem.displayName)
                        VerticalAlign: =VerticalAlign.Top
                        Visible: =ThisItem.uid <> First(currentUser).uid
                        Width: =comment.Width + 25
                        X: =comment_Container.X + 10
                        Y: =9
                        ZIndex: =6

                    reply_Container As groupContainer.manualLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =replyTo.Height
                        Visible: =false//!IsBlank(ThisItem.replyUid)
                        Width: =comment_Container.Width
                        X: =comment_Container.X
                        Y: =(comment_Container.Y + displayName.Height) + 8
                        ZIndex: =7

                        replyTo As label:
                            Color: =If(ThisItem.uid = First(currentUser).uid, RGBA(0,0,0,0.6), RGBA(255,255,255,0.8))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =Self.Size * 1.8
                            HoverBorderColor: =RGBA(0, 0, 0, 1)
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =13
                            Text: =ThisItem.replyDisplayName
                            VerticalAlign: =VerticalAlign.Top
                            Width: =comment.Width - 25
                            X: =0 + 65  
                            ZIndex: =2

                        Icon4 As icon.Link:
                            Color: =RGBA(53, 61, 63, 1)
                            Height: =24
                            Icon: =Icon.Link
                            Width: =24
                            X: =32
                            ZIndex: =3

                    comment_Container_Fade As groupContainer.manualLayoutContainer:
                        BorderColor: =RGBA(106, 122, 127, 1)
                        BorderThickness: =0.25
                        DropShadow: =DropShadow.Semibold
                        Fill: =RGBA(53, 61, 63, 0.45)
                        Height: =(comment.Height + displayName.Height + timestamp.Height) + 25
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Visible: =false
                        Width: =displayName.Width + 20
                        X: =If(ThisItem.uid = First(currentUser).uid, Parent.Width - Self.Width - 60, 25)
                        ZIndex: =8

            HC_NewComment_Notify As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =60
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =20
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =15
                PaddingRight: =15
                ZIndex: =3

                VC_NewComment_Notify As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =1
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =4
                    PaddingLeft: =2
                    Width: =(Parent.Width / If(toggle_DelegationNewChecklist.Value, 3, 2)) - 12
                    ZIndex: =1

                    HC_NewComment_Notify_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =24
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =Parent.Width
                        ZIndex: =1

                        icon_NewComment_Notify_Help As icon.Help:
                            Color: =RGBA(26, 26, 26, 1)
                            Height: =15
                            Icon: =Icon.Help
                            OnSelect: |-
                                =Set(popupScope, "popup_main_designeeHelp");
                                Set(isMainPopupVisible, true)
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            Visible: =false
                            Width: =18
                            X: =480.73
                            ZIndex: =1

                        label_NewComment_Notify As label:
                            Color: =If(combobox_NewComment_Notify.DisplayMode = DisplayMode.Disabled, ColorFade(RGBA(0,0,0,1), 0.6), RGBA(0,0,0,1))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            Size: =9
                            Text: ="Tag Person"
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.Width
                            ZIndex: =2

                    VC_NewComment_Notify_1 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(139, 154, 159, 1)
                        BorderThickness: =0.25
                        FillPortions: =0
                        Height: =26
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =6
                        RadiusBottomRight: =6
                        RadiusTopLeft: =6
                        RadiusTopRight: =6
                        Width: =Parent.Width - 12
                        ZIndex: =2

                        combobox_NewComment_Notify As combobox:
                            AccessibleLabel: =If(First(currentUser).accessibilityEnabled, "Search Job Series")
                            BorderThickness: =0
                            ChevronBackground: =RGBA(167, 182, 203, 1)
                            DefaultSelectedItems: =
                            DisabledColor: =RGBA(53, 61, 63, 1)
                            DisplayFields: =["DisplayName","Mail"]
                            Fill: |-
                                =If(!toggle_DelegationNewChecklist.Value, ColorValue("#F3F3F3"), ColorValue("#ECF6E8"))
                                //If(!toggle_DelegationNewChecklist, RGBA(255,255,255,1), ColorValue("#ECF6E8"))
                            FocusedBorderColor: =focusedBorderColor
                            FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height + 2
                            HoverFill: |-
                                =If(!toggle_DelegationNewChecklist.Value, ColorFade(RGBA(255,255,255,1), -0.025), ColorFade(ColorValue("#ECF6E8"), -0.025)) //RGBA(255, 255, 255, 1)
                            InputTextPlaceholder: ="Last, First or (E-Mail Address)"   
                            Items: |-
                                =Office365Users.SearchUser({searchTerm:Self.SearchText,top:5})
                            NoSelectionText: ="Last, First or (E-Mail Address)"
                            PaddingLeft: =10
                            PressedBorderColor: =
                            PressedColor: =RGBA(0, 0, 0, 0)
                            PressedFill: =RGBA(0, 0, 0, 0)
                            SearchFields: =["DisplayName","Mail"]
                            SearchItems: |-
                                =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:5}),combobox_NewComment_Notify.SearchText,"DisplayName","Mail")
                            SelectionColor: =RGBA(40, 112, 134, 1)
                            SelectionFill: =Self.Fill //RGBA(214, 221, 224, 1)
                            SelectionTagColor: |-
                                =ColorValue("#287086") //Self.HoverColor
                            SelectMultiple: =false
                            Size: =9
                            TabIndex: =If(isRegisterPopupVisible, -1, 10)
                            Template: =ListItemTemplate.Double
                            Width: =Parent.Width
                            ZIndex: =1

            HC_InputContianer As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =100
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =15
                PaddingRight: =15
                ZIndex: =6

                input_NewComment As text:
                    BorderColor: =RGBA(106, 122, 127, 1)
                    BorderThickness: =0.25
                    Clear: =true
                    Color: =If(Self.DisplayMode.Edit, RGBA(40, 112, 134, 1), RGBA(0, 0, 0, 1))
                    Default: =
                    DisabledColor: =RGBA(53, 61, 63, 1)
                    EnableSpellCheck: =true
                    Fill: |-
                        =ColorValue("#F3F3F3")
                    FocusedBorderColor: =focusedBorderColor
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Font: =Font.'Segoe UI'
                    Height: =80
                    HintText: ="Begin typing comment here..."
                    HoverFill: =ColorFade(Self.Fill, 0.5)
                    LineHeight: =1.1
                    Mode: =TextMode.MultiLine
                    PaddingBottom: =8
                    PaddingRight: =12
                    PaddingTop: =8
                    PressedFill: =Self.HoverFill
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =9
                    Width: =(Parent.Width - button_NewComment_Submit.Width) - 50
                    ZIndex: =1

                button_NewComment_Submit As button:
                    BorderColor: =ColorFade(Self.Fill, -35%)
                    DisabledBorderColor: =ColorFade(Self.DisabledFill, -60%)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    DisplayMode: =If(IsBlank(input_NewComment.Text), DisplayMode.Disabled, DisplayMode.Edit)
                    Fill: |-
                        =ColorValue("#35354F")
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    Font: =Font.'Segoe UI'
                    Height: =input_NewComment.Height
                    HoverBorderColor: |-
                        =ColorValue("#AAAAFC")
                    HoverFill: =ColorFade(Self.Fill, 0.1)
                    OnSelect: |
                        =Set(isNewCommentVisible, false);
                        UpdateContext({commentScope: "newComment"});
                        //Select(newComment);
                        Select(buildComments);
                    PressedBorderColor: |-
                        =ColorValue("#AAAAFC")
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =10
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Submit Comment"
                    Width: =90
                    X: =607.72
                    ZIndex: =2

    HC_AccountDetails As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutMode: =LayoutMode.Auto
        PaddingRight: =0.00
        PaddingTop: =0.00
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =If(isAccountSettingsVisible, true, false)
        Width: =Parent.Width
        ZIndex: =12

        CC_AccountDetails As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.Start
            DropShadow: =DropShadow.None
            FillPortions: =
            Height: =Parent.Height
            LayoutMinHeight: =Self.Height
            LayoutMinWidth: =Self.Width
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =Parent.Width
            ZIndex: =2

            glassBlur_5 As htmlViewer:
                Fill: =RGBA(0, 0, 0, 0)
                Font: =Font.'Segoe UI'
                Height: =VC_AccountDetails.Height
                HtmlText: |-
                    ="
                    <div style='background-color:rgba(255,255,255,0.2);width:100%;height:"&VC_AccountDetails.Height-1&"px;backdrop-filter:blur(25px);border-radius:10px'></div>
                    "
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0.00
                PaddingTop: =0.00
                Size: =10
                Width: =VC_AccountDetails.Width
                X: =VC_AccountDetails.X
                Y: =VC_AccountDetails.Y
                ZIndex: =1

            gradient_BKG As htmlViewer:
                Height: =Parent.Height - 140
                HtmlText: |-
                    ="
                    <div style='width:100%;height:"&VC_AccountDetails.Height+2&"px;border-radius:10px;
                    background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%);
                    '>
                    </div>
                    "
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0.00
                PaddingTop: =0.00
                Size: =9.98
                Visible: =false//!accessibilityEnabled
                Width: =816.33
                X: =VC_AccountDetails.X
                Y: =VC_AccountDetails.Y
                ZIndex: =2

            VC_AccountDetails As groupContainer.verticalAutoLayoutContainer:
                BorderColor: =RGBA(53, 61, 63, 1)
                BorderThickness: =1
                DropShadow: =DropShadow.ExtraBold
                Fill: =If(!isAccessibilityEnabled, RGBA(0, 0, 0, 0), RGBA(255,255,255,0))
                Height: =600
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                RadiusBottomLeft: =10
                RadiusBottomRight: =10
                RadiusTopLeft: =10
                RadiusTopRight: =10
                Width: =816
                X: =(Parent.Width - Self.Width) - 50
                Y: =CC_Header.Height - 30
                ZIndex: =3

                HC_AccountDetails_Header As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =30
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =1
                    PaddingRight: =10
                    Width: =Parent.Width
                    ZIndex: =1

                    Label1 As label:
                        Align: =Align.Center
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =Parent.Height
                        Size: =12
                        Text: ="DCMA Enterprise Profile"
                        Width: =Parent.Width / 1.05
                        ZIndex: =1

                    Icon1 As icon.CancelBadge:
                        Color: =RGBA(26, 26, 26, 1)
                        Height: =22
                        Icon: =Icon.CancelBadge
                        OnSelect: |-
                            =Reset(combobox_JobSeries_1);
                            Reset(combobox_Supervisor_1);
                            Reset(combobox_Organization_1);
                            Reset(combobox_Service_1);
                            Reset(combobox_MilitaryServiceBranch_1);
                            Reset(input_OrganizationCode_1);
                            Reset(combobox_PayPlanGrade_1);
                            Set(isServiceTypeChanged, false);
                            Set(isAccountSettingsVisible, !isAccountSettingsVisible);
                            UpdateContext({isOrganizationChange: false});
                        PaddingBottom: =1
                        Width: =22
                        ZIndex: =2

                HC_UserHeader_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =image_UserPicture_1.Height
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =10
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMinHeight: =image_UserPicture_1.Height
                    LayoutMinWidth: =500
                    LayoutMode: =LayoutMode.Auto
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    Width: =Parent.Width
                    X: =68.03
                    ZIndex: =2

                    image_UserPicture_1 As image:
                        Height: =75
                        Image: =User().Image
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        RadiusBottomLeft: =40
                        RadiusBottomRight: =40
                        RadiusTopLeft: =40
                        RadiusTopRight: =40
                        Width: =75
                        X: =123.36
                        ZIndex: =1

                    VC_Container_UserHeaderLabels_1 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =label_DisplayName_1.Height + label_JobTitle_Department_1.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =label_DisplayName_1.Height + label_JobTitle_Department_1.Height
                        LayoutMinWidth: =label_DisplayName_1.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        Width: =Len(First(currentUser).displayName) * 10.75
                        X: =204.99
                        ZIndex: =2

                        label_DisplayName_1 As label:
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =image_UserPicture_1.Height / 2.2
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =4.54
                            Size: =14.51
                            Text: =First(currentUser).displayName
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            X: =0.00
                            ZIndex: =1

                        label_JobTitle_Department_1 As label:
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =image_UserPicture_1.Height / 3.5
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =4.54
                            Size: =9.98
                            Text: =Concatenate(First(currentUser).jobTitle, " - ", First(currentUser).department)
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            X: =0.00
                            ZIndex: =2

                HC_OverviewDetails_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =30
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    Width: =770.98
                    X: =22.68
                    ZIndex: =3

                    label_OverviewDetails_2 As label:
                        AlignInContainer: =AlignInContainer.End
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =30
                        LayoutMinHeight: =Self.Height
                        LayoutMinWidth: =Self.Width
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        Role: =TextRole.Heading3
                        Size: =11
                        Text: ="Employee Information"
                        VerticalAlign: =VerticalAlign.Bottom
                        Width: =770.98
                        X: =0.00
                        Y: =40
                        ZIndex: =1

                separator_UserMenu_1 As rectangle:
                    Fill: =RGBA(77, 77, 77, 1)
                    Height: =1
                    Width: =770.98
                    X: =22.68
                    ZIndex: =4

                VC_UserMenuDetailItems_1 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =(HC_UserMenuDetailItems_4.Height * 3) + 10
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =Parent.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    Width: =770.98
                    X: =22.68
                    ZIndex: =5

                    HC_UserMenuDetailItems_4 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =40  
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =Self.Height
                        LayoutMinWidth: =Self.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =4.54
                        Width: =770.98
                        X: =0.00
                        ZIndex: =1

                        icon_Waypoint_3 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Waypoint
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =0.00
                            ZIndex: =1

                        tbl_OfficeLocation_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Office Location</strong></br>"&First(currentUser).officeLocation&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =38.10
                            ZIndex: =2

                        icon_Person_2 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Person
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =273.93
                            ZIndex: =5

                        tbl_JobTitle_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Job Title</strong></br>"&First(currentUser).jobTitle&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =312.02
                            ZIndex: =6

                        icon_People_4 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =547.85
                            ZIndex: =7

                        tbl_Department_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Department</strong></br>"&First(currentUser).department&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =181.41
                            X: =585.95
                            ZIndex: =8

                    HC_UserMenuDetailItems_5 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =HC_UserMenuDetailItems_4.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Parent.Width / 1.2
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =1.81
                        Width: =770.98
                        X: =0.00
                        ZIndex: =2

                        icon_Waypoint_4 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Waypoint
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =0.00
                            ZIndex: =3

                        tbl_Street_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Street</strong></br>"&First(currentUser).streetAddress&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =38.10
                            ZIndex: =4

                        icon_Globe_2 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Globe
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =273.93
                            ZIndex: =5

                        tbl_City_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>City</strong></br>"&First(currentUser).city&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =312.02
                            ZIndex: =6

                        icon_Gloobe_3 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Globe
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =547.85
                            ZIndex: =7

                        tbl_State_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>State</strong></br>"&First(currentUser).state&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =181.41
                            X: =585.95
                            ZIndex: =8

                    HC_UserMenuDetailItems_6 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =HC_UserMenuDetailItems_4.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =Parent.Width / 1.2
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =1.81
                        Width: =770.98
                        X: =0.00
                        ZIndex: =3

                        icon_Email_2 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Mail
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =0.00
                            ZIndex: =1

                        tbl_Email_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Email</strong></br>"&First(currentUser).mail&"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =38.10
                            ZIndex: =2

                        icon_Chat_2 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.Message
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =273.93
                            ZIndex: =3

                        tbl_Chat_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Chat</strong></br>"&First(currentUser).mail&"</div>
                                
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =312.02
                            ZIndex: =4

                        icon_Building_2 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =loginIconSize
                            Icon: =Icon.OfficeBuilding
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =38.10
                            X: =547.85
                            ZIndex: =5

                        tbl_Company_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Agency</strong></br>"&First(currentUser).companyName&" - "& First(col_IWAMUserInfo).DCMA_ORGANIZATION_LEVEL &"</div>
                                "
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =181.41
                            X: =585.95
                            ZIndex: =6

                CC_AccountSettings_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderColor: =RGBA(106, 122, 127, 1)
                    BorderThickness: =0.25
                    DropShadow: =DropShadow.None
                    Fill: =RGBA(255, 255, 255, 0.60)
                    FillPortions: =0
                    Height: =320
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    RadiusBottomLeft: =10
                    RadiusBottomRight: =10
                    RadiusTopLeft: =10
                    RadiusTopRight: =10
                    Width: =785
                    X: =22.68
                    ZIndex: =6

                    VC_AppSettings_Controller_1 As groupContainer.horizontalAutoLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =Parent.Height - (HC_AccountSettings_Props2_1.Height + HC_AccountSetings_Props1_1.Height + HC_AccountSettings_Header_1.Height) - 1
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =10
                        PaddingTop: =0.00
                        Width: =Parent.Width
                        X: =0.00
                        Y: =HC_AccountSettings_Props2_1.Y + HC_AccountSettings_Props2_1.Height
                        ZIndex: =2

                        HC_AppSettingsControl_3 As groupContainer.horizontalAutoLayoutContainer:
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =160
                            LayoutGap: =2
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            X: =0.00
                            ZIndex: =1

                            VC_AccountSettings_ColumnLeft_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =3
                                LayoutMinHeight: =Self.Height
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =2
                                PaddingLeft: =10
                                PaddingRight: =10
                                PaddingTop: =2
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width / 2
                                ZIndex: =2

                                label_JobSeries_2 As label:
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =22
                                    Size: =9
                                    Text: ="Job Series *"
                                    Width: =350
                                    ZIndex: =1

                                VC_Combobox_JobSeries_1 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =24
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =Self.Height
                                    LayoutMinWidth: =Self.Width
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =6
                                    RadiusBottomRight: =6
                                    RadiusTopLeft: =6
                                    RadiusTopRight: =6
                                    Width: =350
                                    ZIndex: =2

                                    combobox_JobSeries_1 As combobox:
                                        AccessibleLabel: =If(isAccessibilityEnabled, "Search Job Series")
                                        BorderThickness: =0
                                        ChevronBackground: =RGBA(167, 182, 203, 1)
                                        DefaultSelectedItems: |-
                                            ={
                                                Label: First(currentUser).jobSeries.Label,
                                                Path: First(currentUser).jobSeries.Path,
                                                TermGuid: First(currentUser).jobSeries.TermGuid,
                                                Value: First(currentUser).jobSeries.Value
                                            }
                                        DisplayFields: =["Label"]
                                        FocusedBorderColor: =RGBA(255,0,0,1)
                                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                        Font: =Font.'Segoe UI'
                                        Height: =Parent.Height
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        InputTextPlaceholder: ="Job Series"
                                        Items: =Choices('GLBL-DS-userRegistration'.jobSeries)
                                        OnChange: =
                                        PressedBorderColor: =
                                        PressedColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        SearchFields: =["Label"]
                                        SearchItems: =Choices('GLBL-DS-userRegistration'.jobSeries,combobox_JobSeries_1.SearchText)
                                        SelectionColor: =RGBA(26, 26, 26, 1)
                                        SelectionFill: =RGBA(0, 0, 0, 0)
                                        SelectMultiple: =false
                                        Size: =9
                                        TabIndex: =If(isRegisterPopupVisible, -1, 10)
                                        Width: =Parent.Width
                                        ZIndex: =2

                                label_JobSeries_4 As label:
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =22
                                    Size: =9
                                    Text: ="Organization *"
                                    Width: =350
                                    ZIndex: =3

                                VC_Combobox_Organization_1 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =24
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =Self.Height
                                    LayoutMinWidth: =Self.Width
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =6
                                    RadiusBottomRight: =6
                                    RadiusTopLeft: =6
                                    RadiusTopRight: =6
                                    Width: =350
                                    ZIndex: =4

                                    combobox_Organization_1 As combobox:
                                        AccessibleLabel: =If(isAccessibilityEnabled, "Organization Job Series")
                                        BorderThickness: =0
                                        ChevronBackground: =RGBA(167, 182, 203, 1)
                                        DefaultSelectedItems: |-
                                            =/*{
                                                Label: First(currentUser).organization.Label,
                                                Path: First(currentUser).organization.Path,
                                                TermGuid: First(currentUser).organization.TermGuid,
                                                Value: First(currentUser).organization.Value,
                                                WssId: First(currentUser).organization.WssId
                                            }*/
                                            If(!IsBlank(First(currentUser).uid),
                                                LookUp(col_organizations, ORG_ID = First(currentUser).organizationId),
                                                Blank()
                                            )
                                        DisplayFields: =["ORG_NAME","ORG Code","Value"]
                                        FocusedBorderColor: =RGBA(255,0,0,1)
                                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                        Font: =Font.'Segoe UI'
                                        Height: =Parent.Height
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Items: |-
                                            =//Choices('GLBL-DS-userRegistration'.organization)
                                            col_organizations
                                        OnChange: |+
                                            =UpdateContext(
                                                {
                                                    isOrganizationChange: true,
                                                    sharepointRestApiResponse: SharePoint_RestAPI.Run(
                                                        "https://dod365.sharepoint-mil.us/sites/DCMA-Projects-P2-App-Resources",
                                                        "GET",
                                                        "_api/v2.1/termStore/groups('eb096297-8209-4358-a8ef-bd59697c1f91')/sets('064e2d55-e287-4cbc-9cbd-589f6229f043')/terms",
                                                        "{
                                                            'content-type': 'application/json',
                                                             'accept': 'application/json;odata=nometadata'
                                                        }",
                                                        ""
                                                    ).body
                                                }
                                            );
                                            ClearCollect(
                                                managedMetadataTaxonomy,
                                                ForAll(
                                                    Table(ParseJSON(sharepointRestApiResponse).value),
                                                    {
                                                        id: Value.id,
                                                        name: First(
                                                            Filter(
                                                                Table(Value.labels),
                                                                Value.isDefault = true
                                                            )
                                                        ).Value.name,
                                                        label: First(
                                                            Filter(
                                                                Table(Value.labels),
                                                                "-" in Value.name
                                                            )
                                                        ).Value.name
                                                    }
                                                )
                                            );
                                            
                                        OnSelect: =
                                        PressedBorderColor: =
                                        PressedColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        SearchFields: =["ORG_NAME", "ORG Code"]
                                        SearchItems: |-
                                            =Search(//Choices('GLBL-DS-userRegistration'.organization)
                                            col_organizations,combobox_Organization_1.SearchText,"ORG_NAME","ORG Code")
                                        SelectionColor: =RGBA(26, 26, 26, 1)
                                        SelectionFill: =RGBA(0, 0, 0, 0)
                                        SelectMultiple: =false
                                        Size: =9
                                        TabIndex: =If(isRegisterPopupVisible, -1, 20)
                                        Template: =ListItemTemplate.Double
                                        Width: =Parent.Width
                                        ZIndex: =2

                                HC_OrganizationCode_1 As groupContainer.horizontalAutoLayoutContainer:
                                    DropShadow: =DropShadow.None
                                    FillPortions: =0
                                    Height: =22
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =350
                                    LayoutMode: =LayoutMode.Auto
                                    Width: =350
                                    ZIndex: =7

                                    icon_OrganizationCode_Help_1 As icon.Help:
                                        Color: =RGBA(26, 26, 26, 1)
                                        Height: =13
                                        Icon: =Icon.Help
                                        OnSelect: |-
                                            =Set(popupScope, "popup_register_organizationCodeHelp");
                                            Set(isRegisterPopupVisible, true)
                                        PaddingRight: =0.00
                                        PaddingTop: =0.00
                                        Width: =13
                                        X: =480.73
                                        ZIndex: =1

                                    label_OrganizationCode_1 As label:
                                        Font: =Font.'Segoe UI'
                                        FontWeight: =FontWeight.Semibold
                                        Height: =22
                                        Size: =9
                                        Text: ="Organization Code *"
                                        Width: =142
                                        ZIndex: =2

                                VC_Input_OrganizationCode_1 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =24
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =Self.Height
                                    LayoutMinWidth: =Self.Width
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =6
                                    RadiusBottomRight: =6
                                    RadiusTopLeft: =6
                                    RadiusTopRight: =6
                                    Width: =350
                                    ZIndex: =8

                                    input_OrganizationCode_1 As text:
                                        AccessibleLabel: =If(isAccessibilityEnabled, "Enter Organization Code")
                                        BorderThickness: =0
                                        Clear: =true
                                        Default: |
                                            =/*If(First(currentUser).organizationCode,
                                                First(currentUser).organizationCode,
                                                First(Filter(
                                                    managedMetadataTaxonomy,
                                                    id = combobox_Organization_1.Selected.TermGuid
                                                )).label
                                            )*/
                                            If(isOrganizationChange,
                                                combobox_Organization_1.Selected.'ORG Code',
                                                First(currentUser).organizationCode
                                            )
                                        DisabledBorderColor: =RGBA(255, 255, 255, 1)
                                        DisabledFill: =RGBA(255, 255, 255, 1)
                                        FocusedBorderColor: =RGBA(255,0,0,1)
                                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                        Font: =Font.'Segoe UI'
                                        Height: =Parent.Height
                                        HoverBorderColor: =RGBA(255, 255, 255, 1)
                                        HoverFill: =RGBA(255, 255, 255, 1)
                                        PaddingLeft: =5
                                        PressedBorderColor: =RGBA(255, 255, 255, 1)
                                        PressedFill: =RGBA(255, 255, 255, 1)
                                        RadiusBottomLeft: =0
                                        RadiusBottomRight: =0
                                        RadiusTopLeft: =0
                                        RadiusTopRight: =0
                                        Size: =9
                                        TabIndex: =If(isRegisterPopupVisible, -1, 30)
                                        Width: =Parent.Width
                                        ZIndex: =1

                            VC_AccountSettings_ColumnRight_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =3
                                LayoutMinHeight: =Self.Height
                                LayoutMinWidth: =Self.Width
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =10
                                PaddingLeft: =10
                                PaddingRight: =5
                                PaddingTop: =2
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =Parent.Width / 2
                                ZIndex: =3

                                label_JobSeries_5 As label:
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =22
                                    Size: =9
                                    Text: ="Supervisor * (Last Name, First Name)"
                                    Width: =Parent.Width
                                    ZIndex: =1

                                VC_Combobox_Supervisor_1 As groupContainer.verticalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =24
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =Self.Height
                                    LayoutMinWidth: =Parent.Width - 20
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =6
                                    RadiusBottomRight: =6
                                    RadiusTopLeft: =6
                                    RadiusTopRight: =6
                                    Width: =Parent.Width
                                    ZIndex: =2

                                    combobox_Supervisor_1 As combobox:
                                        AccessibleLabel: =If(isAccessibilityEnabled, "Search Supervisor by Last Name, First Name")
                                        BorderThickness: =0
                                        ChevronBackground: =RGBA(167, 182, 203, 1)
                                        DefaultSelectedItems: |-
                                            =If(!IsBlank(First(currentUser).supervisor.DisplayName),
                                                //First(currentUser).supervisor
                                                First(Office365Users.SearchUser({searchTerm:First(currentUser).supervisor.DisplayName, top: 1}))
                                            )
                                        DisplayFields: =["DisplayName","Path","Value"]
                                        FocusedBorderColor: =RGBA(255,0,0,1)
                                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                        Font: =Font.'Segoe UI'
                                        Height: =Parent.Height
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        InputTextPlaceholder: ="Last Name, First Name"
                                        Items: |-
                                            =Office365Users.SearchUser({searchTerm:Self.SearchText})
                                        OnChange: =
                                        PressedBorderColor: =RGBA(255, 255, 255, 1)
                                        PressedColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(255, 255, 255, 1)
                                        SearchFields: =["DisplayName"]
                                        SearchItems: |-
                                            =Search(Office365Users.SearchUser({searchTerm:Self.SearchText}),combobox_Supervisor_1.SearchText,"DisplayName")
                                        SelectionColor: =RGBA(26, 26, 26, 1)
                                        SelectionFill: =RGBA(0, 0, 0, 0)
                                        SelectMultiple: =false
                                        Size: =9
                                        TabIndex: =If(isRegisterPopupVisible, -1, 40)
                                        Width: =Parent.Width
                                        ZIndex: =2

                                label_Service_1 As label:
                                    Font: =Font.'Segoe UI'
                                    Height: =22
                                    Size: =11
                                    Text: ="Service Type *"
                                    Visible: =false
                                    Width: =350
                                    ZIndex: =3

                                HC_ServiceAndBranch_1 As groupContainer.horizontalAutoLayoutContainer:
                                    DropShadow: =DropShadow.None
                                    FillPortions: =0
                                    Height: =49
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutGap: =8
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =Parent.Width - 20
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =0
                                    RadiusBottomRight: =0
                                    RadiusTopLeft: =0
                                    RadiusTopRight: =0
                                    Width: =350
                                    ZIndex: =5

                                    VC_Combobox_Service_3 As groupContainer.verticalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.SetByContainer
                                        DropShadow: =DropShadow.None
                                        FillPortions: =0
                                        Height: =46
                                        LayoutAlignItems: =LayoutAlignItems.Center
                                        LayoutDirection: =LayoutDirection.Vertical
                                        LayoutJustifyContent: =LayoutJustifyContent.Center
                                        LayoutMinHeight: =Self.Height
                                        LayoutMinWidth: =Self.Width
                                        LayoutMode: =LayoutMode.Auto
                                        PaddingBottom: =4
                                        PaddingLeft: =2
                                        PaddingRight: =2
                                        RadiusBottomLeft: =6
                                        RadiusBottomRight: =6
                                        RadiusTopLeft: =6
                                        RadiusTopRight: =6
                                        Width: =(Parent.Width / 2) - 5
                                        ZIndex: =1

                                        label_Service_2 As label:
                                            Font: =Font.'Segoe UI'
                                            FontWeight: =FontWeight.Semibold
                                            Height: =22
                                            Size: =9
                                            Text: ="Service Type *"
                                            Width: =Parent.Width
                                            ZIndex: =1

                                        VC_comboboxService_1 As groupContainer.verticalAutoLayoutContainer:
                                            AlignInContainer: =AlignInContainer.Start
                                            FillPortions: =0
                                            Height: =24
                                            LayoutAlignItems: =LayoutAlignItems.Center
                                            LayoutDirection: =LayoutDirection.Vertical
                                            LayoutJustifyContent: =LayoutJustifyContent.Center
                                            LayoutMinHeight: =100
                                            LayoutMinWidth: =250
                                            LayoutMode: =LayoutMode.Auto
                                            RadiusBottomLeft: =6
                                            RadiusBottomRight: =6
                                            RadiusTopLeft: =6
                                            RadiusTopRight: =6
                                            Width: =Parent.Width
                                            ZIndex: =3

                                            combobox_Service_1 As combobox:
                                                AccessibleLabel: |-
                                                    =If(isAccessibilityEnabled, "Enter Service Type: Civilian or Military")
                                                BorderThickness: =0
                                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                                DefaultSelectedItems: |
                                                    =If(!IsBlank(First(currentUser).service.Value),
                                                        First(currentUser).service
                                                    )
                                                DisplayFields: =["Value","Path","Value"]
                                                FocusedBorderColor: =RGBA(255,0,0,1)
                                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                                Font: =Font.'Segoe UI'
                                                Height: =24
                                                HoverFill: =RGBA(255, 255, 255, 1)
                                                IsSearchable: =false
                                                Items: =Choices('GLBL-DS-userRegistration'.service).Value
                                                OnChange: |+
                                                    =Reset(combobox_PayPlanGrade);
                                                    
                                                    
                                                OnSelect: |+
                                                    =If(Self.Selected.Value = "Civilian" || Self.Selected.Value = "Contractor",
                                                        Reset(combobox_MilitaryServiceBranch_1);
                                                        Reset(combobox_PayPlanGrade);
                                                        Set(isServiceTypeChanged, true);
                                                    )
                                                    
                                                    
                                                PressedBorderColor: =
                                                PressedColor: =RGBA(0, 0, 0, 0)
                                                PressedFill: =RGBA(0, 0, 0, 0)
                                                SearchFields: =["Value"]
                                                SearchItems: =[]
                                                SelectionColor: =RGBA(40, 112, 134, 1)
                                                SelectionFill: =RGBA(0, 0, 0, 0)
                                                SelectMultiple: =false
                                                Size: =9
                                                TabIndex: =If(isRegisterPopupVisible, -1, 50)
                                                Width: =Parent.Width
                                                ZIndex: =1

                                    VC_Combobox_Service_4 As groupContainer.verticalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.SetByContainer
                                        DropShadow: =DropShadow.None
                                        FillPortions: =0
                                        Height: =46
                                        LayoutAlignItems: =LayoutAlignItems.Center
                                        LayoutDirection: =LayoutDirection.Vertical
                                        LayoutJustifyContent: =LayoutJustifyContent.Center
                                        LayoutMinHeight: =Self.Height
                                        LayoutMinWidth: =Self.Width
                                        LayoutMode: =LayoutMode.Auto
                                        PaddingBottom: =4
                                        PaddingLeft: =2
                                        PaddingRight: =2
                                        RadiusBottomLeft: =6
                                        RadiusBottomRight: =6
                                        RadiusTopLeft: =6
                                        RadiusTopRight: =6
                                        Width: =(Parent.Width / 2) - 5
                                        ZIndex: =2

                                        label_MilitaryServiceBranch_1 As label:
                                            Font: =Font.'Segoe UI'
                                            FontWeight: =FontWeight.Semibold
                                            Height: =22
                                            Size: =9
                                            Text: ="Military Branch *"
                                            Width: =Parent.Width
                                            ZIndex: =1

                                        VC_comboboxMilitaryServiceBranch_1 As groupContainer.verticalAutoLayoutContainer:
                                            AlignInContainer: =AlignInContainer.Start
                                            FillPortions: =0
                                            Height: =24
                                            LayoutAlignItems: =LayoutAlignItems.Center
                                            LayoutDirection: =LayoutDirection.Vertical
                                            LayoutJustifyContent: =LayoutJustifyContent.Center
                                            LayoutMinHeight: =100
                                            LayoutMinWidth: =250
                                            LayoutMode: =LayoutMode.Auto
                                            RadiusBottomLeft: =6
                                            RadiusBottomRight: =6
                                            RadiusTopLeft: =6
                                            RadiusTopRight: =6
                                            Width: =Parent.Width
                                            ZIndex: =3

                                            combobox_MilitaryServiceBranch_1 As combobox:
                                                AccessibleLabel: |-
                                                    =If(isAccessibilityEnabled, "Enter Service Type: Civilian or Military")
                                                BorderThickness: =0
                                                ChevronBackground: =RGBA(167, 182, 203, 1)
                                                DefaultSelectedItems: |
                                                    =If(!IsBlank(First(currentUser).militaryServiceBranch.Value),
                                                        If(isServiceTypeChanged, 
                                                            Blank(),
                                                            {Value: First(currentUser).militaryServiceBranch.Value}),
                                                        Blank()
                                                    )
                                                DisplayFields: =["Value","Path","Value"]
                                                DisplayMode: =If(combobox_Service_1.Selected.Value = "Military", DisplayMode.Edit, DisplayMode.Disabled)
                                                FocusedBorderColor: =RGBA(255,0,0,1)
                                                FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                                Font: =Font.'Segoe UI'
                                                Height: =24
                                                HoverFill: =RGBA(255, 255, 255, 1)
                                                IsSearchable: =false
                                                Items: =Choices('GLBL-DS-userRegistration'.militaryServiceBranch).Value
                                                OnChange: |+
                                                    =Reset(combobox_PayPlanGrade);
                                                    
                                                    
                                                OnSelect: |-
                                                    =Reset(combobox_PayPlanGrade);
                                                    Set(isServiceTypeChanged, true);
                                                PressedBorderColor: =
                                                PressedColor: =RGBA(0, 0, 0, 0)
                                                PressedFill: =RGBA(0, 0, 0, 0)
                                                SearchFields: =["Value"]
                                                SearchItems: =[]
                                                SelectionColor: =RGBA(40, 112, 134, 1)
                                                SelectionFill: =RGBA(0, 0, 0, 0)
                                                SelectMultiple: =false
                                                Size: =9
                                                TabIndex: =If(isRegisterPopupVisible, -1, 50)
                                                Width: =Parent.Width
                                                ZIndex: =1

                                label_PayPlayGrade_1 As label:
                                    Font: =Font.'Segoe UI'
                                    FontWeight: =FontWeight.Semibold
                                    Height: =22
                                    Size: =9
                                    Text: ="Pay Plan / Grade / Rank *"
                                    Width: =350
                                    ZIndex: =6

                                VC_Combobox_PayPlayGrade_1 As groupContainer.verticalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =24
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =Self.Height
                                    LayoutMinWidth: =Parent.Width - 20
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =6
                                    RadiusBottomRight: =6
                                    RadiusTopLeft: =6
                                    RadiusTopRight: =6
                                    Width: =350
                                    ZIndex: =7

                                    combobox_PayPlanGrade_1 As combobox:
                                        AccessibleLabel: =If(isAccessibilityEnabled, "Select Pay Plan, Grade")
                                        BorderThickness: =0
                                        ChevronBackground: =RGBA(167, 182, 203, 1)
                                        DefaultSelectedItems: |-
                                            =If(!IsBlank(First(currentUser).payPlan_Grade),
                                                If(isServiceTypeChanged, 
                                                    Blank(), 
                                                    {v: First(currentUser).payPlan_Grade}),
                                                {v: First(currentUser).payPlan_Grade}
                                            )
                                            //{g: First(currentUser).grade, p: First(currentUser).payPlan, v: First(currentUser).payPlan_Grade}
                                        DisplayFields: =["v","Path","Value"]
                                        FocusedBorderColor: =RGBA(255,0,0,1)
                                        FocusedBorderThickness: =If(isAccessibilityEnabled, 4, 0)
                                        Font: =Font.'Segoe UI'
                                        Height: =Parent.Height
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        IsSearchable: =false
                                        Items: =Ungroup(Filter(PayPlanGrades, Service = combobox_Service_1.Selected.Value), "ppg").v
                                        OnChange: =
                                        OnSelect: |-
                                            =Set(payPlan, First(Filter(Ungroup(Filter(PayPlanGrades, Service = combobox_Service_1.Selected.Value), "ppg"), v = combobox_PayPlanGrade_1.Selected.v).p).p);
                                            Set(grade, First(Filter(Ungroup(Filter(PayPlanGrades, Service = combobox_Service_1.Selected.Value), "ppg"), v = combobox_PayPlanGrade_1.Selected.v).g).g);
                                        PressedBorderColor: =
                                        PressedColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        SearchFields: =["v"]
                                        SearchItems: =[]
                                        SelectionColor: =RGBA(26, 26, 26, 1)
                                        SelectionFill: =RGBA(0, 0, 0, 0)
                                        SelectMultiple: =false
                                        Size: =9
                                        TabIndex: =If(isRegisterPopupVisible, -1, 60)
                                        Width: =Parent.Width
                                        ZIndex: =2

                        HC_AppSettingsControl_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.None
                            FillPortions: =0
                            Height: =46
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutGap: =10
                            LayoutJustifyContent: =LayoutJustifyContent.End
                            LayoutMinHeight: =Self.Height
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =2
                            PaddingLeft: =20
                            PaddingRight: =11
                            PaddingTop: =2
                            Width: =770.98
                            X: =0.00
                            ZIndex: =3

                            HC_AccessibilityControl_1 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Center
                                DropShadow: =DropShadow.None
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =Self.Height
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =2
                                PaddingLeft: =2
                                PaddingRight: =2
                                PaddingTop: =2
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =200
                                ZIndex: =1

                                icon_AccessibilityOption_Help_1 As icon.Help:
                                    Color: =RGBA(26, 26, 26, 1)
                                    Height: =13
                                    Icon: =Icon.Help
                                    OnSelect: |-
                                        =Set(popupScope, "popup_register_accessibilityHelp");
                                        Set(isRegisterPopupVisible, true)
                                    PaddingRight: =0.00
                                    PaddingTop: =0.00
                                    Width: =13
                                    X: =480.73
                                    ZIndex: =1

                                togle_AccessibilityOption_1 As toggleSwitch:
                                    AccessibleLabel: =If(isAccessibilityEnabled, "accessibility enabled")
                                    FalseText: |-
                                        ="Accessibility: Disabled"
                                    FocusedBorderColor: =RGBA(255,0,0,1)
                                    FocusedBorderThickness: =If(isAccessibilityEnabled, 4)
                                    Height: =18
                                    OnCheck: =Set(isAccessibilityEnabled, true)
                                    OnUncheck: =Set(isAccessibilityEnabled, false)
                                    Size: =10
                                    TabIndex: =If(isRegisterPopupVisible, -1, 1)
                                    TextPosition: =TextPosition.Left
                                    TrueText: |-
                                        ="Accessibility: Enabled"
                                    Width: =Parent.Width - icon_AccessibilityOption_Help_1.Width
                                    X: =18.139999999999986
                                    ZIndex: =2

                            button_RegisterAccount_1 As button:
                                BorderThickness: =0
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(0, 0, 0, 1)
                                DisabledFill: =RGBA(214, 221, 224, 1)
                                Fill: =RGBA(50, 86, 160, 1)
                                FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                                Height: =32
                                HoverBorderColor: =
                                HoverFill: =ColorFade(Self.Fill, 0.1)
                                OnSelect: |
                                    =If(
                                        IsBlank(combobox_JobSeries_1.Selected.Label) || 
                                        IsBlank(combobox_Organization_1.Selected.ORG_NAME) || 
                                        IsBlank(input_OrganizationCode_1.Text) || 
                                        IsBlank(combobox_Supervisor_1.Selected.DisplayName) || 
                                        IsBlank(combobox_Service_1.Selected.Value) || 
                                        IsBlank(combobox_PayPlanGrade_1.Selected.v) ||
                                        If(combobox_Service_1.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_1.Selected.Value), true, false),
                                    
                                            Set(popupScope, "popup_register_registerUserErrorPatch");
                                            Set(isRegisterPopupVisible, true),
                                    
                                            Patch('GLBL-DS-userRegistration',
                                                {ID: LookUp('GLBL-DS-userRegistration', uid = First(currentUser).uid).ID},
                                                {
                                                    displayName: First(currentUser).displayName,
                                                    givenName: First(currentUser).givenName,
                                                    surname: First(currentUser).surname,
                                                    mail: First(currentUser).mail,
                                                    officeLocation: First(currentUser).officeLocation,
                                                    userPrincipalName: First(currentUser).userPrincipalName,
                                                    uid: First(currentUser).uid,
                                                    state: First(currentUser).state,
                                                    streetAddress: First(currentUser).streetAddress,
                                                    postalCode: First(currentUser).postalCode,
                                                    userType: First(currentUser).userType,
                                                    accountEnabled: First(currentUser).accountEnabled,
                                                    jobTitle: First(currentUser).jobTitle,
                                                    city: First(currentUser).city,
                                                    department: First(currentUser).department,
                                                    companyName: First(currentUser).companyName,
                                                    image: User().Image,
                                                    jobSeries: combobox_JobSeries_1.Selected,
                                                    //organization: combobox_Organization_1.Selected,
                                                    organizationCode: Upper(input_OrganizationCode_1.Text),
                                                    organizationId: combobox_Organization_1.Selected.ORG_ID,
                                                    service: combobox_Service_1.Selected,
                                                    militaryServiceBranch: combobox_MilitaryServiceBranch_1.Selected,
                                                    payPlan_Grade: combobox_PayPlanGrade_1.Selected.v,
                                                    payPlan: First(Filter(Ungroup(Filter(PayPlanGrades, Service = combobox_Service_1.Selected.Value), "ppg"), v = combobox_PayPlanGrade_1.Selected.v).p).p,
                                                    grade: Value(First(Filter(Ungroup(Filter(PayPlanGrades, Service = combobox_Service_1.Selected.Value), "ppg"), v = combobox_PayPlanGrade_1.Selected.v).g).g),
                                                    accessibilityEnabled: If(isAccessibilityEnabled, true, false),
                                                    supervisorEmail: combobox_Supervisor_1.Selected.Mail,
                                                    supervisorUid: combobox_Supervisor_1.Selected.Id,
                                                    supervisorPhone: combobox_Supervisor_1.Selected.TelephoneNumber,
                                                    supervisorDisplayName: combobox_Supervisor_1.Selected.DisplayName,
                                                    supervisorGivenName: combobox_Supervisor_1.Selected.GivenName,
                                                    supervisorSurname: combobox_Supervisor_1.Selected.Surname,
                                                    persona: {
                                                        '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                                        Claims: Concatenate("i:0#.f|membership|", First(currentUser).mail),
                                                        Department: First(currentUser).department,
                                                        DisplayName: First(currentUser).displayName,
                                                        Email: First(currentUser).mail,
                                                        JobTitle: First(currentUser).jobTitle,
                                                        Picture: ""
                                                    },
                                                    supervisor: {
                                                        '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                                        Claims: Concatenate("i:0#.f|membership|", combobox_Supervisor_1.Selected.Mail),
                                                        Department: combobox_Supervisor_1.Selected.Department,
                                                        DisplayName: combobox_Supervisor_1.Selected.DisplayName,
                                                        Email: combobox_Supervisor_1.Selected.Mail,
                                                        JobTitle: combobox_Supervisor_1.Selected.JobTitle,
                                                        Picture: ""
                                                    }
                                                }
                                            );
                                    
                                            With(
                                                {
                                                    currentUserChecklistItems: Filter('OBOF-DS-checklistOutProcessing', uidUser = First(currentUser).uid)
                                                },
                                                ForAll(currentUserChecklistItems,
                                                    Patch('OBOF-DS-checklistOutProcessing',
                                                        ThisRecord,
                                                        {
                                                            uidSupervisor: combobox_Supervisor_1.Selected.Id
                                                        }
                                                    )
                                                )
                                            );
                                    
                                            Set(isAccountSettingsVisible, !isAccountSettingsVisible);
                                    
                                            ClearCollect(currentUser, 
                                                AddColumns(
                                                    Table(LookUp('GLBL-DS-userRegistration', uid = Text(User().EntraObjectId))),
                                                    "isTFManager", !IsBlank(LookUp(memberOf, id in _TFManager.role).id),
                                                    "isTFProgramManager", !IsBlank(LookUp(memberOf, id in _TFProgramManager.role).id),
                                                    "isEmployee", !IsBlank(LookUp(memberOf, id in _Employee.role).id),
                                                    "isSupervisor", !IsBlank(LookUp(memberOf, id in _Supervisor.role).id),
                                                    "isMSO", !IsBlank(LookUp(memberOf, id in _MSO.role).id),
                                                    "isClearingOffice", !IsBlank(LookUp(memberOf, id in _ClearingOffice.role).id)
                                                )
                                            );
                                    
                                            Reset(combobox_JobSeries);
                                            Reset(combobox_Organization);
                                            Reset(input_OrganizationCode);
                                            Reset(combobox_Supervisor);
                                            Reset(combobox_Service);
                                            Reset(combobox_PayPlanGrade);
                                            Reset(combobox_JobSeries_1);
                                            Reset(combobox_Organization_1);
                                            Reset(input_OrganizationCode_1);
                                            Reset(combobox_Supervisor_1);
                                            Reset(combobox_Service_1);
                                            Reset(combobox_PayPlanGrade_1);
                                            Set(isServiceTypeChanged, false);
                                            Reset(combobox_PayPlanGrade_1);
                                            Select(refreshChecklists);
                                    );
                                PressedBorderColor: =
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =
                                RadiusBottomLeft: =8
                                RadiusBottomRight: =8
                                RadiusTopLeft: =8
                                RadiusTopRight: =8
                                Size: =11
                                TabIndex: =If(isRegisterPopupVisible, -1, 70)
                                Text: ="Save"
                                Width: =145.13
                                X: =607.72
                                ZIndex: =2

                    HC_AccountSettings_Props2_1 As groupContainer.horizontalAutoLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =HC_UserMenuDetailItems_4.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =1.81
                        Width: =Parent.Width
                        X: =0.00
                        Y: =HC_AccountSetings_Props1_1.Y + HC_AccountSetings_Props1_1.Height
                        ZIndex: =3

                        icon_People_10 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =0.00
                            ZIndex: =1

                        tbl_MSO_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>MSO</strong></br>"&If(First(currentUser).isMSO, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =45.35
                            ZIndex: =2

                        icon_People_11 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =281.18
                            ZIndex: =5

                        tbl_ClearingOffice_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Clearing Office</strong></br>"&If(First(currentUser).isClearingOffice, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =326.53
                            ZIndex: =6

                        icon_People_12 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =562.36
                            ZIndex: =7

                        tbl_Employee_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Member</strong></br>"&If(First(currentUser).isEmployee, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =136.06
                            X: =607.72
                            ZIndex: =8

                    HC_AccountSetings_Props1_1 As groupContainer.horizontalAutoLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =HC_UserMenuDetailItems_4.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =0.00
                        PaddingTop: =1.81
                        Width: =Parent.Width
                        X: =0.00
                        Y: =HC_AccountSettings_Header_1.Height + separator_AccountSettings_Header_1.Height + 2
                        ZIndex: =4

                        icon_People_8 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =0.00
                            ZIndex: =1

                        tbl_TotalForceManager_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Total Force Manager</strong></br>"&If(First(currentUser).isTFManager, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =45.35
                            ZIndex: =2

                        icon_People_9 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =281.18
                            ZIndex: =5

                        tbl_TotalForceProgramManager_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Total Force Program Manager</strong></br>"&If(First(currentUser).isTFProgramManager, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =235.83
                            X: =326.53
                            ZIndex: =6

                        icon_Poeple_5 As icon.Mail:
                            Color: =RGBA(77, 77, 77, 1)
                            Height: =50
                            Icon: =Icon.People
                            PaddingBottom: =12
                            PaddingLeft: =12
                            PaddingRight: =9.07
                            PaddingTop: =10.88
                            Width: =45.35
                            X: =562.36
                            ZIndex: =7

                        tbl_Supervisor_1 As htmlViewer:
                            AutoHeight: =true
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingTop
                            HtmlText: |-
                                ="
                                <div style='line-height: 1.3;'><strong>Supervisor</strong></br>"&If(First(currentUser).isSupervisor, "<span style='color: #50C878'>&#11044</span> Role Assigned", "N|A")&"</div>
                                "
                            PaddingLeft: =0
                            PaddingRight: =4.54
                            PaddingTop: =0.00
                            Size: =9
                            Width: =136.06
                            X: =607.72
                            ZIndex: =8

                    separator_AccountSettings_Header_1 As rectangle:
                        Fill: =RGBA(149, 149, 149, 1)
                        Height: =1
                        Width: =760
                        X: =9.07
                        Y: =HC_AccountSettings_Header_1.Height
                        ZIndex: =5

                    HC_AccountSettings_Header_1 As groupContainer.horizontalAutoLayoutContainer:
                        DropShadow: =DropShadow.None
                        Height: =25//HC_OverviewDetails_1.Height
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =10
                        PaddingRight: =9.07
                        PaddingTop: =0.00
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =6

                        label_OverviewDetails_3 As label:
                            AlignInContainer: =AlignInContainer.End
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =Parent.Height
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            Role: =TextRole.Heading3
                            Size: =11
                            Text: ="Account Roles / Details"
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =752.84
                            X: =9.07
                            Y: =40
                            ZIndex: =1

            HC_Popup_1 As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                Fill: =RGBA(26, 26, 26, 0.21)
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =0.00
                PaddingTop: =0.00
                Visible: =isRegisterPopupVisible
                Width: =Parent.Width
                X: =
                ZIndex: =4

                VC_Popup_1 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderColor: =RGBA(77, 77, 77, 1)
                    BorderThickness: =1
                    DropShadow: =DropShadow.ExtraBold
                    Fill: =RGBA(241, 244, 249, 1)
                    FillPortions: =0
                    Height: =350
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    LayoutMode: =LayoutMode.Auto
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Width: =725.63
                    X: =Parent.Width / 2
                    Y: =Parent.Height / 2
                    ZIndex: =1

                    HC_Popup_Header_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =40
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.End
                        LayoutMinHeight: =40
                        LayoutMinWidth: =Parent.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =10
                        PaddingRight: =9.07
                        PaddingTop: =0.00
                        Width: =725.63
                        X: =0.00
                        ZIndex: =1

                        label_ClosePopupLabel_1 As label:
                            Align: =Align.Right
                            Font: =Font.'Segoe UI'
                            Size: =10
                            TabIndex: =20
                            Text: ="Close Window"
                            Visible: =isAccessibilityEnabled
                            ZIndex: =1

                        Icon2_1 As icon.CancelBadge:
                            Color: =RGBA(26, 26, 26, 1)
                            FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                            Height: =22
                            Icon: =Icon.CancelBadge
                            OnSelect: |-
                                =Set(popupScope, Blank());
                                Set(isRegisterPopupVisible, false)
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            TabIndex: =40
                            Width: =19.95
                            X: =0.00
                            ZIndex: =2

                    HC_Popup_Body_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =Parent.Height - (HC_Popup_Header_1.Height + HC_Popup_Footer_1.Height)
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =40
                        LayoutMinWidth: =Parent.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =10
                        PaddingLeft: =10
                        PaddingRight: =10
                        PaddingTop: =10
                        Width: =Parent.Width
                        ZIndex: =2

                        HtmlText1_1 As htmlViewer:
                            Fill: =RGBA(0, 0, 0, 0)
                            FillPortions: =1
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - (Parent.PaddingBottom + Parent.PaddingTop)
                            HtmlText: |-
                                =Concatenate(
                                    Substitute(
                                        LookUp(
                                            appSettings, Scope = popupScope).content_RT, 
                                            "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)"),
                                    "<ul>",
                                    If(IsBlank(combobox_JobSeries_1.Selected.Label) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Job Series</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Organization_1.Selected.ORG_NAME) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Organization</strong> is a required field</li>"),
                                    If(IsBlank(input_OrganizationCode_1.Text) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Organization Code</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Supervisor_1.Selected.DisplayName) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Supervisor</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Service_1.Selected.Value) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Service Type</strong> is a required field</li>"),
                                    If(IsBlank(combobox_PayPlanGrade_1.Selected.v) && popupScope = "popup_register_registerUserErrorPatch", "<li><strong>Pay Plan / Grade / Rank</strong> is a required field</li>"),
                                    "</ul>"
                                )
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =9
                            Width: =Parent.Width
                            ZIndex: =1

                    HC_Popup_Footer_1 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.None
                        FillPortions: =0
                        Height: =40
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.Center
                        LayoutMinHeight: =40
                        LayoutMinWidth: =Parent.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingTop: =0.00
                        Width: =725.63
                        X: =0.00
                        ZIndex: =3

                        label_InfoPopupDialog_1 As label:
                            Align: =Align.Center
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height
                            Size: =10
                            Text: ="Information Dialog Window"
                            VerticalAlign: =VerticalAlign.Bottom
                            Visible: =isAccessibilityEnabled
                            Width: =Parent.Width
                            ZIndex: =1

    HC_MainPopup As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =RGBA(26, 26, 26, 0.2)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        PaddingRight: =0.00
        PaddingTop: =0.00
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =isMainPopupVisible
        Width: =Parent.Width
        X: =
        ZIndex: =13

        VC_MainPopup As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(77, 77, 77, 1)
            BorderThickness: =1
            DropShadow: =DropShadow.ExtraBold
            Fill: =RGBA(241, 244, 249, 1)
            FillPortions: =0
            Height: =500
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =Self.Height
            LayoutMinWidth: =Self.Width
            LayoutMode: =LayoutMode.Auto
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =15
            RadiusBottomRight: =15
            RadiusTopLeft: =15
            RadiusTopRight: =15
            Width: =750
            X: =Parent.Width / 2
            Y: =Parent.Height / 2
            ZIndex: =1

            HC_MainPopup_Header As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                PaddingRight: =9.07
                PaddingTop: =0.00
                Width: =725.63
                X: =0.00
                ZIndex: =1

                label_ClosePopupLabel_2 As label:
                    Align: =Align.Right
                    Font: =Font.'Segoe UI'
                    Size: =10
                    TabIndex: =20
                    Text: ="Close Window"
                    Visible: =isAccessibilityEnabled
                    ZIndex: =1

                Icon2_2 As icon.CancelBadge:
                    Color: =RGBA(26, 26, 26, 1)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, 1, 0)
                    Height: =22
                    Icon: =Icon.CancelBadge
                    OnSelect: |-
                        =//Clear(_missingSignatures);
                        Set(popupScope, Blank());
                        Set(isMainPopupVisible, false);
                        Set(signatureTypeArray, Blank());
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    TabIndex: =40
                    Width: =19.95
                    X: =0.00
                    ZIndex: =2

            VC_MainPopup_Body As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - (HC_MainPopup_Header.Height + HC_MainPopup_Footer.Height)
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                PaddingRight: =10
                Width: =Parent.Width
                ZIndex: =2

                HC_DeleteWarning As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =60
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =If(popupScope = "popup_main_verifyDeleteChecklist", true, false)
                    Width: =Parent.Width
                    ZIndex: =1

                    icon_DeleteWarning As icon.Warning:
                        Color: =RGBA(255, 184, 174, 1)
                        Height: =40
                        Icon: =Icon.Warning
                        Width: =40
                        ZIndex: =1

                    Label2 As label:
                        Text: |-
                            ="WARNING: You are about to delete CHKID" & gallery_checklists.Selected.ID
                        Width: =450
                        ZIndex: =2

                HtmlText1_2 As htmlViewer:
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    HtmlText: |
                        =With (
                            {
                                varDateMod: If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                    DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                        DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)))
                            },
                            If(popupScope = "popup_main_newChecklistPatch",
                                Concatenate(Substitute(LookUp(appSettings, Scope = popupScope).content_RT, "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)"),
                                    "<ul>",
                                    If(combobox_EmployeeName_3.Selected.Id = combobox_Designee_3.Selected.Id && popupScope = "popup_main_newChecklistPatch", "<li><strong>Employee & Designee</strong> cannot be the same person</li>"),
                                    If(combobox_EmployeeName_3.Selected.Id = combobox_Supervisor_3.Selected.Id && popupScope = "popup_main_newChecklistPatch", "<li><strong>Employee & Supervisor</strong> cannot be the same person</li>"),
                                    If(IsBlank(combobox_EmployeeName_3.Selected.Mail) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Employee Name</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Supervisor_3.Selected.Mail) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Supervisor Name</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Designee_3.Selected.Mail) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Designee Name</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Organization_3.Selected.ORG_NAME) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Organization</strong> is a required field</li>"),
                                    If(IsBlank(input_OrganizationCode_3.Text) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Organization Code</strong> is a required field</li>"),
                                    If(IsBlank(combobox_Service_3.Selected.Value) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Service</strong> is a required field</li>"),
                                    If(combobox_Service_3.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_3.Selected.Value) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Military Service Branch</strong> is a required field</li>"),
                                    If(IsBlank(combobox_PayPlanGrade_3.Selected.v) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Pay Plan / Grade / Rank</strong> is a required field</li>"),
                                    If(IsBlank(combobox_OutprocessingStatus_3.Selected.Value) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Out-Processing Status</strong> is a required field</li>"),
                                    If(datepicker_DepartureDate_3.SelectedDate < Today() && !IsBlank(datepicker_DepartureDate_3.SelectedDate)  && popupScope = "popup_main_newChecklistPatch",  "<li><strong>Departure Date</strong> Hmmmmmm... now that doesn't make a whole lotta sense to pick a Departure Date like that, unless you're hanging out with Loki at the TVA doing a little time slipping - that's pretty cool if you did... or are... or is going to... or will be going to! I suppose time is a little reletive to a few people out there.</li>"),
                                    If(IsBlank(datepicker_DepartureDate_3.SelectedDate) && popupScope = "popup_main_newChecklistPatch", "<li><strong>Departure Date</strong> is a required field</li>"),
                                    If("Transfer" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerName_3.Text) && popupScope = "popup_main_newChecklistPatch", "<li><strong>New Employer / Agency Name</strong> is a required field</li>"),
                                    If("Transfer" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerAddress_3.Text) && popupScope = "popup_main_newChecklistPatch", "<li><strong>New Employer / Agency Address</strong> is a required field</li>"),
                                    "</ul>"
                                ),
                        
                                If(popupScope = "popup_main_updateChecklistAttributesPatch",
                                    Concatenate(Substitute(LookUp(appSettings, Scope = popupScope).content_RT, "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)"),
                                        "<ul>",
                                        If(combobox_EmployeeName_4.Selected.Id = combobox_Designee_4.Selected.Id && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Employee & Designee</strong> cannot be the same person</li>"),
                                        If(combobox_EmployeeName_4.Selected.Id = combobox_Supervisor_4.Selected.Id && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Employee & Supervisor</strong> cannot be the same person</li>"),
                                        If(IsBlank(combobox_EmployeeName_4.Selected.Mail) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Employee Name</strong> is a required field</li>"),
                                        If(IsBlank(combobox_Supervisor_4.Selected.Mail) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Supervisor</strong> is a required field</li>"),
                                        If(IsBlank(combobox_Designee_4.Selected.Mail) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Designee</strong> is a required field</li>"),
                                        If(IsBlank(combobox_Organization_4.Selected.ORG_NAME) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Organization</strong> is a required field</li>"),
                                        If(IsBlank(input_OrganizationCode_4.Text) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Organization Code</strong> is a required field</li>"),
                                        If(IsBlank(combobox_Service_4.Selected.Value) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Service</strong> is a required field</li>"),
                                        If(combobox_Service_4.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_4.Selected.Value) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Military Service Branch</strong> is a required field</li>"),
                                        If(IsBlank(combobox_PayPlanGrade_4.Selected.v) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Pay Plan / Grade / Rank</strong> is a required field</li>"),
                                        If(IsBlank(combobox_OutprocessingStatus_4.Selected.Value) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Out-Processing Status</strong> is a required field</li>"),
                                        If(IsBlank(datepicker_DepartureDate_4_1.SelectedDate) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>Departure Date</strong> is a required field</li>"),
                                        If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value && IsBlank(input_NewEmployerName_4.Text) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>New Employer / Agency Name</strong> is a required field</li>"),
                                        If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value && IsBlank(input_NewEmployerAddress_4.Text) && popupScope = "popup_main_updateChecklistAttributesPatch", "<li><strong>New Employer / Agency Address</strong> is a required field</li>"),
                                        "</ul>"
                                    ),
                        
                                    If(popupScope = "popup_main_verifyDeleteChecklist",
                                        "<strong>ARE YOU SURE YOU WANT TO DELETE</strong>: CHKID" & gallery_checklists.Selected.ID &
                                        "</br>This operation cannot be undone after deletion. All progress associated with checklist CHKID" & gallery_checklists.Selected.ID & " will be lost.",
                        
                                        If(popupScope = "popup_main_newLocalTask",
                                            Concatenate(Substitute(LookUp(appSettings, Scope = popupScope).content_RT, "background-color&#58;rgb(255, 255, 255)", "background-color&#58;rgb(0, 0, 0, 0)"),
                                                "<ul>",
                                                If(IsBlank(input_LocalTask_Title.Text) && popupScope = "popup_main_newLocalTask", "<li><strong>What is the title of your task</strong> cannot be blank</li>"),
                                                If(Len(input_LocalTask_Title.Text) > 60 && popupScope = "popup_main_newLocalTask", "<li><strong>What is the title of your task</strong> exceeds 60 character limit</li>"),
                                                If(IsBlank(combobox_LocalTaskDetails_Service.Selected.Value) && popupScope = "popup_main_newLocalTask", "<li><strong>What Service(s) does this task apply</strong> cannot be blank</li>"),
                                                If(IsBlank(RichTextEditor_TaskDetails.HtmlText) && popupScope = "popup_main_newLocalTask", "<li><strong>Provide a detailed description of the steps to complete this task</strong> cannot be blank</li>"),
                                                If(IsBlank(combobox_LocalTask_Group.Selected.Value) && popupScope = "popup_main_newLocalTask", "<li><strong>Task Category</strong> cannot be blank</li>"),
                                                If(IsBlank(input_LocalTask_DueInDays_2.Text) && popupScope = "popup_main_newLocalTask", "<li><strong>Due in Days</strong> cannot be blank</li>"),
                                                If(!checkbox_LocalTask_ClearingOffice.Value && !checkbox_LocalTask_Employee.Value && !checkbox_LocalTask_Supervisor.Value && !checkbox_LocalTask_Designee.Value && !checkbox_LocalTask_MSO.Value && popupScope = "popup_main_newLocalTask", "<li><strong>Required Signatures</strong> must have at least one selected</li>"),
                                                "</ul>"
                                            ),
                        
                                            If(popupScope = "popup_main_missingCompletionTasks",
                                                "<h2 align='center'>Missing Required Signatures</h2>" & If(!IsBlank(signatureTypeArray), "<strong>Note:</strong> Supervisor's or Designee's should verify that any task listed below have the required signatures completed by one of the following: <em>Departing Employee, Clearing Office and Supervisor/Designee</em>.<br /> &#9829; <em>Total Force</em>") & "<ul>" & If(!IsEmpty(col_missingSignatures), Concat(col_missingSignatures, $"<li>Checklist Task ID <strong>{actionItem}</strong> from <strong>{groupValue}</strong></li>","")) & "</ul>",
                        
                                                If(popupScope = "popup_main_galleryControlsSortHelp",
                                                    LookUp('OBOF-DS-appSettings', Scope = "popup_main_galleryControlsSortHelp").content_RT,
                        
                                                    If(popupScope = "popup_main_overallPercentageHelp",
                                                        LookUp('OBOF-DS-appSettings', Scope = "popup_main_overallPercentageHelp").content_RT
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    PaddingBottom: =0
                    PaddingLeft: =20
                    PaddingRight: =20
                    PaddingTop: =0
                    Width: =Parent.Width
                    ZIndex: =2

            HC_MainPopup_Footer As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =40
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =10
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =40
                LayoutMinWidth: =Parent.Width
                LayoutMode: =LayoutMode.Auto
                PaddingTop: =0.00
                Width: =725.63
                X: =0.00
                ZIndex: =3

                label_InfoPopupDialog_2 As label:
                    Align: =Align.Center
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height
                    Size: =10
                    Text: ="Information Dialog Window"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =isAccessibilityEnabled
                    Width: =Parent.Width
                    ZIndex: =1

                button_DeleteChecklist_5 As button:
                    BorderColor: =ColorFade(Self.Fill, -55%)
                    BorderThickness: =1
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(253, 207, 180, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    FontWeight: =FontWeight.Bold
                    Height: =28
                    HoverBorderColor: =ColorFade(Self.HoverFill, -0.5)
                    HoverColor: =RGBA(53, 61, 63, 1)
                    HoverFill: =RGBA(224, 86, 6, 1)
                    OnSelect: |-
                        =//Select(deleteChecklist);
                        DataSourceComponent.DeletChecklist(gallery_checklists.Selected.ID);
                        DataSourceComponent.Refresh(false, globalFilter);
                        Set(isMainPopupVisible, false);
                        Set(isEditChecklistVisible, false);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Delete"
                    Visible: =If(popupScope = "popup_main_verifyDeleteChecklist", true, false)
                    Width: =145.13
                    X: =607.72
                    ZIndex: =2

                button_DeleteChecklist_6 As button:
                    BorderColor: =ColorFade(Self.Fill, -55%)
                    BorderThickness: =1
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(180, 214, 250, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, focusedBorderColor)
                    FocusedBorderThickness: =If(isAccessibilityEnabled, focusedBorderSize, 0)
                    FontWeight: =FontWeight.Bold
                    Height: =28
                    HoverBorderColor: =ColorFade(Self.HoverFill, -0.5)
                    HoverColor: =RGBA(53, 61, 63, 1)
                    HoverFill: =RGBA(71, 158, 245, 1)
                    OnSelect: =Set(isMainPopupVisible, false);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Cancel"
                    Visible: =If(popupScope = "popup_main_verifyDeleteChecklist", true, false)
                    Width: =145.13
                    X: =607.72
                    ZIndex: =3

    VC_ReleaseNotes As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =RGBA(79, 90, 94, 0.5)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        Visible: |-
            =If(LookUp('GLBL-DS-userAppAssociation', uidUser = First(currentUser).uid && uidApplication = appMetadata.appUid).applicationIteration <> appRegistration.applicationIteration,
                true,
                false
            )
        Width: =Parent.Width
        ZIndex: =14

        VC_ReleaseNotes_1 As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(53, 61, 63, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Regular
            Fill: =RGBA(106, 122, 127, 1)
            FillPortions: =0
            Height: |-
                =App.ActiveScreen.Height / 1.1
                //650
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =Parent.Width / 1.2
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =700
            ZIndex: =1

            VC_ReleaseNotesHeader As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =130
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

                label_ReleaseNotesHeader_1 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =30
                    Role: =TextRole.Heading1
                    Size: =14
                    Text: ="Application Release Notes"
                    Width: =Parent.Width
                    ZIndex: =1

                label_ReleaseNotesHeader_2 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Font: =Font.'Segoe UI'
                    Height: =75
                    Size: =9
                    Text: |-
                        =$"Out-Processing & Transfers Checklist Application v{appMetadata.appVersion}" & Char(10) &
                        $"Publisher: {appRegistration.applicationPublisher.Value}" & Char(10) &
                        $"{Concat(Ungroup(appRegistration.applicationOwners, "DisplayName"), DisplayName, ", ")}"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    ZIndex: =2

            VC_ReleaseNotesBody As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                ContentLanguage: =
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - VC_ReleaseNotesHeader.Height - VC_ReleaseNotesFooter.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =20
                PaddingLeft: =20
                PaddingRight: =20
                PaddingTop: =20
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                ZIndex: =2

                CC_ReleaseNotesBody As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =Parent.Height - (Parent.PaddingBottom + Parent.PaddingTop)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    Width: =Parent.Width - (Parent.PaddingLeft + Parent.PaddingRight)
                    ZIndex: =1

                    VC_ReleaseNotesBody_1 As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =RGBA(53, 61, 63, 1)
                        BorderThickness: =1
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =Parent.Height - Parent.PaddingBottom - Parent.PaddingTop
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =10
                        PaddingLeft: =10
                        PaddingRight: =10
                        PaddingTop: =10
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =Parent.Width
                        ZIndex: =1

                        html_ReleaseNotesBody As htmlViewer:
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingBottom - Parent.PaddingTop
                            HtmlText: =appRegistration.applicationReleaseNotes
                            Size: =10
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =1

                    img_DCMA_Seal_1 As image:
                        DisplayMode: =DisplayMode.View
                        Height: =Parent.Height / 2
                        Image: ='DCMA_Seal_Cropped-NoBKG'
                        Transparency: =0.95
                        Width: =Parent.Width / 2
                        X: =(Parent.Width) - (Self.Width / 2) * 3
                        Y: =(Parent.Height) - (Self.Height / 2) * 3
                        ZIndex: =2

            VC_ReleaseNotesFooter As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =50
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =3

                button_ReleaseNotes As button:
                    BorderColor: =RGBA(13, 50, 61, 1)
                    BorderThickness: =0.25
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(175, 190, 190, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                    Height: =32
                    HoverBorderColor: =RGBA(13, 50, 61, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: |-
                        =ColorFade(Self.Fill, 0.15)
                        //RGBA(52, 98, 108, 1)
                    OnSelect: |-
                        =Patch('GLBL-DS-userAppAssociation',
                            LookUp('GLBL-DS-userAppAssociation', uidUser = First(currentUser).uid && uidApplication = appMetadata.appUid),
                            {
                                applicationIteration: appRegistration.applicationIteration
                            }
                        )
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Close"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =1

    VC_PrivacyPolicy As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =RGBA(79, 90, 94, 0.5)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        Visible: =isPrivacyPolicySatementVisible
        Width: =Parent.Width
        ZIndex: =15

        VC_PrivacyPolicyNotification As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(53, 61, 63, 1)
            BorderThickness: =2
            DropShadow: =DropShadow.Regular
            Fill: =RGBA(106, 122, 127, 1)
            FillPortions: =0
            Height: |-
                =App.ActiveScreen.Height / 1.1
                //650
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =Parent.Width / 1.2
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =700
            ZIndex: =1

            VC_PrivacyPolicyHeader As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =130
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

                label_PrivacyPolicyHeader_1 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Bold
                    Height: =65
                    Role: =TextRole.Heading1
                    Size: =14
                    Text: ="DCMA" & Char(10) & "PERSONNEL OUT-PROCESSING AND TRANSFERS CHECKLIST"
                    Width: =Parent.Width
                    ZIndex: =1

                label_PrivacyPolicyHeader_2 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Font: =Font.'Segoe UI'
                    Height: =75
                    Size: =10
                    Text: |-
                        ="PRIVACY ACT STATEMENT" & Char(10) & 
                        "AUTHORITY: INFORMATION PROTECTED BY THE PRIVACY ACT OF 1974" & Char(10) &
                        "Any misuse of unauthorized access or release may result in civil and criminal penalties"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    ZIndex: =2

            VC_PrivacyPolicyBody As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                ContentLanguage: =
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height - VC_PrivacyPolicyHeader.Height - VC_PrivacyPolicyFooter.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =20
                PaddingLeft: =20
                PaddingRight: =20
                PaddingTop: =20
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Parent.Width
                ZIndex: =2

                CC_PrivacyPolicyBody As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =Parent.Height - (Parent.PaddingBottom + Parent.PaddingTop)
                    LayoutMinHeight: =Self.Height
                    LayoutMinWidth: =Self.Width
                    Width: =Parent.Width - (Parent.PaddingLeft + Parent.PaddingRight)
                    ZIndex: =1

                    VC_PrivacyPolicyBody_2 As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =RGBA(53, 61, 63, 1)
                        BorderThickness: =1
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =Parent.Height - Parent.PaddingBottom - Parent.PaddingTop
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =10
                        PaddingLeft: =10
                        PaddingRight: =10
                        PaddingTop: =10
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =Parent.Width
                        ZIndex: =1

                        html_PrivacyPolicyBody_1 As htmlViewer:
                            AlignInContainer: =AlignInContainer.Start
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Parent.PaddingBottom - Parent.PaddingTop
                            HtmlText: =LookUp('OBOF-DS-appSettings', ID = 24).content_RT
                            Size: =10
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =1

                    img_DCMA_Seal As image:
                        DisplayMode: =DisplayMode.View
                        Height: =Parent.Height / 2
                        Image: ='DCMA_Seal_Cropped-NoBKG'
                        Transparency: =0.95
                        Width: =Parent.Width / 2
                        X: =(Parent.Width) - (Self.Width / 2) * 3
                        Y: =(Parent.Height) - (Self.Height / 2) * 3
                        ZIndex: =2

            VC_PrivacyPolicyFooter As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =50
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =3

                button_RegisterAccount_3 As button:
                    BorderColor: =RGBA(13, 50, 61, 1)
                    BorderThickness: =0.25
                    Color: =RGBA(53, 61, 63, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(214, 221, 224, 1)
                    Fill: =RGBA(175, 190, 190, 1)
                    FocusedBorderColor: =If(isAccessibilityEnabled, RGBA(255,0,0,1))
                    Height: =32
                    HoverBorderColor: =RGBA(13, 50, 61, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: |-
                        =ColorFade(Self.Fill, 0.15)
                        //RGBA(52, 98, 108, 1)
                    OnSelect: =Set(isPrivacyPolicySatementVisible, false);
                    PressedBorderColor: =
                    PressedColor: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Size: =11
                    TabIndex: =If(isRegisterPopupVisible, -1, 70)
                    Text: ="Acknowledge"
                    Width: =145.13
                    X: =607.72
                    ZIndex: =1

    "'FUNCTION BANK' As groupContainer.verticalAutoLayoutContainer":
        DropShadow: =DropShadow.None
        Height: =Parent.Height - 10
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =5
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =5
        PaddingLeft: =5
        PaddingRight: =5
        PaddingTop: =5
        Width: =350
        X: =0 - Self.Width
        ZIndex: =16

        asyncCommentStreamUpdate As timer:
            AutoStart: =true
            Duration: =6500
            Height: =2
            OnTimerEnd: |
                =UpdateContext({checkComments: !checkComments});
            Repeat: =true
            Text: =Self.Value
            Visible: =false
            Width: =Parent.Width
            Y: =20
            ZIndex: =1

        DataSourceComponent As DataSource:
            AttachChangerGearServiceRequest: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, ID = ActionItem)
                        
                    },
                    
                    If(
                        IsEmpty(
                            Errors(col_checklistTasks,
                                Patch(col_checklistTasks, selectedTask,
                                    {
                                        isServiceRequestCompleted: true,
                                        serviceRequestNumber: Upper(ChangeGearServiceRequestNumber)
                                    }
                                )
                            )
                        ),
                        Notify("ChangeGear Service Request Patch", NotificationType.Success),
                        Notify("ChangeGear Service Request Patch", NotificationType.Error)
                    )
                )
            BuildChecklistTasks: |
                =Set(isBuildChecklistTasksRunning, true);
                With(
                    {
                        checklist: LookUp('OBOF-DS-checklistOutProcessing', ID = ChecklistID)
                    },
                
                    ClearCollect(col_ParsedJSON,
                        DropColumns(
                            AddColumns(
                                Table(ParseJSON(checklist.checklistJSON)),
                                "ID", Value(Value.ID),
                                "actionItem", Value(Value.actionItem),
                                "groupValue", Text(Value.groupValue),
                                "service", DropColumns(AddColumns(RenameColumns(Table(Value.service), "Value", "V"), "Value", Text(V.Value)), "V"),
                                "isSupervisorACB", If(Value(Value.isSupervisorACB) = 1, true, false),
                                "isDesigneeACB", If(Value(Value.isDesigneeACB) = 1, true, false),
                                "isEmployeeACB", If(Value(Value.isEmployeeACB) = 1, true, false),
                                "isMSOACB", If(Value(Value.isMSOACB) = 1, true, false),
                                "isNAACB", If(Value(Value.isNAACB) = 1, true, false),
                                "isClearingOffice", If(Value(Value.isClearingOffice) = 1, true, false),
                                "uid", Text(Value.uid),
                                "autoNotify", If(Value(Value.autoNotify) = 1, true, false),
                                "extendAttributes", If(Value(Value.extendAttributes) = 1, true, false),
                                "dueInDays", Value(Value.dueInDays),
                                "dueInDaysEval", {
                                        dueDate: With({taskDD: checklist.departureDate},
                                                    DateValue(If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                        DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                        If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays)+ (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                            DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days))))), 
                                        daysRemaining: With({taskDDMod: If(Weekday(DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                    DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                    If(Weekday(DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                        DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                            DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                                Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                    },
                                "mandatoryClearingOfficeACB", If(Value(Value.mandatoryClearingOfficeACB) = 1, true, false),
                                "notificationDetails", {
                                    isNotified: If(Value(Value.notificationDetails.isNotified) = 1, true, false),
                                    email: Text(Value.notificationDetails.email),
                                    timestamp: DateValue(Text(Value.notificationDetails.timestamp))
                                },
                                "createServiceRequest", If(Value(Value.createServiceRequest) = 1, true, false),
                                "isServiceRequestCompleted", If(Value(Value.isServiceRequestCompleted) = 1, true, false),
                                "serviceRequestNumber", Text(Value.serviceRequestNumber),
                                "urlServiceRequest", Text(Value.urlServiceRequest),
                                "signatureClearingOffice", {
                                        date: DateTimeValue(Text(Value.signatureClearingOffice.date)), 
                                        isComplete: Value(Value.signatureClearingOffice.isComplete), 
                                        signature: Text(Value.signatureClearingOffice.signature), 
                                        uid: Text(Value.signatureClearingOffice.uid)
                                    },
                                "signatureEmployee", {
                                        date: DateTimeValue(Text(Value.signatureEmployee.date)), 
                                        isComplete: Value(Value.signatureEmployee.isComplete), 
                                        signature: Text(Value.signatureEmployee.signature), 
                                        uid: Text(Value.signatureEmployee.uid)
                                    },
                                "signatureMSO", {
                                        date: DateTimeValue(Text(Value.signatureMSO.date)), 
                                        isComplete: Value(Value.signatureMSO.isComplete), 
                                        signature: Text(Value.signatureMSO.signature), 
                                        uid: Text(Value.signatureMSO.uid)
                                    },
                                "signatureDesignee", {
                                        date: DateTimeValue(Text(Value.signatureDesignee.date)), 
                                        isComplete: Value(Value.signatureDesignee.isComplete), 
                                        signature: Text(Value.signatureDesignee.signature), 
                                        uid: Text(Value.signatureDesignee.uid)
                                    },
                                "signatureSupervisor", {
                                        date: DateTimeValue(Text(Value.signatureSupervisor.date)), 
                                        isComplete: Value(Value.signatureSupervisor.isComplete), 
                                        signature: Text(Value.signatureSupervisor.signature), 
                                        uid: Text(Value.signatureSupervisor.uid)
                                    },
                                "signatureSupervisorDesignee", {
                                        date: DateTimeValue(Text(Value.signatureSupervisorDesignee.date)), 
                                        isComplete: Value(Value.signatureSupervisorDesignee.isComplete), 
                                        signature: Text(Value.signatureSupervisorDesignee.signature), 
                                        uid: Text(Value.signatureSupervisorDesignee.uid)
                                    },
                                "signatureNAACB", {
                                        date: DateTimeValue(Text(Value.signatureNAACB.date)), 
                                        isComplete: Value(Value.signatureNAACB.isComplete), 
                                        signature: Text(Value.signatureNAACB.signature), 
                                        uid: Text(Value.signatureNAACB.uid)
                                    },
                                "built", Now(),
                                "extendAttributesJSON", ForAll(Table(Value.extendAttributesJSON), {ID: Value(Value.ID), description: Text(Value.description), response: Text(Value.response), responded: If(Value(Value.responded) = 1, true, false)}),
                                "transactLog", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateTimeValue(Text(Value.timestamp))})
                                ),
                            "Value"
                        )
                    );
                    //"transactLog", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateValue(Text(Value.timestamp))})
                
                    // SET PRIMARY KEY AS [ID]
                    RenameColumns(Ungroup(col_ParsedJSON.extendAttributesJSON, "extendAttributesJSON"),"ID","ID");
                    // SET PRIMARY KEY AS [ID]
                    RenameColumns(Ungroup(col_ParsedJSON.transactLog, "transactLog"),"ID","ID");
                    
                    ClearCollect(col_checklistTasks,
                        RenameColumns(
                            AddColumns(
                                AddColumns(col_ParsedJSON,
                                    "taskCompletionTelemetry", Table(
                                        If(isClearingOffice, {Value: signatureClearingOffice.isComplete, t: "signatureClearingOffice"}, {Value: -1, t: "signatureClearingOffice"}),
                                        If(isEmployeeACB, {Value: signatureEmployee.isComplete, t: "signatureEmployee"}, {Value: -1, t: "signatureEmployee"}),
                                        If(isMSOACB, {Value: signatureMSO.isComplete, t: "signatureMSO"}, {Value: -1, t: "signatureMSO"}),
                                        If(isDesigneeACB && !isSupervisorACB, {Value: signatureDesignee.isComplete, t: "signatureDesignee"}, {Value: -1, t: "signatureDesignee"}),
                                        If(isSupervisorACB && !isDesigneeACB, {Value: signatureSupervisor.isComplete, t: "signatureSupervisor"}, {Value: -1, t: "signatureSupervisor"}),
                                        If(isSupervisorACB && isDesigneeACB, {Value: signatureSupervisorDesignee.isComplete, t: "signatureSupervisorDesignee"}, {Value: -1, t: "signatureSupervisorDesignee"})
                                    )
                                ),
                                "isCompleted", If(IsEmpty(Filter(col_ParsedJSON, 0 in taskCompletionTelemetry.Value)), true, false)
                            ),
                            "ID","ID"
                        )
                    )
                );
                
                // RESET ALL NEW CHECKLIST FIELDS WITHIN FORM
                Clear(col_ParsedJSON);
                Reset(toggle_DelegationNewChecklist);
                Reset(checkbox_DelegationAcknowledge);
                Reset(combobox_EmployeeName_3);
                Reset(combobox_Designee_3);
                Reset(combobox_Service_3);
                Reset(combobox_MilitaryServiceBranch_3);
                Reset(combobox_PayPlanGrade_3);
                Reset(combobox_Organization_3);
                Reset(input_OrganizationCode_3);
                Reset(input_OfficeLocation_3);
                Reset(combobox_State_3);
                Reset(input_City_3);
                Reset(combobox_OutprocessingStatus_3);
                Reset(datepicker_DepartureDate_3);
                Reset(input_NewEmployerName_3);
                Reset(input_NewEmployerAddress_3);
                Set(chkRecord, Blank());
                Set(sendNotificationSupervisorDesigneeScope, Blank());
                Set(runSendNotificationSupervisorDesignee, false);
                Set(runBuildChecklistTasks, false);
                If(!Delay,
                    Set(isBuildChecklistTasksRunning, false);
                );
            DelegationNewChecklist: |-
                =Notify($"Function DelegationNewChecklist is deprecated", NotificationType.Warning);
                /*
                // IF DELEGATED
                If(toggle_DelegationNewChecklist,
                    //If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                        Patch('OBOF-DS-userDelegation',
                            If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                                Defaults('OBOF-DS-userDelegation'),
                                LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)
                            ),
                            //Defaults('OBOF-DS-userDelegation'),
                            {
                                uid: combobox_EmployeeName_3.Selected.Id,
                                displayName: combobox_EmployeeName_3.Selected.DisplayName,
                                givenName: combobox_EmployeeName_3.Selected.GivenName,
                                surname: combobox_EmployeeName_3.Selected.Surname,
                                payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,
                                grade: Value(combobox_PayPlanGrade_3.Selected.g),
                                payPlan: combobox_PayPlanGrade_3.Selected.p,
                                service: combobox_Service_3,
                                militaryServiceBranch: combobox_MilitaryServiceBranch_3,
                                mail: combobox_EmployeeName_3.Selected.Mail,
                                accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,
                                jobTitle:combobox_EmployeeName_3.Selected.JobTitle,
                                streetAddress: Blank(),
                                city:combobox_EmployeeName_3.Selected.City,
                                postalCode: combobox_EmployeeName_3.Selected.PostalCode,
                                companyName: combobox_EmployeeName_3.Selected.CompanyName,
                                department: combobox_EmployeeName_3.Selected.Department,
                                organization: combobox_Organization_3.Selected,
                                organizationCode: input_OrganizationCode_3.Text,
                                isEmployee: true,
                                officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,
                                supervisor: {
                                    '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: Concatenate("i:0#.f|membership|", combobox_Supervisor_3.Selected.Mail),
                                    Department: combobox_Supervisor_3.Selected.Department,
                                    DisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                    Email: combobox_Supervisor_3.Selected.Mail,
                                    JobTitle: combobox_Supervisor_3.Selected.JobTitle,
                                    Picture: ""
                                },
                                supervisorUid: combobox_Supervisor_3.Selected.Id,
                                supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,
                                supervisorSurname: combobox_Supervisor_3.Selected.Surname,
                                supervisorEmail: combobox_Supervisor_3.Selected.Mail,
                                supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,
                                delegationUid: combobox_Designee_3.Selected.Id
                            }
                        )
                    //)
                );
                
                Reset(toggle_DelegationNewChecklist);
                Reset(checkbox_DelegationAcknowledge);
                Reset(combobox_EmployeeName_3);
                Reset(combobox_Designee_3);
                Reset(combobox_Service_3);
                Reset(combobox_MilitaryServiceBranch_3);
                Reset(combobox_PayPlanGrade_3);
                Reset(combobox_Organization_3);
                Reset(input_OrganizationCode_3);
                Reset(input_OfficeLocation_3);
                Reset(combobox_State_3);
                Reset(input_City_3);
                Reset(combobox_OutprocessingStatus_3);
                Reset(datepicker_DepartureDate_3_1);
                //Select(refreshChecklists);
                Set(isNewChecklistVisible, false);
                //Select(buildChecklistTasks);
                */
            DeletChecklist: |-
                =Remove('OBOF-DS-checklistOutProcessing',
                    LookUp('OBOF-DS-checklistOutProcessing', ID = ChecklistID)
                );
            EraseSignatureTask: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, ActionItem = ID)
                    },
                    If(!IsBlank(selectedTask),
                        /*If(
                            IsEmpty(
                                Errors(col_checklistTasks,*/
                                    Patch(col_checklistTasks,
                                        selectedTask,
                                        Switch(signatureType,
                                            "signatureDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: 0, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureSupervisor", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: 0, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisor: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureSupervisorDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: 0, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisorDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureEmployee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: 0, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureEmployee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureMSO", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: 0, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureMSO: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureClearingOffice", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: 0, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureClearingOffice: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureNAACB", {
                                                taskCompletionTelemetry: [
                                                    {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value), t: "signatureDesignee"},
                                                    {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value), t: "signatureSupervisor"},
                                                    {Value: If(selectedTask.isDesigneeACB || selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value), t: "signatureSupervisorDesignee"},
                                                    {Value: If(selectedTask.isEmployeeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value), t: "signatureEmployee"},
                                                    {Value: If(selectedTask.isMSOACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value), t: "signatureMSO"},
                                                    {Value: If(selectedTask.isClearingOffice, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value), t: "signatureClearingOffice"},
                                                    {Value: 0, t: "signatureNAACB"},
                                                ],
                                                signatureDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureSupervisor: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureSupervisorDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureEmployee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureMSO: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureClearingOffice: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureNAACB: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")}
                                                }
                                        )
                                    )
                                /*)
                            ),
                            
                            // REMOVED CODE BUT LEFT AS REFERENCE
                            //Select(updateChecklistJSON);
                            Set(signatureType, Blank());,
                            Notify("[col_checklistTasks] patch error", NotificationType.Error)
                        ),
                        Notify("[ERASE] ]Oh boy, this is super embarassing... we did not find a task UID associated with that signature. Not really sure what else to tell you right now expcet today is gonna be a great day!", NotificationType.Error)
                        */
                    )
                )
            Height: =2
            isChecklistComplete: |-
                =If({isCompleted: false} in col_checklistTasks.isCompleted,
                    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = "Completed", 
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                outprocessingState: {Value: "In Progress"},
                                outprocessingCompletedDate: Blank()
                            }
                        );
                        //Select(refreshChecklists);
                    );
                    Notify("Chekclist Not Completed", NotificationType.Warning),
                    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value <> "Completed",
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                outprocessingState: {Value: "Completed"},
                                outprocessingCompletedDate: Now()
                            }
                        );
                        //Select(refreshChecklists);
                    );
                    Notify("Checklist Completed", NotificationType.Success)
                );
            IWAMQueryDCID: |-
                =ClearCollect(_responseIWAMQueryDCID, 
                    DropColumns(
                        AddColumns(
                            PowerBI.ExecuteDatasetQuery("208885bd-ffb9-441b-8c9a-2106d426e81a", "d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9",
                                $"EVALUATE
                					CALCULATETABLE(
                						'IWAM USERS',
                						'IWAM USERS'[USERID] = ""{UserID}""
                					)"
                            ).firstTableRows,
                            "USERID", Text(ThisRecord.Value.'IWAM USERS[USERID]'),
                            "ACTIVE", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', "true", true, false),
                            "USR_LAST_NAME", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),
                            "USR_MIDDLE_INITIAL", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),
                            "DCMA_ORGANIZATION_LEVEL", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),
                            "DCMA_EMPLOYEE_TYPE", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),
                            "DCMA_JOB_SERIES", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),
                            "IS_SUPERVISOR", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),
                            "DCMA_EMAIL", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),
                            "TELEPHONE", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),
                            "USR_FULLNAME", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),
                            "DIRECT_SUPERVISOR", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),
                            "DCMA_SITE_ID", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),
                            "USR_FIRST_NAME", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')
                        ),
                        "Value"
                    )
                );
                ShowColumns(First(_responseIWAMQueryDCID),
                    "USERID",
                    "ACTIVE",
                    "USR_LAST_NAME",
                    "USR_MIDDLE_INITIAL",
                    "DCMA_ORGANIZATION_LEVEL",
                    "DCMA_EMPLOYEE_TYPE",
                    "DCMA_JOB_SERIES",
                    "IS_SUPERVISOR",
                    "DCMA_EMAIL",
                    "TELEPHONE",
                    "USR_FULLNAME",
                    "DIRECT_SUPERVISOR",
                    "DCMA_SITE_ID",
                    "USR_FIRST_NAME"
                )
            IWAMQueryEmail: |-
                =ClearCollect(_responseIWAMQueryEmail, 
                    DropColumns(
                        AddColumns(
                            PowerBI.ExecuteDatasetQuery("208885bd-ffb9-441b-8c9a-2106d426e81a", "d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9",
                                $"EVALUATE
                					CALCULATETABLE(
                						'IWAM USERS',
                						'IWAM USERS'[DCMA_EMAIL] = ""{Email}""
                					)"
                            ).firstTableRows,
                            "USERID", Text(ThisRecord.Value.'IWAM USERS[USERID]'),
                            "ACTIVE", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', "true", true, false),
                            "USR_LAST_NAME", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),
                            "USR_MIDDLE_INITIAL", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),
                            "DCMA_ORGANIZATION_LEVEL", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),
                            "DCMA_EMPLOYEE_TYPE", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),
                            "DCMA_JOB_SERIES", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),
                            "IS_SUPERVISOR", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),
                            "DCMA_EMAIL", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),
                            "TELEPHONE", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),
                            "USR_FULLNAME", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),
                            "DIRECT_SUPERVISOR", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),
                            "DCMA_SITE_ID", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),
                            "USR_FIRST_NAME", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')
                        ),
                        "Value"
                    )
                );
                ShowColumns(_responseIWAMQueryEmail,
                    "USERID",
                    "ACTIVE",
                    "USR_LAST_NAME",
                    "USR_MIDDLE_INITIAL",
                    "DCMA_ORGANIZATION_LEVEL",
                    "DCMA_EMPLOYEE_TYPE",
                    "DCMA_JOB_SERIES",
                    "IS_SUPERVISOR",
                    "DCMA_EMAIL",
                    "TELEPHONE",
                    "USR_FULLNAME",
                    "DIRECT_SUPERVISOR",
                    "DCMA_SITE_ID",
                    "USR_FIRST_NAME"
                )
            IWAMQueryOrganization: |-
                =Set(inputParameters, 
                    [
                        {ID: 1, Value: OrganizationCodeParent, OrganizationScope: "ORGANIZATIONS[Parent ORG Code]", IsUsed: If(!IsBlank(OrganizationCodeParent), true, false)},
                        {ID: 2, Value: OrganizationCode, OrganizationScope: "ORGANIZATIONS[ORG Code]", IsUsed: If(!IsBlank(OrganizationCode), true, false)},
                        {ID: 3, Value: OrganizationName, OrganizationScope: "ORGANIZATIONS[ORG_NAME]", IsUsed: If(!IsBlank(OrganizationName), true, false)}
                    ]
                );
                
                If(CountIf(inputParameters, IsUsed = true) > 1,
                    Notify("IWAM Query Organization: Unexpected input parameter.", NotificationType.Error),
                    Set(HasInput, LookUp(inputParameters, IsUsed = true).ID)
                );
                
                Switch(HasInput,
                    1, Set(p, {Value: OrganizationCodeParent, OrganizationScope: "ORGANIZATIONS[Parent ORG Code]"}),
                    2, Set(p, {Value: OrganizationCode, OrganizationScope: "ORGANIZATIONS[ORG Code]"}),
                    3, Set(p, {Value: OrganizationName, OrganizationScope: "ORGANIZATIONS[ORG_NAME]"}),
                    Set(p, {Value: OrganizationName, OrganizationScope: "ORGANIZATIONS[ORG_NAME]"})
                );
                
                ClearCollect(_responseIWAMQueryOrganization,
                    DropColumns(
                        AddColumns(
                            PowerBI.ExecuteDatasetQuery("208885bd-ffb9-441b-8c9a-2106d426e81a", "d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9",
                                $"EVALUATE
                                    CALCULATETABLE(
                                        ORGANIZATIONS,
                                        CONTAINSSTRING({p.OrganizationScope}, ""{p.Value}"")
                                    )
                                ORDER BY ORGANIZATIONS[ORG_NAME]"
                            ).firstTableRows,
                            "ENTITY_CODE", Text(ThisRecord.Value.'ORGANIZATIONS[ENTITY_CODE]'),
                            "LVL", Value(ThisRecord.Value.'ORGANIZATIONS[LVL]'),
                            "ORG Code", Text(ThisRecord.Value.'ORGANIZATIONS[ORG Code]'),
                            "ORG_ID", Value(ThisRecord.Value.'ORGANIZATIONS[ORG_ID]'),
                            "ORG_NAME", Text(ThisRecord.Value.'ORGANIZATIONS[ORG_NAME]'),
                            "ORG_TYPE", Text(ThisRecord.Value.'ORGANIZATIONS[ORG_TYPE]'),
                            "Parent ORG Code", Text(ThisRecord.Value.'ORGANIZATIONS[Parent ORG Code]'),
                            "Parent ORG ID", Value(ThisRecord.Value.'ORGANIZATIONS[Parent ORG ID]'),
                            "REPORT_PARENT_ID", Value(ThisRecord.Value.'ORGANIZATIONS[REPORT_PARENT_ID]')
                        ),
                        "Value"
                    )
                );
                
                ShowColumns(_responseIWAMQueryOrganization,
                    "ENTITY_CODE",
                    "LVL",
                    "ORG Code",
                    "ORG_ID",
                    "ORG_NAME",
                    "ORG_TYPE",
                    "Parent ORG Code",
                    "Parent ORG ID",
                    "REPORT_PARENT_ID"
                )
            LayoutMinHeight: =640
            LayoutMinWidth: =640
            NewChcklist: |-
                =With(
                    {
                        varDateMod: If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                            If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                    DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)))
                    },
                
                    /*
                    // REMOVED THIS CODE BUT LEFT AS REFERENCE
                    UpdateContext(
                        {
                            numBusinessDays: 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)
                        }
                    );
                    */
                
                    Set(numBusinessDaysNewChecklist, 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0));
                
                    If(
                        // BEGIN LOGICAL TEST
                        IsBlank(combobox_EmployeeName_3.Selected.Mail) ||
                        IsBlank(combobox_Supervisor_3.Selected.Mail) ||
                        IsBlank(combobox_Designee_3.Selected.Mail) ||
                        IsBlank(combobox_Organization_3.Selected.ORG_NAME) ||
                        IsBlank(input_OrganizationCode_3.Text) ||
                        IsBlank(combobox_Service_3.Selected.Value) ||
                        If(combobox_Service_3.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_3.Selected.Value), true, false) ||
                        IsBlank(combobox_PayPlanGrade_3.Selected.v) ||
                        IsBlank(combobox_OutprocessingStatus_3.Selected.Value) ||
                        IsBlank(datepicker_DepartureDate_3.SelectedDate) ||
                        If(combobox_EmployeeName_3.Selected.Id = combobox_Designee_3.Selected.Id, true, false) ||
                        If(combobox_EmployeeName_3.Selected.Id = combobox_Supervisor_3.Selected.Id, true, false) ||
                        If(("Transfer" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerName_3.Text) || ("Transfer" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerAddress_3.Text))), true, false),
                        // END LOGICAL TEST
                
                        // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST
                        Set(popupScope, "popup_main_newChecklistPatch");
                        Set(isMainPopupVisible, true);
                        false,
                        // END TRUE RESULT - LOGICAL TEST
                
                        // BUILD JSON SCHEMA FOR CHECKLIST TASKS
                        Set(isBuildChecklistTasksRunning, true);
                        With(
                            { 
                                newChecklistObj: {
                                    employeeName: combobox_EmployeeName_3.Selected,
                                    designee: combobox_Designee_3.Selected,
                                    supervisor: combobox_Supervisor_3.Selected,
                                    outprocessingStatus: combobox_OutprocessingStatus_3.Selected,
                                    departureDate: datepicker_DepartureDate_3.SelectedDate
                                },
                                
                                tasksChecklistObj: JSON(
                                    ForAll(
                                        If(!toggle_DelegationNewChecklist.Value, // LOGIC FOR NON-DELEGATED
                                            // NON-DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                            Filter(col_templateChecklistOutprocessing, active = true && First(currentUser).service.Value in Ungroup(service, "Value").Value),
                                            // DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                            Filter(col_templateChecklistOutprocessing, active = true && combobox_Service_3.Selected.Value in Ungroup(service, "Value").Value)
                                        ),
                                        {
                                            ID: actionItem,
                                            actionItem: actionItem,
                                            groupValue: groupValue,
                                            service: service,
                                            isSupervisorACB: isSupervisorACB,
                                            isDesigneeACB: isDesigneeACB,
                                            isEmployeeACB: isEmployeeACB,
                                            isMSOACB: isMSOACB,
                                            isNAACB: isNAACB,
                                            isClearingOffice: isClearingOffice,
                                            uid: uid,
                                            autoNotify: autoNotify,
                                            mandatoryClearingOfficeACB: mandatoryClearingOfficeACB,
                                            notificationDetails: {isNotified: false, email: Text(""), timestamp: Date(1970, 1, 1)},
                                            dueInDays: dueInDays,
                                            dueInDaysEval: {
                                                dueDate: With({taskDD: datepicker_DepartureDate_3.SelectedDate},
                                                        DateValue(If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                            DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                            If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                                DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                    DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days))))),
                                                daysRemaining: With({taskDDMod: 
                                                    If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                        DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                        If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                                    Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                            },
                                            createServiceRequest: createServiceRequest,
                                            isServiceRequestCompleted: false,
                                            serviceRequestNumber: Text(""),
                                            urlServiceRequest: urlServiceRequest,
                                            transactLog: [
                                                {
                                                    log: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: New Checklist];[DELEGATED: " & Upper(toggle_DelegationNewChecklist.Value) & "];New checklist task added for " & combobox_EmployeeName_3.Selected.Surname & ", " &combobox_EmployeeName_3.Selected.GivenName & " in group " & groupValue),
                                                    timestamp: Text(Now(), "mm/dd/yyyy hh:mm:ss"),
                                                    ID: 1
                                                }
                                            ],
                                            extendAttributes: extendAttributes,
                                            extendAttributesJSON: ForAll(Table(ParseJSON(extendAttributesJSON)), 
                                                    {
                                                        ID: Value(ThisRecord.Value.ID), 
                                                        description: Text(ThisRecord.Value.description), 
                                                        response: Text(ThisRecord.Value.response), 
                                                        responded: Value(If(Value(ThisRecord.Value.responded) = 0, false, true))
                                                    }
                                                ),
                                            taskCompletionTelemetry: Table(
                                                    If(isClearingOffice, {Value: 0, t: "signatureClearingOffice"}, {Value: -1, t: "signatureClearingOffice"}),
                                                    If(isEmployeeACB, {Value: 0, t: "signatureEmployee"}, {Value: -1, t: "signatureEmployee"}),
                                                    If(isMSOACB, {Value: 0, t: "signatureMSO"}, {Value: -1, t: "signatureMSO"}),
                                                    If(isDesigneeACB && !isSupervisorACB, {Value: 0, t: "signatureDesignee"}, {Value: -1, t: "signatureDesignee"}),
                                                    If(isSupervisorACB && !isDesigneeACB, {Value: 0, t: "signatureSupervisor"}, {Value: -1, t: "signatureSupervisor"}),
                                                    If(isSupervisorACB && isDesigneeACB, {Value: 0, t: "signatureSupervisorDesignee"}, {Value: -1, t: "signatureSupervisorDesignee"})
                                                ),
                                            signatureSupervisor: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid:Text("")},
                                            signatureEmployee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureSupervisorDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureMSO: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureClearingOffice: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureNAACB: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")}
                                        }
                                    )
                                )
                            },
                            // END JSON SCHEMA FOR CHECKLIST TASKS
                
                            // CREATE USER PROFILE IF DELEGATION IS TRUE
                            If(toggle_DelegationNewChecklist.Value, 
                                Patch('OBOF-DS-userDelegation',
                                    If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                                        Defaults('OBOF-DS-userDelegation'),
                                        LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)
                                    ),
                                    {
                                        uid: combobox_EmployeeName_3.Selected.Id,
                                        displayName: combobox_EmployeeName_3.Selected.DisplayName,
                                        givenName: combobox_EmployeeName_3.Selected.GivenName,
                                        surname: combobox_EmployeeName_3.Selected.Surname,
                                        payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,
                                        grade: Value(combobox_PayPlanGrade_3.Selected.g),
                                        payPlan: combobox_PayPlanGrade_3.Selected.p,
                                        service: combobox_Service_3.Selected,
                                        militaryServiceBranch: combobox_MilitaryServiceBranch_3.Selected,
                                        mail: combobox_EmployeeName_3.Selected.Mail,
                                        accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,
                                        jobTitle:combobox_EmployeeName_3.Selected.JobTitle,
                                        streetAddress: Blank(), //VALUE NOT USED IN DATA
                                        city:combobox_EmployeeName_3.Selected.City,
                                        postalCode: combobox_EmployeeName_3.Selected.PostalCode,
                                        companyName: combobox_EmployeeName_3.Selected.CompanyName,
                                        department: combobox_EmployeeName_3.Selected.Department,
                                        //organization: combobox_Organization_3.Selected,
                                        organization_v2: combobox_Organization_3.Selected.ORG_NAME,
                                        organizationId: combobox_Organization_3.Selected.ORG_ID,
                                        organizationCode: input_OrganizationCode_3.Text,
                                        isEmployee: true,
                                        officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,
                                        supervisor: {
                                            '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                            Claims: Concatenate("i:0#.f|membership|", combobox_Supervisor_3.Selected.Mail),
                                            Department: combobox_Supervisor_3.Selected.Department,
                                            DisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                            Email: combobox_Supervisor_3.Selected.Mail,
                                            JobTitle: combobox_Supervisor_3.Selected.JobTitle,
                                            Picture: ""
                                        },
                                        supervisorUid: combobox_Supervisor_3.Selected.Id,
                                        supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                        supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,
                                        supervisorSurname: combobox_Supervisor_3.Selected.Surname,
                                        supervisorEmail: combobox_Supervisor_3.Selected.Mail,
                                        supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,
                                        delegationUid: combobox_Designee_3.Selected.Id
                                    }
                                );
                                ClearCollect(delegatedUser, 'OBOF-DS-userDelegation');
                            );
                            // END CREATE USER PROFILE IF DELEGATION IS TRUE
                
                            // CREATE EMPLOYEE OUT-PROCESSING CHECKLIST
                            Set(chkRecord,
                                Patch('OBOF-DS-checklistOutProcessing',
                                    Defaults('OBOF-DS-checklistOutProcessing'),
                                    {
                                        uidUser: newChecklistObj.employeeName.Id,
                                        uidDesignee: newChecklistObj.designee.Id,
                                        uidSupervisor: newChecklistObj.supervisor.Id,
                                        checklistStatus: newChecklistObj.outprocessingStatus,
                                        departureDate: newChecklistObj.departureDate,
                                        outprocessingState: {Value: "In Progress"},
                                        isDelegated: If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, true, false),
                                        newEmployerAgency: input_NewEmployerName_3.Text,
                                        newEmployerAgencyAddress: input_NewEmployerAddress_3.Text,
                                        checklistJSON: tasksChecklistObj
                                    }
                                )
                            );
                            // END CREATE EMPLOYEE OUT-PROCESSING CHECKLIST
                        );
                        
                        Set(isNewChecklistVisible, false);
                        true        
                    );
                    
                )
            RecordTransactLog: |+
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                    },
                    With(
                        {
                            transactions: selectedTask.transactLog,
                            actionItem: gallery_checklistTasks.Selected.actionItem,
                            groupValue: gallery_checklistTasks.Selected.groupValue,
                            isDelegated: gallery_checklists.Selected.isDelegated,
                            currentUserName: First(currentUser).surname & ", " & First(currentUser).givenName,
                            delegatedUserName: First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname & ", " & First(Ungroup(gallery_checklists.Selected.employee, "surname")).givenName
                        },
                        
                            ClearCollect(ta, transactions);
                
                            Switch(LogType,
                            
                                "addSignature", 
                                    Set(log,
                                        {
                                            logObj: 
                                                {
                                                    logID: Value(Value(Last(ta).ID) + 1),
                                                    logMsg: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: Add Signature];[DELEGATED: " & Upper(isDelegated) & "];Action Completed By: " & If(isDelegated, currentUserName & " on behalf of employee " & delegatedUserName, currentUserName) & " in group " & groupValue) & ".",
                                                    logTimestamp: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime))
                                                }
                                        }
                                    ),
                
                                "removeSignature", 
                                    Set(log,
                                        {
                                            logObj: 
                                                {
                                                    logID: Value(Value(Last(ta).ID) + 1),
                                                    logMsg: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: Remove Signature];[DELEGATED: " & Upper(isDelegated) & "];Action Reversed By: " & If(isDelegated, currentUserName & " on behalf of employee " & delegatedUserName, currentUserName) & " in group " & groupValue) & ".",
                                                    logTimestamp: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime))
                                                }
                                        }
                                    )
                
                            );
                            
                            Patch(ta,
                                Defaults(ta), 
                                {
                                    ID: log.logObj.logID,
                                    log: log.logObj.logMsg,
                                    timestamp: log.logObj.logTimestamp
                                }
                            );
                
                            Patch(col_checklistTasks,
                                selectedTask,
                                {
                                    transactLog: ta
                                }
                            );
                            Clear(ta);
                        );
                    /*
                    // REMOVE CODE BUT LEFT FOR REFERENCE
                    Switch(transactLogScope,
                        "addSignature",
                            Select(signatureTask),
                        "removeSignature",
                            Select(eraseSignatureTask),
                        "updateChecklist",
                            Select(updateChecklistAttributes);
                    );
                    */
                );
                
            Refresh: |-
                =Set(isBuildChecklistTasksRunning, true);
                //Set(defaultGalleryCheklistItem, gallery_checklists.Selected);
                
                // COLLECTION CHECKLIST TEMPLATES
                Refresh('OBOF-DS-appSettings');
                Refresh('OBOF-DS-userDelegation');
                Refresh('GLBL-DS-userRegistration');
                Refresh('OBOF-DS-checklistOutProcessing');
                Refresh('OBOF-DS-templateOutProcessingChecklist');
                Refresh('OBOF-DS-templateOutProcessingChecklistLocalTask');
                
                ClearCollect(col_organizations, DataSourceComponent.IWAMQueryOrganization("","",""));
                ClearCollect(col_IWAMUserInfo, DataSourceComponent.IWAMQueryEmail(User().Email));
                ClearCollect(col_IWAMSupervisor, DataSourceComponent.IWAMQueryDCID(First(col_IWAMUserInfo).DIRECT_SUPERVISOR));
                ClearCollect(col_IWAMUser,
                    AddColumns(
                        col_IWAMUserInfo,
                        "super_USERID", First(col_IWAMSupervisor).USERID,
                        "super_ACTIVE", First(col_IWAMSupervisor).ACTIVE,
                        "super_USR_LAST_NAME", First(col_IWAMSupervisor).USR_LAST_NAME,
                        "super_USR_MIDDLE_INITIAL", First(col_IWAMSupervisor).USR_MIDDLE_INITIAL,
                        "super_USR_FIRST_NAME", First(col_IWAMSupervisor).USR_FIRST_NAME,
                        "super_DCMA_ORGANIZATION_LEVEL", First(col_IWAMSupervisor).DCMA_ORGANIZATION_LEVEL,
                        "super_DCMA_EMPLOYEE_TYPE", First(col_IWAMSupervisor).DCMA_EMPLOYEE_TYPE,
                        "super_DCMA_JOB_SERIES", First(col_IWAMSupervisor).DCMA_JOB_SERIES,
                        "super_IS_SUPERVISOR", First(col_IWAMSupervisor).IS_SUPERVISOR,
                        "super_DCMA_EMAIL", First(col_IWAMSupervisor).DCMA_EMAIL,
                        "super_TELEPHONE", First(col_IWAMSupervisor).TELEPHONE,
                        "super_USR_FULLNAME", First(col_IWAMSupervisor).USR_FULLNAME,
                        "super_DIRECT_SUPERVISOR", First(col_IWAMSupervisor).DIRECT_SUPERVISOR,
                        "super_DCMA_SITE_ID", First(col_IWAMSupervisor).DCMA_SITE_ID
                    )
                );
                
                //Refresh(gallery_checklists);
                
                ClearCollect(col_templateChecklistOutprocessing, SortByColumns('OBOF-DS-templateOutProcessingChecklist', "actionItem", SortOrder.Ascending));
                ClearCollect(col_templateChecklistOutprocessingLocalTask, SortByColumns('OBOF-DS-templateOutProcessingChecklistLocalTask', "actionItem", SortOrder.Ascending));
                
                With(
                    {
                        obj_currentUserV2: Table(LookUp('GLBL-DS-userRegistration', uid = Office365Users.MyProfileV2().id))
                    },
                    ClearCollect(currentUser,
                        AddColumns(
                            obj_currentUserV2,
                            "isTFManager", !IsBlank(LookUp(memberOf, id in _TFManager.role).id),
                            "isTFProgramManager", !IsBlank(LookUp(memberOf, id in _TFProgramManager.role).id),
                            "isEmployee", !IsBlank(LookUp(memberOf, id in _Employee.role).id),
                            "isSupervisor", !IsBlank(LookUp(memberOf, id in _Supervisor.role).id),
                            "isMSO", !IsBlank(LookUp(memberOf, id in _MSO.role).id),
                            "isClearingOffice", !IsBlank(LookUp(memberOf, id in _ClearingOffice.role).id)
                        )
                    )
                );
                
                With(
                    {
                        outprocessingChecklistItems: ShowColumns(
                            Filter('OBOF-DS-checklistOutProcessing',outprocessingState.Value = GlobalFilter),
                            "ID",
                            "uidUser",
                            "uidDesignee",
                            "uidSupervisor",
                            "checklistStatus",
                            "departureDate",
                            "outprocessingState",
                            "outprocessingCompletedDate",
                            "isDelegated",
                            "Created",
                            "newEmployerAgency",
                            "newEmployerAgencyAddress"
                        ) // SELECT COLUMNS
                    },
                    With(
                        {
                            // AGGREGATE ALL FOREIGN TABLES INTO A SINGLE OBJECT
                            outprocessingChecklistItemsAggregation: AddColumns(
                                outprocessingChecklistItems,
                
                                // IDENTIFY IF EMPLOYEE CHECKLIST IS DELEGATED -->> AGGREGATE DATA ON EMPLOYEE
                                // IF isDelegate
                                "employee", If(isDelegated, 
                                    ShowColumns(Table(LookUp('OBOF-DS-userDelegation' As ud, uidUser = ud.uid)), 
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization_v2","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"), 
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidUser = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization_v2","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch")), // END IF isDelegate | employee
                                
                                // AGGREGATE DATA ON DESIGNEE
                                "designee", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid).uid),
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization_v2","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"),
                                    With(
                                        {
                                            graphApiResponseDesignee: Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/{uidDesignee}", "GET", "")
                                        },
                                        [
                                            {
                                                uid: Text(graphApiResponseDesignee.id),
                                                displayName: Text(graphApiResponseDesignee.displayName),
                                                givenName: Text(graphApiResponseDesignee.givenName),
                                                surname: Text(graphApiResponseDesignee.surname),
                                                jobTitle: Text(graphApiResponseDesignee.jobTitle),
                                                mail: Text(graphApiResponseDesignee.mail),
                                                organization: "",
                                                organizationCode: "",
                                                payPlan_Grade: "",
                                                payPlan: "",
                                                grade: "",
                                                department: "",
                                                service: [{Value: ""}],
                                                militaryServiceBranch: ""
                                            }
                                        ]
                                    )
                                ),
                                
                                // AGGREGATE DATA ON SUPERVISOR
                                "supervisor", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid).uid),
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization_v2","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"),
                                    With(
                                        {
                                            graphApiResponseSupervisor: Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/{uidSupervisor}", "GET", "")
                                        },
                                        [
                                            {
                                                uid: Text(graphApiResponseSupervisor.id),
                                                displayName: Text(graphApiResponseSupervisor.displayName),
                                                givenName: Text(graphApiResponseSupervisor.givenName),
                                                surname: Text(graphApiResponseSupervisor.surname),
                                                jobTitle: Text(graphApiResponseSupervisor.jobTitle),
                                                mail: Text(graphApiResponseSupervisor.mail),
                                                organization: "",
                                                organizationCode: "",
                                                payPlan_Grade: "",
                                                payPlan: "",
                                                grade: "",
                                                department: "",
                                                service: [{Value: ""}],
                                                militaryServiceBranch: ""
                                            }
                                        ]
                                    )
                                )
                            )
                        },
                
                        Set(des, Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/35573b91-3205-4a0a-9e69-771b4d67260f", "GET", "",{ContentType: "application/json;odata=nometadata"}));
                        
                        // BUILD COLLECTION FROM FOREIGN TABLE AGGREGATE
                        ClearCollect(col_outprocessingChecklistItems, outprocessingChecklistItemsAggregation);
                    )
                );
                If(!Delay,
                    Set(isBuildChecklistTasksRunning, false);,
                    true
                );
                If(IsEmpty(col_outprocessingChecklistItems), Set(showGalleryLabels, true), Set(showGalleryLabels, false));
            SendNotificationSupervisorDesignee: |
                =With(
                    {
                        notificationAttributes: {
                            departingEmployee: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_EmployeeName_4.Selected, combobox_EmployeeName_3.Selected),
                            supervisor: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Supervisor_4.Selected, combobox_Supervisor_3.Selected),
                            designee: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Designee_4.Selected, combobox_Designee_3.Selected),
                            checklistID: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", gallery_checklists.Selected.ID, chkRecord.ID),
                            departureDate: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", datepicker_DepartureDate_4.SelectedDate,chkRecord.departureDate),
                            organization: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Organization_4.Selected.ORG_NAME, combobox_Organization_3.Selected.ORG_NAME),
                            organizationCode: If(NotificationSupervisorDesigneeScope = "updateChecklistAttributes", input_OrganizationCode_4.Text, input_OrganizationCode_3.Text)
                        }
                    },
                    
                    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && !(notificationAttributes.designee.Id = First(currentUser).uid),
                        Set(receivers, notificationAttributes.designee.Mail)
                    );
                    If(!(notificationAttributes.supervisor.Id = First(currentUser).uid) && notificationAttributes.designee.Id = First(currentUser).uid,
                        Set(receivers, notificationAttributes.supervisor.Mail)
                    );
                    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && (notificationAttributes.designee.Id = First(currentUser).uid),
                        Set(receivers, Blank())
                    );
                    If((First(currentUser).uid <> notificationAttributes.supervisor.Id) && (First(currentUser).uid <> notificationAttributes.designee.Id),
                        Set(receivers, notificationAttributes.supervisor.Mail)
                    );
                
                    If(!IsBlank(receivers),
                        'OBOF-SendNotification-SupervisorDesignee'.Run(
                            {
                                text: receivers,
                                text_1: notificationAttributes.departingEmployee.DisplayName,
                                text_2: notificationAttributes.supervisor.DisplayName,
                                text_3: notificationAttributes.designee.DisplayName,
                                text_4: notificationAttributes.checklistID,
                                text_5: notificationAttributes.departureDate,
                                text_6: notificationAttributes.organization,
                                text_7: notificationAttributes.organizationCode,
                                text_8: appMetadata.appEnviornment.Value,
                                text_9: appMetadata.appUrl
                            }
                        )
                    )
                );
            SignatureTask: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, ActionItem = ID),
                        returnCode: Table({})
                    },
                
                    Set(isComplete, false);
                    Switch(SignatureType,
                        "signatureDesignee", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureDesignee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureDesignee.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureSupervisor", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureSupervisor] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureSupervisor.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureSupervisorDesignee", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureSupervisorDesignee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureSupervisorDesignee.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureEmployee", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureEmployee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureEmployee.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureMSO", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureMSO] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureMSO.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureClearingOffice", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureClearingOffice] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureClearingOffice.signature}", NotificationType.Warning),
                            ""
                        ),
                        "signatureNAACB", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 1,
                            Collect(returnCode, Defaults(returnCode), {code: 409});
                            Set(isComplete, true);
                            Notify($"[signatureNAACB] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureNAACB.signature}", NotificationType.Warning),
                            If(
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 1 ||
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 1 ||
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 1 ||
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 1 ||
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 1 ||
                                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 1,
                                Set(isComplete, true);
                                Notify($"[signatureNAACB] CODE|409 Object Security:  Task previously accomplished.", NotificationType.Warning)
                            )
                        )
                    );
                
                    If(!IsBlank(selectedTask) && !isComplete,
                        Patch(col_checklistTasks,
                            selectedTask,
                            Switch(SignatureType,
                                "signatureDesignee", {
                                    taskCompletionTelemetry: [
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0, 
                                            {Value: 1, t: "signatureDesignee"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureDesignee:
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureDesignee.date, 
                                                isComplete: selectedTask.signatureDesignee.isComplete, 
                                                signature: selectedTask.signatureDesignee.signature,
                                                uid: selectedTask.signatureDesignee.uid
                                            }
                                        )
                                    },
                                "signatureSupervisor", {
                                    taskCompletionTelemetry: [
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0, 
                                            {Value: 1, t: "signatureSupervisor"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureSupervisor: 
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureSupervisor.date, 
                                                isComplete: selectedTask.signatureSupervisor.isComplete, 
                                                signature: selectedTask.signatureSupervisor.signature,
                                                uid: selectedTask.signatureSupervisor.uid
                                            }
                                        )
                                    },
                                "signatureSupervisorDesignee", {
                                    taskCompletionTelemetry: [
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0, 
                                            {Value: 1, t: "signatureSupervisorDesignee"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureSupervisorDesignee:
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureSupervisorDesignee.date, 
                                                isComplete: selectedTask.signatureSupervisorDesignee.isComplete, 
                                                signature: selectedTask.signatureSupervisorDesignee.signature,
                                                uid: selectedTask.signatureSupervisorDesignee.uid
                                            }
                                        )
                                    },
                                "signatureEmployee", {
                                    taskCompletionTelemetry: [
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0, 
                                            {Value: 1, t: "signatureEmployee"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureEmployee:
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureEmployee.date, 
                                                isComplete: selectedTask.signatureEmployee.isComplete, 
                                                signature: selectedTask.signatureEmployee.signature,
                                                uid: selectedTask.signatureEmployee.uid
                                            }
                                        )
                                    },
                                "signatureMSO", {
                                    taskCompletionTelemetry: [
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0, 
                                            {Value: 1, t: "signatureMSO"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureMSO:
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureMSO.date, 
                                                isComplete: selectedTask.signatureMSO.isComplete, 
                                                signature: selectedTask.signatureMSO.signature,
                                                uid: selectedTask.signatureMSO.uid
                                            }
                                        )
                                    },
                                "signatureClearingOffice", {
                                    taskCompletionTelemetry: [
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0, 
                                            {Value: 1, t: "signatureClearingOffice"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"}
                                        ),
                                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                    ],
                                    signatureClearingOffice:
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0,
                                            {
                                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), 
                                                isComplete: 1, 
                                                signature: First(currentUser).displayName, 
                                                uid: First(currentUser).uid
                                            },
                                            {
                                                date: selectedTask.signatureClearingOffice.date, 
                                                isComplete: selectedTask.signatureClearingOffice.isComplete, 
                                                signature: selectedTask.signatureClearingOffice.signature,
                                                uid: selectedTask.signatureClearingOffice.uid
                                            }
                                        )
                                    },
                                "signatureNAACB", {
                                    taskCompletionTelemetry: [
                                        {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value), t: "signatureDesignee"},
                                        {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value), t: "signatureSupervisor"},
                                        {Value: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value), t: "signatureSupervisorDesignee"},
                                        {Value: If(selectedTask.isEmployeeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value), t: "signatureEmployee"},
                                        {Value: If(selectedTask.isMSOACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value), t: "signatureMSO"},
                                        {Value: If(selectedTask.isClearingOffice, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value), t: "signatureClearingOffice"},
                                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 0, 
                                            {Value: 1, t: "signatureNAACB"},
                                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                        ),
                                    ],
                                    signatureDesignee: {
                                        date: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureDesignee.date),
                                        isComplete: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, selectedTask.signatureDesignee.isComplete), 
                                        signature: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(""), selectedTask.signatureDesignee.signature), 
                                        uid: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(""), selectedTask.signatureDesignee.uid)},
                                    signatureSupervisor: {
                                        date: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisor.date),
                                        isComplete: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisor.isComplete), 
                                        signature: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisor.signature), 
                                        uid: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisor.uid)},
                                    signatureSupervisorDesignee: {
                                        date: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisorDesignee.date),
                                        isComplete: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisorDesignee.isComplete), 
                                        signature: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisorDesignee.signature), 
                                        uid: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisorDesignee.uid)},
                                    signatureEmployee: {
                                        date: If(selectedTask.isEmployeeACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureEmployee.date),
                                        isComplete: If(selectedTask.isEmployeeACB, 1, selectedTask.signatureEmployee.isComplete), 
                                        signature: If(selectedTask.isEmployeeACB, Text(""), selectedTask.signatureEmployee.signature), 
                                        uid: If(selectedTask.isEmployeeACB, Text(""), selectedTask.signatureEmployee.uid)},
                                    signatureMSO: {
                                        date: If(selectedTask.isMSOACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureMSO.date),
                                        isComplete: If(selectedTask.isMSOACB, 1, selectedTask.signatureMSO.isComplete), 
                                        signature: If(selectedTask.isMSOACB, Text(""), selectedTask.signatureMSO.signature), 
                                        uid: If(selectedTask.isMSOACB, Text(""), selectedTask.signatureMSO.uid)},
                                    signatureClearingOffice: {
                                        date: If(selectedTask.isClearingOffice, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureClearingOffice.date),
                                        isComplete: If(selectedTask.isClearingOffice, 1, selectedTask.signatureClearingOffice.isComplete), 
                                        signature: If(selectedTask.isClearingOffice, Text(""), selectedTask.signatureClearingOffice.signature), 
                                        uid: If(selectedTask.isClearingOffice, Text(""), selectedTask.signatureClearingOffice.uid)},
                                    signatureNAACB: {
                                        date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                    }
                            )
                        )
                    );
                
                    //returnCode
                
                )
            UpdateChecklistAttributes: |-
                =If(!IsBlank(CurrentGalleryID), Set(currentGalleryID, CurrentGalleryID));
                If(
                    // BEGIN LOGICAL TEST
                    IsBlank(combobox_EmployeeName_4.Selected.Mail) ||
                    IsBlank(combobox_Supervisor_4.Selected.Id) ||
                    IsBlank(combobox_Designee_4.Selected.Id) ||
                    IsBlank(combobox_Organization_4.Selected.ORG_NAME) ||
                    IsBlank(input_OrganizationCode_4.Text) ||
                    IsBlank(combobox_Service_4.Selected.Value) ||
                    If(combobox_Service_4.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_4.Selected.Value), true, false) ||
                    IsBlank(combobox_PayPlanGrade_4.Selected.v) ||
                    IsBlank(combobox_OutprocessingStatus_4.Selected.Value) ||
                    IsBlank(datepicker_DepartureDate_4.SelectedDate) ||
                    If(combobox_EmployeeName_4.Selected.Id = combobox_Designee_4.Selected.Id, true, false) ||
                    If(combobox_EmployeeName_4.Selected.Id = combobox_Supervisor_4.Selected.Id, true, false) ||
                    If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value && (IsBlank(input_NewEmployerName_4.Text && IsBlank(input_NewEmployerAddress_4.Text))), true, false),
                    // END LOGICAL TEST
                
                    // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST
                    Set(popupScope, "popup_main_updateChecklistAttributesPatch");
                    Set(isMainPopupVisible, true),
                    // END TRUE RESULT - LOGICAL TEST
                
                    With(
                        {
                            checklistAttributes: {
                                supervisor: combobox_Supervisor_4.Selected,
                                designee: combobox_Designee_4.Selected,
                                organization: combobox_Organization_4.Selected,
                                organizationCode: input_OrganizationCode_4.Text,
                                service: combobox_Service_4.Selected,
                                militaryServiceBranch: combobox_MilitaryServiceBranch_4.Selected,
                                payplanGrade: combobox_PayPlanGrade_4.Selected,
                                officeLocation: input_OfficeLocation_4.Text,
                                city: input_City_4.Text,
                                outProcessingStatus: combobox_OutprocessingStatus_4.Selected,
                                departureDate: datepicker_DepartureDate_4.SelectedDate,
                                newEmployerAgency: input_NewEmployerName_4.Text,
                                newEmployerAddress: input_NewEmployerAddress_4.Text
                            },
                            selectedChecklistUser: If(gallery_checklists.Selected.isDelegated, LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser), LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser)),
                            selectedChecklist: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)
                        },
                
                        If(gallery_checklists.Selected.isDelegated,
                            Set(recentlyPatchedUser,
                                Patch('OBOF-DS-userDelegation',
                                    selectedChecklistUser,
                                    {
                                        militaryServiceBranch: checklistAttributes.militaryServiceBranch,
                                        service: checklistAttributes.service,
                                        payPlan_Grade: checklistAttributes.payplanGrade.v,
                                        grade: checklistAttributes.payplanGrade.g,
                                        payPlan: checklistAttributes.payplanGrade.p,
                                        organization_v2: checklistAttributes.organization.ORG_NAME,
                                        organizationCode: checklistAttributes.organizationCode,
                                        officeLocation: checklistAttributes.officeLocation,
                                        city: checklistAttributes.city,
                                        delegationUid: checklistAttributes.designee.Id,
                                        supervisor: {
                                            '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                            Claims: Concatenate("i:0#.f|membership|", checklistAttributes.supervisor.Mail),
                                            Department: checklistAttributes.supervisor.Department,
                                            DisplayName: checklistAttributes.supervisor.DisplayName,
                                            Email: checklistAttributes.supervisor.Mail,
                                            JobTitle: checklistAttributes.supervisor.JobTitle,
                                            Picture: ""
                                        },
                                        supervisorDisplayName: checklistAttributes.supervisor.DisplayName,
                                        supervisorEmail: checklistAttributes.supervisor.Mail,
                                        supervisorGivenName: checklistAttributes.supervisor.GivenName,
                                        supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,
                                        supervisorSurname: checklistAttributes.supervisor.Surname,
                                        supervisorUid: checklistAttributes.supervisor.Id
                                    }
                                )
                            ),
                            Set(recentlyPatchedUser,
                                Patch('GLBL-DS-userRegistration',
                                    selectedChecklistUser,
                                    {
                                        militaryServiceBranch: checklistAttributes.militaryServiceBranch,
                                        service: checklistAttributes.service,
                                        payPlan_Grade: checklistAttributes.payplanGrade.v,
                                        grade: checklistAttributes.payplanGrade.g,
                                        payPlan: checklistAttributes.payplanGrade.p,
                                        organization_v2: checklistAttributes.organization.ORG_NAME,
                                        organizationCode: checklistAttributes.organizationCode,
                                        officeLocation: checklistAttributes.officeLocation,
                                        city: checklistAttributes.city,
                                        supervisor: {
                                            '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                            Claims: Concatenate("i:0#.f|membership|", checklistAttributes.supervisor.Mail),
                                            Department: checklistAttributes.supervisor.Department,
                                            DisplayName: checklistAttributes.supervisor.DisplayName,
                                            Email: checklistAttributes.supervisor.Mail,
                                            JobTitle: checklistAttributes.supervisor.JobTitle,
                                            Picture: ""
                                        },
                                        supervisorDisplayName: checklistAttributes.supervisor.DisplayName,
                                        supervisorEmail: checklistAttributes.supervisor.Mail,
                                        supervisorGivenName: checklistAttributes.supervisor.GivenName,
                                        supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,
                                        supervisorSurname: checklistAttributes.supervisor.Surname,
                                        supervisorUid: checklistAttributes.supervisor.Id
                                    }
                                )
                            )
                        );
                        If(
                            Set(recentlyPatchedChecklist,
                                Patch('OBOF-DS-checklistOutProcessing',
                                    selectedChecklist,
                                    {
                                        uidSupervisor: checklistAttributes.supervisor.Id,
                                        uidDesignee: checklistAttributes.designee.Id,
                                        checklistStatus: checklistAttributes.outProcessingStatus,
                                        departureDate: checklistAttributes.departureDate,
                                        newEmployerAgency: checklistAttributes.newEmployerAgency,
                                        newEmployerAgencyAddress:checklistAttributes.newEmployerAddress
                                    }
                                )
                            ),
                            Notify("Updated", NotificationType.Success),
                            Notify("[OBOF-DS-checklistOutProcessing] patch error", NotificationType.Error)
                        );
                        Set(isEditChecklistVisible, false);
                        
                        /*
                        // REMOVED CODE BUT LEFT FOR REFERENCE
                        If(runSendNotificationSupervisorDesignee,
                            Select(sendNotificationSupervisorDesignee);
                        );
                        Select(refreshChecklists)
                        */
                    )
                )
            UpdateChecklistJSON: |-
                =With(
                    {
                        tasksChecklistObj: JSON(col_checklistTasks)
                    },
                
                    If(
                        IsEmpty(
                            Errors('OBOF-DS-checklistOutProcessing',
                                Patch('OBOF-DS-checklistOutProcessing',
                                    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                                    {
                                        checklistJSON: tasksChecklistObj
                                    }
                                )
                            )
                        ),
                        Notify(
                            "[Action Item: " & Text(gallery_checklistTasks.Selected.actionItem, "#0") & "] " &
                            "CHKID: " & gallery_checklists.Selected.ID & " | " &
                            "CHK_Task: " & gallery_checklistTasks.Selected.uid & " | " &
                            "Action Completed By: " & First(currentUser).displayName &"-"& First(currentUser).uid, NotificationType.Success 
                        ),
                        Notify("[OBOF-DS-checklistOutProcessing] patch error", NotificationType.Error)
                    );
                
                    /*
                    // REMOVED CODE BUT LEFT AS REFERENCE
                    If(runBuildChecklistTasks, Select(buildChecklistTasks), Set(isBuildChecklistTasksRunning, false));
                    If(runRefreshChecklists, Select(refreshChecklists), Set(isBuildChecklistTasksRunning, false));
                    Select(buildChecklistTasks);
                    */
                    Set(isBuildChecklistTasksRunning, false);
                )
            UpdateExtendedAttributes: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, ID = ActionItem)
                        
                    },
                
                    ClearCollect(col_eaj, selectedTask.extendAttributesJSON);
                
                    If(
                        IsEmpty(
                            Errors(col_eaj,
                                Patch(col_eaj, {ID: ExtendedAttributesJSONID},
                                    {
                                        ID: ExtendedAttributesJSONID,
                                        description: Text(LookUp(col_eaj, ID = ExtendedAttributesJSONID).description),
                                        response: ExtendedAttributesJSONResponse,
                                        responded: true
                                    }
                                )
                            )
                        ),
                        Notify("col_eaj Patch", NotificationType.Success), //Select(updateChecklistJSON),
                        Notify("col_eaj Patch", NotificationType.Error)
                    );
                    
                    If(
                        IsEmpty(
                            Errors(col_checklistTasks,
                                Patch(col_checklistTasks, selectedTask,
                                    {
                                        extendAttributesJSON: col_eaj
                                    }
                                )
                            )
                        ),
                        Notify("Extended Attributes Patch", NotificationType.Success), //Select(updateChecklistJSON),
                        Notify("Extended Attributes Patch Error", NotificationType.Error)
                    )
                )
            ValidateChecklistComplete: |-
                =If({isCompleted: false} in col_checklistTasks.isCompleted,
                    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = "Completed", 
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                outprocessingState: {Value: "In Progress"},
                                outprocessingCompletedDate: Blank()
                            }
                        );
                        Set(patchRun, true),
                
                        Set(patchRun, false)
                    );
                    //Notify("Checklist Not Completed", NotificationType.Warning);
                    patchRun,
                
                    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = "In Progress",
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                outprocessingState: {Value: "Completed"},
                                outprocessingCompletedDate: Now()
                            }
                        );
                        Set(patchRun, true),
                
                        Set(patchRun, false)
                    );
                    Notify("Checklist Completed", NotificationType.Success);
                    patchRun
                );
            ValidateCompletionSignature: |-
                =With(
                    {
                        tasksMissingSignatureForCompletion: If(signatureType = "signatureEmployee", 
                            Filter(col_checklistTasks, actionItem <> 36 && actionItem <> 37 && {t: signatureType, Value: 0} in taskCompletionTelemetry),
                            Filter(col_checklistTasks, actionItem <> 37 && (
                                {t: Index(signatureTypeArray, 1).Value, Value: 0} in taskCompletionTelemetry ||
                                {t: Index(signatureTypeArray, 2).Value, Value: 0} in taskCompletionTelemetry ||
                                {t: Index(signatureTypeArray, 3).Value, Value: 0} in taskCompletionTelemetry)
                            )
                        )
                    },
                    
                    If(CountRows(tasksMissingSignatureForCompletion) > 0, 
                        Set(isValidateCompletionSignature, false);
                        //Notify($"NOT VALID {CountRows(tasksMissingSignatureForCompletion)} - {false}"); // DEBUG VALUE
                        ClearCollect(col_missingSignatures, tasksMissingSignatureForCompletion);
                        Set(isMainPopupVisible, true);
                        Set(popupScope, "popup_main_missingCompletionTasks");
                        false,
                
                        Set(isValidateCompletionSignature, true);
                        //Notify($"VALID {CountRows(tasksMissingSignatureForCompletion)} - {true}"); // DEBUG VALUE
                        true
                    )
                )
            Visible: =false
            Width: =Parent.Width - 10
            ZIndex: =2

        galleryContextCall_buildChecklistTasks As timer:
            Duration: =1
            Height: =2
            OnTimerEnd: =Set(call_buildChecklistTasks, false)
            OnTimerStart: |-
                =Set(isBuildChecklistTasksRunning, true);
                Select(buildChecklistTasks)
            Start: =call_buildChecklistTasks
            Text: =
            Visible: =false
            Width: =Parent.Width - 10
            ZIndex: =3

        gallery_ChecklistsFirstItem As label:
            Align: =Align.Center
            BorderThickness: =1
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Bold
            Height: =16
            Size: =10
            Text: =First(gallery_checklists.AllItems).ID
            Visible: =false
            Width: =Parent.Width
            ZIndex: =4

        gallery_ChecklistsLastItem As label:
            Align: =Align.Center
            BorderThickness: =1
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Bold
            Height: =16
            Size: =10
            Text: =Last(gallery_checklists.AllItems).ID
            Visible: =false
            Width: =Parent.Width
            ZIndex: =5

        delegationNewChecklist As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =// IF DELEGATED
                If(toggle_DelegationNewChecklist.Value,
                    //If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                        Patch('OBOF-DS-userDelegation',
                            If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                                Defaults('OBOF-DS-userDelegation'),
                                LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)
                            ),
                            //Defaults('OBOF-DS-userDelegation'),
                            {
                                uid: combobox_EmployeeName_3.Selected.Id,
                                displayName: combobox_EmployeeName_3.Selected.DisplayName,
                                givenName: combobox_EmployeeName_3.Selected.GivenName,
                                surname: combobox_EmployeeName_3.Selected.Surname,
                                payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,
                                grade: Value(combobox_PayPlanGrade_3.Selected.g),
                                payPlan: combobox_PayPlanGrade_3.Selected.p,
                                service: combobox_Service_3,
                                militaryServiceBranch: combobox_MilitaryServiceBranch_3,
                                mail: combobox_EmployeeName_3.Selected.Mail,
                                accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,
                                jobTitle:combobox_EmployeeName_3.Selected.JobTitle,
                                streetAddress: Blank(),
                                city:combobox_EmployeeName_3.Selected.City,
                                postalCode: combobox_EmployeeName_3.Selected.PostalCode,
                                companyName: combobox_EmployeeName_3.Selected.CompanyName,
                                department: combobox_EmployeeName_3.Selected.Department,
                                //organization: combobox_Organization_3.Selected,
                                organization_v2: combobox_Organization_3.Selected.ORG_NAME,
                                organizationCode: input_OrganizationCode_3.Text,
                                isEmployee: true,
                                officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,
                                supervisor: {
                                    '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: Concatenate("i:0#.f|membership|", combobox_Supervisor_3.Selected.Mail),
                                    Department: combobox_Supervisor_3.Selected.Department,
                                    DisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                    Email: combobox_Supervisor_3.Selected.Mail,
                                    JobTitle: combobox_Supervisor_3.Selected.JobTitle,
                                    Picture: ""
                                },
                                supervisorUid: combobox_Supervisor_3.Selected.Id,
                                supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,
                                supervisorSurname: combobox_Supervisor_3.Selected.Surname,
                                supervisorEmail: combobox_Supervisor_3.Selected.Mail,
                                supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,
                                delegationUid: combobox_Designee_3.Selected.Id
                            }
                        )
                    //)
                );
                
                Reset(toggle_DelegationNewChecklist);
                Reset(checkbox_DelegationAcknowledge);
                Reset(combobox_EmployeeName_3);
                Reset(combobox_Designee_3);
                Reset(combobox_Service_3);
                Reset(combobox_MilitaryServiceBranch_3);
                Reset(combobox_PayPlanGrade_3);
                Reset(combobox_Organization_3);
                Reset(input_OrganizationCode_3);
                Reset(input_OfficeLocation_3);
                Reset(combobox_State_3);
                Reset(input_City_3);
                Reset(combobox_OutprocessingStatus_3);
                Reset(datepicker_DepartureDate_3_1);
                Select(refreshChecklists);
                Set(isNewChecklistVisible, false);
                Select(buildChecklistTasks);
            Size: =9
            Text: ="ƒ() delegationNewChecklist"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =6

        deleteChecklist As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =Remove('OBOF-DS-checklistOutProcessing',
                    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)
                );
                Select(refreshChecklists);
            Size: =9
            Text: ="ƒ() deleteChecklist"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =7

        newChecklist As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        varDateMod: If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                            If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                    DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)))
                    },
                
                    UpdateContext(
                        {
                            numBusinessDays: 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)
                        }
                    );
                
                    If(
                        // BEGIN LOGICAL TEST
                        IsBlank(combobox_EmployeeName_3.Selected.Mail) ||
                        IsBlank(combobox_Supervisor_3.Selected.Mail) ||
                        IsBlank(combobox_Designee_3.Selected.Mail) ||
                        IsBlank(combobox_Organization_3.Selected.ORG_NAME) ||
                        IsBlank(input_OrganizationCode_3.Text) ||
                        IsBlank(combobox_Service_3.Selected.Value) ||
                        If(combobox_Service_3.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_3.Selected.Value), true, false) ||
                        IsBlank(combobox_PayPlanGrade_3.Selected.v) ||
                        IsBlank(combobox_OutprocessingStatus_3.Selected.Value) ||
                        IsBlank(datepicker_DepartureDate_3.SelectedDate) ||
                        If(combobox_EmployeeName_3.Selected.Id = combobox_Designee_3.Selected.Id, true, false) ||
                        If(combobox_EmployeeName_3.Selected.Id = combobox_Supervisor_3.Selected.Id, true, false) ||
                        If("Transfer" in combobox_OutprocessingStatus_3.Selected.Value && (IsBlank(input_NewEmployerName_3.Text && IsBlank(input_NewEmployerAddress_3.Text))), true, false),
                        // END LOGICAL TEST
                
                        // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST
                        Set(popupScope, "popup_main_newChecklistPatch");
                        Set(isMainPopupVisible, true),
                        // END TRUE RESULT - LOGICAL TEST
                
                        // BUILD JSON SCHEMA FOR CHECKLIST TASKS
                        Set(isBuildChecklistTasksRunning, true);
                        With(
                            { 
                                newChecklistObj: {
                                    employeeName: combobox_EmployeeName_3.Selected,
                                    designee: combobox_Designee_3.Selected,
                                    supervisor: combobox_Supervisor_3.Selected,
                                    outprocessingStatus: combobox_OutprocessingStatus_3.Selected,
                                    departureDate: datepicker_DepartureDate_3.SelectedDate
                                },
                                
                                tasksChecklistObj: JSON(
                                    ForAll(
                                        If(!toggle_DelegationNewChecklist.Value, // LOGIC FOR NON-DELEGATED
                                            // NON-DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                            Filter(col_templateChecklistOutprocessing, active = true && First(currentUser).service.Value in Ungroup(service, "Value").Value),
                                            // DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                            Filter(col_templateChecklistOutprocessing, active = true && combobox_Service.Selected.Value in Ungroup(service, "Value").Value)
                                        ),
                                        {
                                            ID: actionItem,
                                            actionItem: actionItem,
                                            groupValue: groupValue,
                                            service: service,
                                            isSupervisorACB: isSupervisorACB,
                                            isDesigneeACB: isDesigneeACB,
                                            isEmployeeACB: isEmployeeACB,
                                            isMSOACB: isMSOACB,
                                            isNAACB: isNAACB,
                                            isClearingOffice: isClearingOffice,
                                            uid: uid,
                                            autoNotify: autoNotify,
                                            mandatoryClearingOfficeACB: mandatoryClearingOfficeACB,
                                            notificationDetails: {isNotified: false, email: Text(""), timestamp: Date(1970, 1, 1)},
                                            dueInDays: dueInDays,
                                            dueInDaysEval: {
                                                dueDate: With({taskDD: datepicker_DepartureDate_3.SelectedDate},
                                                        DateValue(If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                            DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                            If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                                DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                    DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days))))),
                                                daysRemaining: With({taskDDMod: 
                                                    If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                        DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                        If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                                    Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                            },
                                            createServiceRequest: createServiceRequest,
                                            isServiceRequestCompleted: false,
                                            serviceRequestNumber: Text(""),
                                            urlServiceRequest: urlServiceRequest,
                                            transactLog: [
                                                {
                                                    log: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: New Checklist];[DELEGATED: " & Upper(toggle_DelegationNewChecklist.Value) & "];New checklist task added for " & combobox_EmployeeName_3.Selected.Surname & ", " &combobox_EmployeeName_3.Selected.GivenName & " in group " & groupValue),
                                                    timestamp: Text(Now(), "mm/dd/yyyy hh:mm:ss"),
                                                    ID: 1
                                                }
                                            ],
                                            extendAttributes: extendAttributes,
                                            extendAttributesJSON: ForAll(Table(ParseJSON(extendAttributesJSON)), 
                                                    {
                                                        ID: Value(ThisRecord.Value.ID), 
                                                        description: Text(ThisRecord.Value.description), 
                                                        response: Text(ThisRecord.Value.response), 
                                                        responded: Value(If(Value(ThisRecord.Value.responded) = 0, false, true))
                                                    }
                                                ),
                                            taskCompletionTelemetry: Table(
                                                    If(isClearingOffice, {Value: 0, t: "signatureClearingOffice"}, {Value: -1, t: "signatureClearingOffice"}),
                                                    If(isEmployeeACB, {Value: 0, t: "signatureEmployee"}, {Value: -1, t: "signatureEmployee"}),
                                                    If(isMSOACB, {Value: 0, t: "signatureMSO"}, {Value: -1, t: "signatureMSO"}),
                                                    If(isDesigneeACB && !isSupervisorACB, {Value: 0, t: "signatureDesignee"}, {Value: -1, t: "signatureDesignee"}),
                                                    If(isSupervisorACB && !isDesigneeACB, {Value: 0, t: "signatureSupervisor"}, {Value: -1, t: "signatureSupervisor"}),
                                                    If(isSupervisorACB && isDesigneeACB, {Value: 0, t: "signatureSupervisorDesignee"}, {Value: -1, t: "signatureSupervisorDesignee"})
                                                ),
                                            signatureSupervisor: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid:Text("")},
                                            signatureEmployee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureSupervisorDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureMSO: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureClearingOffice: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                            signatureNAACB: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")}
                                        }
                                    )
                                )
                            },
                            // END JSON SCHEMA FOR CHECKLIST TASKS
                
                            // CREATE USER PROFILE IF DELEGATION IS TRUE
                            If(toggle_DelegationNewChecklist.Value, 
                                Patch('OBOF-DS-userDelegation',
                                    If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),
                                        Defaults('OBOF-DS-userDelegation'),
                                        LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)
                                    ),
                                    {
                                        uid: combobox_EmployeeName_3.Selected.Id,
                                        displayName: combobox_EmployeeName_3.Selected.DisplayName,
                                        givenName: combobox_EmployeeName_3.Selected.GivenName,
                                        surname: combobox_EmployeeName_3.Selected.Surname,
                                        payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,
                                        grade: Value(combobox_PayPlanGrade_3.Selected.g),
                                        payPlan: combobox_PayPlanGrade_3.Selected.p,
                                        service: combobox_Service_3,
                                        militaryServiceBranch: combobox_MilitaryServiceBranch_3,
                                        mail: combobox_EmployeeName_3.Selected.Mail,
                                        accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,
                                        jobTitle:combobox_EmployeeName_3.Selected.JobTitle,
                                        streetAddress: Blank(),
                                        city:combobox_EmployeeName_3.Selected.City,
                                        postalCode: combobox_EmployeeName_3.Selected.PostalCode,
                                        companyName: combobox_EmployeeName_3.Selected.CompanyName,
                                        department: combobox_EmployeeName_3.Selected.Department,
                                        //organization: combobox_Organization_3.Selected,
                                        organization_v2: combobox_Organization_3.Selected.ORG_NAME,
                                        organizationCode: input_OrganizationCode_3.Text,
                                        isEmployee: true,
                                        officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,
                                        supervisor: {
                                            '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                            Claims: Concatenate("i:0#.f|membership|", combobox_Supervisor_3.Selected.Mail),
                                            Department: combobox_Supervisor_3.Selected.Department,
                                            DisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                            Email: combobox_Supervisor_3.Selected.Mail,
                                            JobTitle: combobox_Supervisor_3.Selected.JobTitle,
                                            Picture: ""
                                        },
                                        supervisorUid: combobox_Supervisor_3.Selected.Id,
                                        supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,
                                        supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,
                                        supervisorSurname: combobox_Supervisor_3.Selected.Surname,
                                        supervisorEmail: combobox_Supervisor_3.Selected.Mail,
                                        supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,
                                        delegationUid: combobox_Designee_3.Selected.Id
                                    }
                                );
                                ClearCollect(delegatedUser, 'OBOF-DS-userDelegation');
                            );
                            // END CREATE USER PROFILE IF DELEGATION IS TRUE
                
                            // CREATE EMPLOYEE OUT-PROCESSING CHECKLIST
                            Set(chkRecord,
                                Patch('OBOF-DS-checklistOutProcessing',
                                    Defaults('OBOF-DS-checklistOutProcessing'),
                                    {
                                        uidUser: newChecklistObj.employeeName.Id,
                                        uidDesignee: newChecklistObj.designee.Id,
                                        uidSupervisor: newChecklistObj.supervisor.Id,
                                        checklistStatus: newChecklistObj.outprocessingStatus,
                                        departureDate: newChecklistObj.departureDate,
                                        outprocessingState: {Value: "In Progress"},
                                        isDelegated: If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, true, false),
                                        newEmployerAgency: input_NewEmployerName_3.Text,
                                        newEmployerAgencyAddress: input_NewEmployerAddress_3.Text,
                                        checklistJSON: tasksChecklistObj
                                    }
                                )
                            );
                            // END CREATE EMPLOYEE OUT-PROCESSING CHECKLIST
                        );
                        
                        If(runSendNotificationSupervisorDesignee,
                            Select(sendNotificationSupervisorDesignee);
                        );
                        Set(isNewChecklistVisible, false);
                        Select(refreshChecklists); // FOLLOW FUNCTION CALL FOR NEXT STEP IN PROCESS
                        
                    );
                    
                )
            Size: =9
            Text: ="ƒ() newChecklist"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =8

        newLocalTask As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |
                =With(
                    {
                        varDateMod: If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                            DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                            If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                    DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days))),
                        actionItemIdValue: Last(ShowColumns(Sort('OBOF-DS-templateOutProcessingChecklistLocalTask', SortOrder.Ascending), "actionItem")).actionItem + 1
                    },
                
                    UpdateContext(
                        {
                            numBusinessDays: 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)
                        }
                    );
                
                    If(IsBlank(localTask.taskID),
                        ClearCollect(localTaskRecord,
                            Patch('OBOF-DS-templateOutProcessingChecklistLocalTask',
                                Defaults('OBOF-DS-templateOutProcessingChecklistLocalTask'),
                                {
                                    taskTitle: input_LocalTask_Title.Text,
                                    taskDetails: RichTextEditor_TaskDetails.HtmlText,
                                    service: combobox_LocalTaskDetails_Service.SelectedItems,
                                    group: combobox_LocalTask_Group.Selected,
                                    assignment: combobox_LocalTask_Group.Selected,
                                    dueInDays: Value(input_LocalTask_DueInDays_2.Text),
                                    isSupervisorACB: If(checkbox_LocalTask_Supervisor.Value, true, false),
                                    isDesigneeACB: If(checkbox_LocalTask_Designee.Value, true, false),
                                    isEmployeeACB: If(checkbox_LocalTask_Employee.Value, true, false),
                                    isMSOACB: If(checkbox_LocalTask_MSO.Value, true, false),
                                    isNAACB: false,
                                    isClearingOffice: If(checkbox_LocalTask_ClearingOffice.Value, true, false),
                                    autoNotify: If(checkbox_LocalTack_EnableNotification.Value, true, false),
                                    mandatoryClearingOfficeACB: false,
                                    extendAttributes: false,
                                    extendAttributesJSON: Text(""),
                                    createServiceRequest: false,
                                    urlServiceRequest: Text(""),
                                    actionItem: If((IsBlank(localTask.taskID)),If(actionItemIdValue = 1, Value(199 + actionItemIdValue), actionItemIdValue), gallery_LocalTaskList.Selected.actionItem),
                                    uidTask: GUID()
                                }
                            )
                        ),
                        Patch('OBOF-DS-templateOutProcessingChecklistLocalTask',
                            LookUp('OBOF-DS-templateOutProcessingChecklistLocalTask', actionItem = localTask.taskID),
                                {
                                    taskTitle: input_LocalTask_Title.Text,
                                    taskDetails: RichTextEditor_TaskDetails.HtmlText,
                                    service: combobox_LocalTaskDetails_Service.SelectedItems,
                                    group: combobox_LocalTask_Group.Selected,
                                    assignment: combobox_LocalTask_Group.Selected,
                                    dueInDays: Value(input_LocalTask_DueInDays_2.Text),
                                    isSupervisorACB: If(checkbox_LocalTask_Supervisor.Value, true, false),
                                    isDesigneeACB: If(checkbox_LocalTask_Designee.Value, true, false),
                                    isEmployeeACB: If(checkbox_LocalTask_Employee.Value, true, false),
                                    isMSOACB: If(checkbox_LocalTask_MSO.Value, true, false),
                                    isNAACB: false,
                                    isClearingOffice: If(checkbox_LocalTask_ClearingOffice.Value, true, false),
                                    autoNotify: If(checkbox_LocalTack_EnableNotification.Value, true, false),
                                    mandatoryClearingOfficeACB: false,
                                    extendAttributes: false,
                                    extendAttributesJSON: Text(""),
                                    createServiceRequest: false,
                                    urlServiceRequest: Text("")
                                }
                            );
                        ClearCollect(localTaskRecord, LookUp('OBOF-DS-templateOutProcessingChecklistLocalTask', actionItem = localTask.taskID))
                    );
                
                    Switch(localTask.scope,
                        // SAVE SWITCH BLOCK
                        button_LocalTask_Save.Text,
                            Notify("Local Task Saved // Action Item: " & Text(First(localTaskRecord).actionItem) & " // " & Text(First(localTaskRecord).taskTitle), NotificationType.Success);
                            Set(isNewLocalTaskVisible, false);
                            Reset(input_LocalTask_Title);
                            Reset(combobox_LocalTaskDetails_Service);
                            Reset(RichTextEditor_TaskDetails);
                            Reset(combobox_LocalTask_Group);
                            Reset(input_LocalTask_DueInDays_2);
                            Reset(checkbox_LocalTask_Employee);
                            Reset(checkbox_LocalTask_Supervisor);
                            Reset(checkbox_LocalTask_Designee);
                            Reset(checkbox_LocalTask_MSO);
                            Reset(checkbox_LocalTask_ClearingOffice);
                            Reset(checkbox_LocalTack_EnableNotification);,
                        // END SAVE SWITCH BLOCK
                
                        // SAVE & APPLY SWITCH BLOCK
                        button_LocalTask_SaveApply.Text, 
                            If(First(localTaskRecord).uidTask in col_checklistTasks.uid,
                                Set(localTaskPopup, true),
                                Patch(col_checklistTasks,
                                    Defaults(col_checklistTasks),
                                    //{ID: 1}
                                    {
                                        ID: First(localTaskRecord).actionItem,
                                        actionItem: First(localTaskRecord).actionItem,
                                        groupValue: First(localTaskRecord).group.Value,
                                        service: First(localTaskRecord).service,
                                        isSupervisorACB: First(localTaskRecord).isSupervisorACB,
                                        isDesigneeACB: First(localTaskRecord).isDesigneeACB,
                                        isEmployeeACB: First(localTaskRecord).isEmployeeACB,
                                        isMSOACB: First(localTaskRecord).isMSOACB,
                                        isNAACB: First(localTaskRecord).isNAACB,
                                        isClearingOffice: First(localTaskRecord).isClearingOffice,
                                        uid: First(localTaskRecord).uidTask,
                                        autoNotify: First(localTaskRecord).autoNotify,
                                        mandatoryClearingOfficeACB: false,
                                        notificationDetails: {
                                            isNotified: false,
                                            email: Text(""),
                                            timestamp: DateValue(Text(""))
                                        },
                                        dueInDays: Value(First(localTaskRecord).dueInDays),
                                        dueInDaysEval: {
                                            dueDate: With({taskDD: gallery_checklists.Selected.departureDate},
                                                        DateValue(If(Weekday(DateAdd(taskDD, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                            DateAdd(taskDD, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                            If(Weekday(DateAdd(taskDD, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                                DateAdd(taskDD, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                    DateAdd(taskDD, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days))))),
                                                daysRemaining: With({taskDDMod: 
                                                    If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                        DateAdd(gallery_checklists.Selected.departureDate, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                        If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                            DateAdd(gallery_checklists.Selected.departureDate, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                DateAdd(gallery_checklists.Selected.departureDate, (Value(First(localTaskRecord).dueInDays) + (RoundDown((Value(First(localTaskRecord).dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                                    Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                            },
                                        createServiceRequest: false,
                                        isServiceRequestCompleted: false,
                                        serviceRequestNumber: Text(""),
                                        urlServiceRequest: Text(""),
                                        transactLog: [
                                            {
                                                log: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & First(localTaskRecord).actionItem & "];[FUNCTION: New Checklist];[DELEGATED: " & gallery_checklists.Selected.isDelegated & "];New local task added for " & First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname & ", " & First(Ungroup(gallery_checklists.Selected.employee, "givenName")).givenName & " in group " & First(localTaskRecord).group.Value),
                                                timestamp: Now(),
                                                ID: Value(1)
                                            }
                                        ],
                                        extendAttributes: false,
                                        extendAttributesJSON: ForAll(Table(ParseJSON(First(localTaskRecord).extendAttributesJSON)), 
                                                    {
                                                        ID: Value(ThisRecord.Value.ID), 
                                                        description: Text(ThisRecord.Value.description), 
                                                        response: Text(ThisRecord.Value.response), 
                                                        responded: Value(If(Value(ThisRecord.Value.responded) = 0, false, true))
                                                    }
                                                ),
                                        signatureSupervisor: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        signatureDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid:Text("")},
                                        signatureEmployee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        signatureSupervisorDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        signatureMSO: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        signatureClearingOffice: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        signatureNAACB: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                        taskCompletionTelemetry: Table(
                                            If(
                                                checkbox_LocalTask_ClearingOffice.Value,
                                                {Value: 0, t: "signatureClearingOffice"}, {Value: -1, t: "signatureClearingOffice"}
                                            ),
                                            If(
                                                checkbox_LocalTask_Employee.Value,
                                                {Value: 0, t: "signatureEmployee"}, {Value: -1, t: "signatureEmployee"}
                                            ),
                                            If(
                                                checkbox_LocalTask_MSO.Value,
                                                {Value: 0, t: "signatureMSO"}, {Value: -1, t: "signatureMSO"}
                                            ),
                                            If(
                                                checkbox_LocalTask_Designee.Value && !checkbox_LocalTask_Supervisor.Value,
                                                {Value: 0, t: "signatureDesignee"}, {Value: -1, t: "signatureDesignee"}
                                            ),
                                            If(
                                                checkbox_LocalTask_Supervisor.Value && !checkbox_LocalTask_Designee.Value,
                                                {Value: 0, t: "signatureSupervisor"}, {Value: -1, t: "signatureSupervisor"}
                                            ),
                                            If(
                                                checkbox_LocalTask_Supervisor.Value && checkbox_LocalTask_Designee.Value,
                                                {Value: 0, t: "signatureSupervisorDesignee"}, {Value: -1, t: "signatureSupervisorDesignee"}
                                            )
                                        )
                                    }
                                )
                            );
                            Notify("Local Task Assigned to CHKID: " & gallery_checklists.Selected.ID & " // Action Item: " & Text(First(localTaskRecord).actionItem) & " // " & Text(First(localTaskRecord).taskTitle), NotificationType.Success);
                            Set(isNewLocalTaskVisible, false);
                            Reset(input_LocalTask_Title);
                            Reset(combobox_LocalTaskDetails_Service);
                            Reset(RichTextEditor_TaskDetails);
                            Reset(combobox_LocalTask_Group);
                            Reset(input_LocalTask_DueInDays_2);
                            Reset(checkbox_LocalTask_Employee);
                            Reset(checkbox_LocalTask_Supervisor);
                            Reset(checkbox_LocalTask_Designee);
                            Reset(checkbox_LocalTask_MSO);
                            Reset(checkbox_LocalTask_ClearingOffice);
                            Reset(checkbox_LocalTack_EnableNotification);
                            Set(runRefreshChecklists, true);
                            Set(runBuildChecklistTasks, true);
                            Select(updateChecklistJSON);
                
                        // END SAVE & APPLY SWITCH BLOCK
                
                    )
                    // END SWITCH STATEMENT
                );
            Size: =9
            Text: ="ƒ() newLocalTask"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =9

        buildChecklistTasks As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =Set(isBuildChecklistTasksRunning, true);
                With(
                    {
                        checklistJSON: LookUp('OBOF-DS-checklistOutProcessing', uidUser = gallery_checklists.Selected.uidUser && ID = gallery_checklists.Selected.ID).checklistJSON
                    },
                    //Set(cjs, checklistJSON);
                    //Set(bbb, JSON(checklistJSON)));
                    ClearCollect(col_ParsedJSON,
                        DropColumns(
                            AddColumns(
                                Table(ParseJSON(checklistJSON)),
                                "ID", Value(Value.ID),
                                "actionItem", Value(Value.actionItem),
                                "groupValue", Text(Value.groupValue),
                                "service", DropColumns(AddColumns(RenameColumns(Table(Value.service), "Value", "V"), "Value", Text(V.Value)), "V"),
                                "isSupervisorACB", If(Value(Value.isSupervisorACB) = 1, true, false),
                                "isDesigneeACB", If(Value(Value.isDesigneeACB) = 1, true, false),
                                "isEmployeeACB", If(Value(Value.isEmployeeACB) = 1, true, false),
                                "isMSOACB", If(Value(Value.isMSOACB) = 1, true, false),
                                "isNAACB", If(Value(Value.isNAACB) = 1, true, false),
                                "isClearingOffice", If(Value(Value.isClearingOffice) = 1, true, false),
                                "uid", Text(Value.uid),
                                "autoNotify", If(Value(Value.autoNotify) = 1, true, false),
                                "extendAttributes", If(Value(Value.extendAttributes) = 1, true, false),
                                "dueInDays", Value(Value.dueInDays),
                                "dueInDaysEval", {
                                        dueDate: With({taskDD: gallery_checklists.Selected.departureDate},
                                                    DateValue(If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                        DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                        If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays)+ (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                            DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                                DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days))))), 
                                        daysRemaining: With({taskDDMod: If(Weekday(DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                    DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                    If(Weekday(DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                        DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                            DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                                Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                    },
                                "mandatoryClearingOfficeACB", If(Value(Value.mandatoryClearingOfficeACB) = 1, true, false),
                                "notificationDetails", {
                                    isNotified: If(Value(Value.notificationDetails.isNotified) = 1, true, false),
                                    email: Text(Value.notificationDetails.email),
                                    timestamp: DateValue(Text(Value.notificationDetails.timestamp))
                                },
                                "createServiceRequest", If(Value(Value.createServiceRequest) = 1, true, false),
                                "isServiceRequestCompleted", If(Value(Value.isServiceRequestCompleted) = 1, true, false),
                                "serviceRequestNumber", Text(Value.serviceRequestNumber),
                                "urlServiceRequest", Text(Value.urlServiceRequest),
                                "signatureClearingOffice", {
                                        date: DateValue(Text(Value.signatureClearingOffice.date)), 
                                        isComplete: Value(Value.signatureClearingOffice.isComplete), 
                                        signature: Text(Value.signatureClearingOffice.signature), 
                                        uid: Text(Value.signatureClearingOffice.uid)
                                    },
                                "signatureEmployee", {
                                        date: DateValue(Text(Value.signatureEmployee.date)), 
                                        isComplete: Value(Value.signatureEmployee.isComplete), 
                                        signature: Text(Value.signatureEmployee.signature), 
                                        uid: Text(Value.signatureEmployee.uid)
                                    },
                                "signatureMSO", {
                                        date: DateValue(Text(Value.signatureMSO.date)), 
                                        isComplete: Value(Value.signatureMSO.isComplete), 
                                        signature: Text(Value.signatureMSO.signature), 
                                        uid: Text(Value.signatureMSO.uid)
                                    },
                                "signatureDesignee", {
                                        date: DateValue(Text(Value.signatureDesignee.date)), 
                                        isComplete: Value(Value.signatureDesignee.isComplete), 
                                        signature: Text(Value.signatureDesignee.signature), 
                                        uid: Text(Value.signatureDesignee.uid)
                                    },
                                "signatureSupervisor", {
                                        date: DateValue(Text(Value.signatureSupervisor.date)), 
                                        isComplete: Value(Value.signatureSupervisor.isComplete), 
                                        signature: Text(Value.signatureSupervisor.signature), 
                                        uid: Text(Value.signatureSupervisor.uid)
                                    },
                                "signatureSupervisorDesignee", {
                                        date: DateValue(Text(Value.signatureSupervisorDesignee.date)), 
                                        isComplete: Value(Value.signatureSupervisorDesignee.isComplete), 
                                        signature: Text(Value.signatureSupervisorDesignee.signature), 
                                        uid: Text(Value.signatureSupervisorDesignee.uid)
                                    },
                                "signatureNAACB", {
                                        date: DateValue(Text(Value.signatureNAACB.date)), 
                                        isComplete: Value(Value.signatureNAACB.isComplete), 
                                        signature: Text(Value.signatureNAACB.signature), 
                                        uid: Text(Value.signatureNAACB.uid)
                                    },
                                "built", Now(),
                                "extendAttributesJSON", ForAll(Table(Value.extendAttributesJSON), {ID: Value(Value.ID), description: Text(Value.description), response: Text(Value.response), responded: If(Value(Value.responded) = 1, true, false)}),
                                "transactLog", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateValue(Text(Value.timestamp))})
                                ),
                            "Value"
                        )
                    );
                    //"transactLog", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateValue(Text(Value.timestamp))})
                
                    // SET PRIMARY KEY AS [ID]
                    RenameColumns(Ungroup(col_ParsedJSON.extendAttributesJSON, "extendAttributesJSON"),"ID","ID");
                    // SET PRIMARY KEY AS [ID]
                    RenameColumns(Ungroup(col_ParsedJSON.transactLog, "transactLog"),"ID","ID");
                    
                    ClearCollect(col_checklistTasks,
                        RenameColumns(
                            AddColumns(
                                AddColumns(col_ParsedJSON,
                                    "taskCompletionTelemetry", Table(
                                        If(isClearingOffice, {Value: signatureClearingOffice.isComplete, t: "signatureClearingOffice"}, {Value: -1, t: "signatureClearingOffice"}),
                                        If(isEmployeeACB, {Value: signatureEmployee.isComplete, t: "signatureEmployee"}, {Value: -1, t: "signatureEmployee"}),
                                        If(isMSOACB, {Value: signatureMSO.isComplete, t: "signatureMSO"}, {Value: -1, t: "signatureMSO"}),
                                        If(isDesigneeACB && !isSupervisorACB, {Value: signatureDesignee.isComplete, t: "signatureDesignee"}, {Value: -1, t: "signatureDesignee"}),
                                        If(isSupervisorACB && !isDesigneeACB, {Value: signatureSupervisor.isComplete, t: "signatureSupervisor"}, {Value: -1, t: "signatureSupervisor"}),
                                        If(isSupervisorACB && isDesigneeACB, {Value: signatureSupervisorDesignee.isComplete, t: "signatureSupervisorDesignee"}, {Value: -1, t: "signatureSupervisorDesignee"})
                                    )
                                ),
                                "isCompleted", If(IsEmpty(Filter(col_ParsedJSON, 0 in taskCompletionTelemetry.Value)), true, false)
                            ),
                            "ID","ID"
                        )
                    )
                );
                
                // RESET ALL NEW CHECKLIST FIELDS WITHIN FORM
                Clear(col_ParsedJSON);
                Reset(toggle_DelegationNewChecklist);
                Reset(checkbox_DelegationAcknowledge);
                Reset(combobox_EmployeeName_3);
                Reset(combobox_Designee_3);
                Reset(combobox_Service_3);
                Reset(combobox_MilitaryServiceBranch_3);
                Reset(combobox_PayPlanGrade_3);
                Reset(combobox_Organization_3);
                Reset(input_OrganizationCode_3);
                Reset(input_OfficeLocation_3);
                Reset(combobox_State_3);
                Reset(input_City_3);
                Reset(combobox_OutprocessingStatus_3);
                Reset(datepicker_DepartureDate_3);
                Reset(input_NewEmployerName_3);
                Reset(input_NewEmployerAddress_3);
                Set(chkRecord, Blank());
                Set(sendNotificationSupervisorDesigneeScope, Blank());
                Set(runSendNotificationSupervisorDesignee, false);
                Set(runBuildChecklistTasks, false);
                Set(isBuildChecklistTasksRunning, false);
            Size: =9
            Text: ="ƒ() buildChecklistTasks"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =10

        refreshChecklists As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =Set(isBuildChecklistTasksRunning, true);
                UpdateContext(
                    {
                        icon_RefreshChecklistStatusVisible: false,
                        icon_RefreshChecklistStatusVisibleFade: false
                    }
                );
                
                // COLLECTION CHECKLIST TEMPLATES
                Refresh('OBOF-DS-appSettings');
                Refresh('OBOF-DS-userDelegation');
                Refresh('GLBL-DS-userRegistration');
                Refresh('OBOF-DS-checklistOutProcessing');
                Refresh('OBOF-DS-templateOutProcessingChecklist');
                Refresh('OBOF-DS-templateOutProcessingChecklistLocalTask');
                ClearCollect(col_templateChecklistOutprocessing, SortByColumns('OBOF-DS-templateOutProcessingChecklist', "actionItem", SortOrder.Ascending));
                ClearCollect(col_templateChecklistOutprocessingLocalTask, SortByColumns('OBOF-DS-templateOutProcessingChecklistLocalTask', "actionItem", SortOrder.Ascending));
                
                With(
                    {
                        outprocessingChecklistItems: ShowColumns(
                            Filter('OBOF-DS-checklistOutProcessing',outprocessingState.Value = globalFilter),
                            "ID",
                            "uidUser",
                            "uidDesignee",
                            "uidSupervisor",
                            "checklistStatus",
                            "departureDate",
                            "outprocessingState",
                            "outprocessingCompletedDate",
                            "isDelegated",
                            "Created",
                            "newEmployerAgency",
                            "newEmployerAgencyAddress"
                        ) // SELECT COLUMNS
                    },
                    With(
                        {
                            // AGGREGATE ALL FOREIGN TABLES INTO A SINGLE OBJECT
                            outprocessingChecklistItemsAggregation: AddColumns(
                                outprocessingChecklistItems,
                
                                // IDENTIFY IF EMPLOYEE CHECKLIST IS DELEGATED -->> AGGREGATE DATA ON EMPLOYEE
                                // IF isDelegate
                                "employee", If(isDelegated, 
                                    ShowColumns(Table(LookUp('OBOF-DS-userDelegation' As ud, uidUser = ud.uid)), 
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"), 
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidUser = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch")), // END IF isDelegate | employee
                                
                                // AGGREGATE DATA ON DESIGNEE
                                "designee", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid).uid),
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"),
                                    With(
                                        {
                                            graphApiResponseDesignee: Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/{uidDesignee}", "GET", "")
                                        },
                                        [
                                            {
                                                uid: Text(graphApiResponseDesignee.id),
                                                displayName: Text(graphApiResponseDesignee.displayName),
                                                givenName: Text(graphApiResponseDesignee.givenName),
                                                surname: Text(graphApiResponseDesignee.surname),
                                                jobTitle: Text(graphApiResponseDesignee.jobTitle),
                                                mail: Text(graphApiResponseDesignee.mail),
                                                organization: "",
                                                organizationCode: "",
                                                payPlan_Grade: "",
                                                payPlan: "",
                                                grade: "",
                                                department: "",
                                                service: [{Value: ""}],
                                                militaryServiceBranch: ""
                                            }
                                        ]
                                    )
                                ),
                                
                                // AGGREGATE DATA ON SUPERVISOR
                                "supervisor", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid).uid),
                                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid)),
                                        "uid","displayName","givenName","surname","jobTitle","mail","organization","organizationCode","payPlan_Grade","payPlan","grade","department","service","militaryServiceBranch"),
                                    With(
                                        {
                                            graphApiResponseSupervisor: Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/{uidSupervisor}", "GET", "")
                                        },
                                        [
                                            {
                                                uid: Text(graphApiResponseSupervisor.id),
                                                displayName: Text(graphApiResponseSupervisor.displayName),
                                                givenName: Text(graphApiResponseSupervisor.givenName),
                                                surname: Text(graphApiResponseSupervisor.surname),
                                                jobTitle: Text(graphApiResponseSupervisor.jobTitle),
                                                mail: Text(graphApiResponseSupervisor.mail),
                                                organization: "",
                                                organizationCode: "",
                                                payPlan_Grade: "",
                                                payPlan: "",
                                                grade: "",
                                                department: "",
                                                service: [{Value: ""}],
                                                militaryServiceBranch: ""
                                            }
                                        ]
                                    )
                                )
                            )
                        },
                
                        Set(des, Office365Groups.HttpRequest($"https://dod-graph.microsoft.us/v1.0/users/35573b91-3205-4a0a-9e69-771b4d67260f", "GET", "",{ContentType: "application/json;odata=nometadata"}));
                        
                        //35573b91-3205-4a0a-9e69-771b4d67260f
                        // BUILD COLLECTION FROM FOREIGN TABLE AGGREGATE
                        ClearCollect(col_outprocessingChecklistItems, outprocessingChecklistItemsAggregation);
                
                    )
                );
                
                UpdateContext({icon_RefreshChecklistStatusVisible: true,icon_RefreshChecklistStatusVisibleFade: true});
                
                Select(buildChecklistTasks); // FOLLOW FUNCTION CALL FOR NEXT STEP IN PROCESS
            Size: =9
            Text: ="ƒ() refreshChecklists"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =11

        updateChecklistJSON As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        tasksChecklistObj: JSON(col_checklistTasks)
                    },
                
                    If(
                        IsEmpty(
                            Errors('OBOF-DS-checklistOutProcessing',
                                Patch('OBOF-DS-checklistOutProcessing',
                                    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                                    {
                                        checklistJSON: tasksChecklistObj
                                    }
                                )
                            )
                        ),
                        Notify(
                            "[Action Item: " & Text(gallery_checklistTasks.Selected.actionItem, "#0") & "] " &
                            "CHKID: " & gallery_checklists.Selected.ID & " | " &
                            "CHK_Task: " & gallery_checklistTasks.Selected.uid & " | " &
                            "Action Completed By: " & First(currentUser).displayName &"-"& First(currentUser).uid, NotificationType.Success 
                        ),
                        Notify("[OBOF-DS-checklistOutProcessing] patch error", NotificationType.Error)
                    );
                
                    //If(runBuildChecklistTasks, Select(buildChecklistTasks), Set(isBuildChecklistTasksRunning, false));
                    //If(runRefreshChecklists, Select(refreshChecklists), Set(isBuildChecklistTasksRunning, false));
                    Select(buildChecklistTasks);
                    Set(isBuildChecklistTasksRunning, false);
                )
            Size: =9
            Text: ="ƒ() updateChecklistJSON"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =12

        updateChecklistAttributes As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =If(
                    // BEGIN LOGICAL TEST
                    IsBlank(combobox_EmployeeName_4.Selected.Mail) ||
                    IsBlank(combobox_Supervisor_4.Selected.Id) ||
                    IsBlank(combobox_Designee_4.Selected.Id) ||
                    IsBlank(combobox_Organization_4.Selected.ORG_NAME) ||
                    IsBlank(input_OrganizationCode_4.Text) ||
                    IsBlank(combobox_Service_4.Selected.Value) ||
                    If(combobox_Service_4.Selected.Value = "Military" && IsBlank(combobox_MilitaryServiceBranch_4.Selected.Value), true, false) ||
                    IsBlank(combobox_PayPlanGrade_4.Selected.v) ||
                    IsBlank(combobox_OutprocessingStatus_4.Selected.Value) ||
                    IsBlank(datepicker_DepartureDate_4.SelectedDate) ||
                    If(combobox_EmployeeName_4.Selected.Id = combobox_Designee_4.Selected.Id, true, false) ||
                    If(combobox_EmployeeName_4.Selected.Id = combobox_Supervisor_4.Selected.Id, true, false) ||
                    If("Transfer" in combobox_OutprocessingStatus_4.Selected.Value && (IsBlank(input_NewEmployerName_4.Text && IsBlank(input_NewEmployerAddress_4.Text))), true, false),
                    // END LOGICAL TEST
                
                    // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST
                    Set(popupScope, "popup_main_updateChecklistAttributesPatch");
                    Set(isMainPopupVisible, true),
                    // END TRUE RESULT - LOGICAL TEST
                
                    With(
                        {
                            checklistAttributes: {
                                supervisor: combobox_Supervisor_4.Selected,
                                designee: combobox_Designee_4.Selected,
                                //organization: combobox_Organization_4.Selected,
                                organization: combobox_Organization_4.Selected.ORG_NAME,
                                organizationCode: input_OrganizationCode_4.Text,
                                service: combobox_Service_4.Selected,
                                militaryServiceBranch: combobox_MilitaryServiceBranch_4.Selected,
                                payplanGrade: combobox_PayPlanGrade_4.Selected,
                                officeLocation: input_OfficeLocation_4.Text,
                                city: input_City_4.Text,
                                outProcessingStatus: combobox_OutprocessingStatus_4.Selected,
                                departureDate: datepicker_DepartureDate_4.SelectedDate,
                                newEmployerAgency: input_NewEmployerName_4.Text,
                                newEmployerAddress: input_NewEmployerAddress_4.Text
                            },
                            selectedChecklistUser: If(gallery_checklists.Selected.isDelegated, LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser), LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser)),
                            selectedChecklist: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)
                        },
                        
                        If(gallery_checklists.Selected.isDelegated,
                            Patch('OBOF-DS-userDelegation',
                                selectedChecklistUser,
                                {
                                    militaryServiceBranch: checklistAttributes.militaryServiceBranch,
                                    service: checklistAttributes.service,
                                    payPlan_Grade: checklistAttributes.payplanGrade.v,
                                    grade: checklistAttributes.payplanGrade.g,
                                    payPlan: checklistAttributes.payplanGrade.p,
                                    //organization: checklistAttributes.organization,
                                    organization_v2: checklistAttributes.organization,
                                    organizationCode: checklistAttributes.organizationCode,
                                    officeLocation: checklistAttributes.officeLocation,
                                    city: checklistAttributes.city,
                                    delegationUid: checklistAttributes.designee.Id,
                                    supervisor: {
                                        '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                        Claims: Concatenate("i:0#.f|membership|", checklistAttributes.supervisor.Mail),
                                        Department: checklistAttributes.supervisor.Department,
                                        DisplayName: checklistAttributes.supervisor.DisplayName,
                                        Email: checklistAttributes.supervisor.Mail,
                                        JobTitle: checklistAttributes.supervisor.JobTitle,
                                        Picture: ""
                                    },
                                    supervisorDisplayName: checklistAttributes.supervisor.DisplayName,
                                    supervisorEmail: checklistAttributes.supervisor.Mail,
                                    supervisorGivenName: checklistAttributes.supervisor.GivenName,
                                    supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,
                                    supervisorSurname: checklistAttributes.supervisor.Surname,
                                    supervisorUid: checklistAttributes.supervisor.Id
                                }
                            ),
                            Patch('GLBL-DS-userRegistration',
                                selectedChecklistUser,
                                {
                                    militaryServiceBranch: checklistAttributes.militaryServiceBranch,
                                    service: checklistAttributes.service,
                                    payPlan_Grade: checklistAttributes.payplanGrade.v,
                                    grade: checklistAttributes.payplanGrade.g,
                                    payPlan: checklistAttributes.payplanGrade.p,
                                    //organization: checklistAttributes.organization,
                                    organization_v2: checklistAttributes.organization,
                                    organizationCode: checklistAttributes.organizationCode,
                                    officeLocation: checklistAttributes.officeLocation,
                                    city: checklistAttributes.city,
                                    supervisor: {
                                        '@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                        Claims: Concatenate("i:0#.f|membership|", checklistAttributes.supervisor.Mail),
                                        Department: checklistAttributes.supervisor.Department,
                                        DisplayName: checklistAttributes.supervisor.DisplayName,
                                        Email: checklistAttributes.supervisor.Mail,
                                        JobTitle: checklistAttributes.supervisor.JobTitle,
                                        Picture: ""
                                    },
                                    supervisorDisplayName: checklistAttributes.supervisor.DisplayName,
                                    supervisorEmail: checklistAttributes.supervisor.Mail,
                                    supervisorGivenName: checklistAttributes.supervisor.GivenName,
                                    supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,
                                    supervisorSurname: checklistAttributes.supervisor.Surname,
                                    supervisorUid: checklistAttributes.supervisor.Id
                                }
                            )
                        );
                        If(
                            IsEmpty(
                                Errors('OBOF-DS-checklistOutProcessing',
                                    Patch('OBOF-DS-checklistOutProcessing',
                                        selectedChecklist,
                                        {
                                            uidSupervisor: checklistAttributes.supervisor.Id,
                                            uidDesignee: checklistAttributes.designee.Id,
                                            checklistStatus: checklistAttributes.outProcessingStatus,
                                            departureDate: checklistAttributes.departureDate,
                                            newEmployerAgency: checklistAttributes.newEmployerAgency,
                                            newEmployerAgencyAddress:checklistAttributes.newEmployerAddress
                                        }
                                    )
                                )
                            ),
                            Notify(
                                "Updated", NotificationType.Success 
                            ),
                            Notify("[OBOF-DS-checklistOutProcessing] patch error", NotificationType.Error)
                        );
                        Set(isEditChecklistVisible, false);
                        If(runSendNotificationSupervisorDesignee,
                            Select(sendNotificationSupervisorDesignee);
                        );
                        Select(refreshChecklists)
                    )
                )
            Size: =9
            Text: ="ƒ() updateChecklistAttributes"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =13

        signatureTask As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                    },
                
                    If(!IsBlank(selectedTask),
                        If(
                            IsEmpty(
                                Errors(col_checklistTasks,
                                    Patch(col_checklistTasks,
                                        selectedTask,
                                        Switch(signatureType,
                                            "signatureDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: 1, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureDesignee: {
                                                    date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                                },
                                            "signatureSupervisor", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: 1, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisor: {
                                                    date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                                },
                                            "signatureSupervisorDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: 1, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisorDesignee: {
                                                    date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                                },
                                            "signatureEmployee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: 1, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureEmployee: {
                                                        date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid
                                                    }
                                                },
                                            "signatureMSO", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: 1, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureMSO: {
                                                    date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                                },
                                            "signatureClearingOffice", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: 1, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureClearingOffice: {
                                                    date: DateValue(Text(Now())), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}
                                                },
                                            "signatureNAACB", {
                                                taskCompletionTelemetry: [
                                                    {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value), t: "signatureDesignee"},
                                                    {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value), t: "signatureSupervisor"},
                                                    {Value: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value), t: "signatureSupervisorDesignee"},
                                                    {Value: If(selectedTask.isEmployeeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value), t: "signatureEmployee"},
                                                    {Value: If(selectedTask.isMSOACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value), t: "signatureMSO"},
                                                    {Value: If(selectedTask.isClearingOffice, 1, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value), t: "signatureClearingOffice"},
                                                    {Value: 1, t: "signatureNAACB"},
                                                ],
                                                signatureDesignee: {
                                                    date: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, DateValue(Text(Now())), selectedTask.signatureDesignee.date),
                                                    isComplete: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, selectedTask.signatureDesignee.isComplete), 
                                                    signature: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(""), selectedTask.signatureDesignee.signature), 
                                                    uid: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(""), selectedTask.signatureDesignee.uid)},
                                                signatureSupervisor: {
                                                    date: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateValue(Text(Now())), selectedTask.signatureSupervisor.date),
                                                    isComplete: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisor.isComplete), 
                                                    signature: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisor.signature), 
                                                    uid: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisor.uid)},
                                                signatureSupervisorDesignee: {
                                                    date: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateValue(Text(Now())), selectedTask.signatureSupervisorDesignee.date),
                                                    isComplete: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisorDesignee.isComplete), 
                                                    signature: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisorDesignee.signature), 
                                                    uid: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(""), selectedTask.signatureSupervisorDesignee.uid)},
                                                signatureEmployee: {
                                                    date: If(selectedTask.isEmployeeACB, DateValue(Text(Now())), selectedTask.signatureEmployee.date),
                                                    isComplete: If(selectedTask.isEmployeeACB, 1, selectedTask.signatureEmployee.isComplete), 
                                                    signature: If(selectedTask.isEmployeeACB, Text(""), selectedTask.signatureEmployee.signature), 
                                                    uid: If(selectedTask.isEmployeeACB, Text(""), selectedTask.signatureEmployee.uid)},
                                                signatureMSO: {
                                                    date: If(selectedTask.isMSOACB, DateValue(Text(Now())), selectedTask.signatureMSO.date),
                                                    isComplete: If(selectedTask.isMSOACB, 1, selectedTask.signatureMSO.isComplete), 
                                                    signature: If(selectedTask.isMSOACB, Text(""), selectedTask.signatureMSO.signature), 
                                                    uid: If(selectedTask.isMSOACB, Text(""), selectedTask.signatureMSO.uid)},
                                                signatureClearingOffice: {
                                                    date: If(selectedTask.isClearingOffice, DateValue(Text(Now())), selectedTask.signatureClearingOffice.date),
                                                    isComplete: If(selectedTask.isClearingOffice, 1, selectedTask.signatureClearingOffice.isComplete), 
                                                    signature: If(selectedTask.isClearingOffice, Text(""), selectedTask.signatureClearingOffice.signature), 
                                                    uid: If(selectedTask.isClearingOffice, Text(""), selectedTask.signatureClearingOffice.uid)},
                                                signatureNAACB: {
                                                    date: DateValue(Text(Now())),
                                                    isComplete: 1,
                                                    signature: First(currentUser).displayName,
                                                    uid: First(currentUser).uid}
                                                }
                                        )
                                    )
                                )
                            ),
                
                            Select(updateChecklistJSON);
                            Set(signatureType, Blank());,
                            Notify("[col_checklistTasks] patch error", NotificationType.Error)
                        ),
                        Notify("[SIGNATURE] Oh boy, this is super embarassing... we did not find a task UID associated with that signature. Not really sure what else to tell you right now expcet today is gonna be a great day!", NotificationType.Error)
                    )
                )
            Size: =9
            Text: ="ƒ() signatureTask"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =14

        eraseSignatureTask As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                    },
                    If(!IsBlank(selectedTask),
                        If(
                            IsEmpty(
                                Errors(col_checklistTasks,
                                    Patch(col_checklistTasks,
                                        selectedTask,
                                        Switch(signatureType,
                                            "signatureDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: 0, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureSupervisor", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: 0, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisor: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureSupervisorDesignee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: 0, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureSupervisorDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureEmployee", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: 0, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureEmployee: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureMSO", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: 0, t: "signatureMSO"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureMSO: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureClearingOffice", {
                                                taskCompletionTelemetry: [
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value, t: "signatureDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value, t: "signatureSupervisor"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value, t: "signatureSupervisorDesignee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value, t: "signatureEmployee"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value, t: "signatureMSO"},
                                                    {Value: 0, t: "signatureClearingOffice"},
                                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = "signatureNAACB").Value, t: "signatureNAACB"}
                                                ],
                                                signatureClearingOffice: {
                                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(""), uid: Text("")}
                                                },
                                            "signatureNAACB", {
                                                taskCompletionTelemetry: [
                                                    {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureDesignee").Value), t: "signatureDesignee"},
                                                    {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisor").Value), t: "signatureSupervisor"},
                                                    {Value: If(selectedTask.isDesigneeACB || selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureSupervisorDesignee").Value), t: "signatureSupervisorDesignee"},
                                                    {Value: If(selectedTask.isEmployeeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureEmployee").Value), t: "signatureEmployee"},
                                                    {Value: If(selectedTask.isMSOACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureMSO").Value), t: "signatureMSO"},
                                                    {Value: If(selectedTask.isClearingOffice, 0, LookUp(selectedTask.taskCompletionTelemetry, t = "signatureClearingOffice").Value), t: "signatureClearingOffice"},
                                                    {Value: 0, t: "signatureNAACB"},
                                                ],
                                                signatureDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureSupervisor: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureSupervisorDesignee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureEmployee: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureMSO: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureClearingOffice: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")},
                                                signatureNAACB: {
                                                    date: DateValue(Date(1970, 1, 1)),
                                                    isComplete: 0,
                                                    signature: Text(""),
                                                    uid: Text("")}
                                                }
                                        )
                                    )
                                )
                            ),
                            Select(updateChecklistJSON);
                            Set(signatureType, Blank());,
                            Notify("[col_checklistTasks] patch error", NotificationType.Error)
                        ),
                        Notify("[ERASE] ]Oh boy, this is super embarassing... we did not find a task UID associated with that signature. Not really sure what else to tell you right now expcet today is gonna be a great day!", NotificationType.Error)
                    )
                )
            Size: =9
            Text: ="ƒ() eraseSignatureTask"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =15

        recordTransactLog As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |+
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                    },
                    With(
                        {
                            transactions: selectedTask.transactLog,
                            actionItem: gallery_checklistTasks.Selected.actionItem,
                            groupValue: gallery_checklistTasks.Selected.groupValue,
                            isDelegated: gallery_checklists.Selected.isDelegated,
                            currentUserName: First(currentUser).surname & ", " & First(currentUser).givenName,
                            delegatedUserName: First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname & ", " & First(Ungroup(gallery_checklists.Selected.employee, "surname")).givenName
                        },
                       
                            ClearCollect(ta, transactions);
                
                            Switch(transactLogScope,
                            
                                "addSignature", 
                                    Set(log,
                                        {
                                            logObj: 
                                                {
                                                    logID: Value(Value(Last(ta).ID) + 1),
                                                    logMsg: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: Add Signature];[DELEGATED: " & Upper(isDelegated) & "];Action Completed By: " & If(isDelegated, currentUserName & " on behalf of employee " & delegatedUserName, currentUserName) & " in group " & groupValue) & ".",
                                                    logTimestamp: DateValue(Text(Now(), "mm/dd/yyyy hh:mm:ss"))
                                                }
                                        }
                                    ),
                
                                "removeSignature", 
                                    Set(log,
                                        {
                                            logObj: 
                                                {
                                                    logID: Value(Value(Last(ta).ID) + 1),
                                                    logMsg: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: Remove Signature];[DELEGATED: " & Upper(isDelegated) & "];Action Reversed By: " & If(isDelegated, currentUserName & " on behalf of employee " & delegatedUserName, currentUserName) & " in group " & groupValue) & ".",
                                                    logTimestamp: DateValue(Text(Now(), "mm/dd/yyyy hh:mm:ss"))
                                                }
                                        }
                                    )
                
                            );
                            
                            Patch(ta,
                                Defaults(ta), 
                                {
                                    ID: log.logObj.logID,
                                    log: log.logObj.logMsg,
                                    timestamp: log.logObj.logTimestamp
                                }
                            );
                
                            Patch(col_checklistTasks,
                                selectedTask,
                                {
                                    transactLog: ta
                                }
                            );
                            Clear(ta);
                        );
                
                    Switch(transactLogScope,
                        "addSignature",
                            Select(signatureTask),
                        "removeSignature",
                            Select(eraseSignatureTask),
                        "updateChecklist",
                            Select(updateChecklistAttributes);
                    );
                );
                
            Size: =9
            Text: ="ƒ() recordTransactLog"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =16

        healJSON As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |
                =With(
                        { 
                        newChecklistObj: {
                            employeeName: gallery_checklists.Selected.employee,
                            designee: gallery_checklists.Selected.designee,
                            supervisor: gallery_checklists.Selected.supervisor,
                            outprocessingStatus: gallery_checklists.Selected.checklistStatus,
                            departureDate: gallery_checklists.Selected.departureDate
                        },
                            
                        tasksChecklistObj: JSON(
                            ForAll(
                                If(!gallery_checklists.Selected.isDelegated, // LOGIC FOR NON-DELEGATED
                                    // NON-DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                    Filter(col_templateChecklistOutprocessing, active = true && LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser, service).Value in Ungroup(service, "Value").Value),
                                    // DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE
                                    Filter(col_templateChecklistOutprocessing, active = true && LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser, service).Value in Ungroup(service, "Value").Value)
                                ),
                                {
                                    ID: actionItem,
                                    actionItem: actionItem,
                                    groupValue: groupValue,
                                    service: service,
                                    isSupervisorACB: isSupervisorACB,
                                    isDesigneeACB: isDesigneeACB,
                                    isEmployeeACB: isEmployeeACB,
                                    isMSOACB: isMSOACB,
                                    isNAACB: isNAACB,
                                    isClearingOffice: isClearingOffice,
                                    isNotified: false,
                                    uid: uid,
                                    autoNotify: autoNotify,
                                    mandatoryClearingOfficeACB: mandatoryClearingOfficeACB,
                                    notificationDetails: {isNotified: false, email: Text(""), timestamp: Date(1970, 1, 1), emails:[]},
                                    dueInDays: dueInDays,
                                    extendAttributes: extendAttributes,
                                    extendAttributesJSON: extendAttributesJSON,
                                    dueInDaysEval: {
                                        dueDate: With({taskDD: gallery_checklists.Selected.departureDate},
                                                DateValue(If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                    DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                    If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                        DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                            DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days))))),
                                        daysRemaining: With({taskDDMod: 
                                            If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                                DateAdd(gallery_checklists.Selected.departureDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                                If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                                    DateAdd(gallery_checklists.Selected.departureDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                                        DateAdd(gallery_checklists.Selected.departureDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)))},
                                            Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))
                                    },
                                    createServiceRequest: createServiceRequest,
                                    urlServiceRequest: urlServiceRequest,
                                    transactLog: [
                                        {
                                            log: Text("[USER: " & First(currentUser).mail & "];[ACTION ITEM: " & actionItem & "];[FUNCTION: New Checklist];[DELEGATED: " & Upper(toggle_DelegationNewChecklist.Value) & "];New checklist task added for " & combobox_EmployeeName_3.Selected.Surname & ", " &combobox_EmployeeName_3.Selected.GivenName & " in group " & groupValue),
                                            timestamp: DateValue(Text(Now(), "mm/dd/yyyy hh:mm:ss")),
                                            ID: 1
                                        }
                                    ],
                                    signatureSupervisor: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                    signatureDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid:Text("")},
                                    signatureEmployee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                    signatureSupervisorDesignee: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                    signatureMSO: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                    signatureClearingOffice: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")},
                                    signatureNAACB: {signature: Text(""),date: Date(1970, 1, 1),isComplete: 0,uid: Text("")}
                                }
                            )
                        )
                    },
                    If(
                        IsEmpty(
                            Errors('OBOF-DS-checklistOutProcessing',
                                Patch('OBOF-DS-checklistOutProcessing',
                                    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                                    {
                                        checklistJSON: tasksChecklistObj
                                    }
                                )
                            )
                        ),
                        Select(buildChecklistTasks);
                        Notify(
                            "Healing JSON has completed", NotificationType.Success 
                        ),
                        Notify("[OBOF-DS-checklistOutProcessing] patch error", NotificationType.Error)
                    );
                )
            Size: =9
            Text: ="ƒ() healJSON"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =17

        buildMandatoryPOC As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |+
                =With(
                    {
                        mandatoryOfficesPOC: DropColumns(
                                AddColumns(
                                    ShowColumns(
                                        Filter('OBOF-DS-mandatoryOfficesPOC', uid = clearingOffice.uid),
                                            "ID","uid","Office","Role","RoleValue","OfficeValue","Command","Location","DescriptionDyn","POCs", "POCsManual"
                                    ),
                                        "POCsManualParsed", ForAll(Table(ParseJSON(POCsManual)), {Email: Value.Email})
                                ),
                                "POCsManual"
                            )
                    },
                    ClearCollect(col_mandatoryOfficesPOC, 
                        AddColumns(
                            mandatoryOfficesPOC,
                            "Emails", ForAll(
                                    Ungroup(
                                        Table({e: POCs.Email}, {e: POCsManualParsed.Email}),
                                        "e"
                                    ),
                                {Email: Text(ThisRecord.Email)}
                            )
                        )
                    );
                    ClearCollect(col_mandatoryOfficesPOCCommand,
                        DropColumns(
                            AddColumns(
                                Ungroup(
                                    Distinct(
                                        Ungroup(
                                            Ungroup(
                                                mandatoryOfficesPOC, 
                                                "Command").Command,
                                        "Command").Command, 
                                    Command).Value, 
                                "Value"), 
                            "Command", Value.Value,
                            "uid", First(mandatoryOfficesPOC).uid), 
                        "Value")
                    )
                )
                
            Size: =9
            Text: ="ƒ() buildMandatoryPOC"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =18

        updateExtendAttributesTask As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                        
                    },
                
                    ClearCollect(col_eaj, selectedTask.extendAttributesJSON);
                
                    Patch(col_eaj,
                        {ID: extendAttributesJSON_ID},
                        {
                            response: extendAttributesJSON_response,
                            responded: true
                        }
                    );
                    
                    If(
                        IsEmpty(
                            Errors(col_checklistTasks,
                                Patch(col_checklistTasks, selectedTask,
                                    {
                                        extendAttributesJSON: col_eaj
                                    }
                                )
                            )
                        ),
                        Select(updateChecklistJSON),
                        Notify("Extended Attributes Patch Error", NotificationType.Error)
                    )
                )
            Size: =9
            Text: ="ƒ() updateExtendAttributesTask"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =19

        sendNotification As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |
                =With(
                    {
                        notificationAttributes: {
                
                            emailSet_1: If(!IsBlank(combobox_NotifyClearingOfficeAvailablePOCs.Selected) && !(combobox_NotifyClearingOfficeAvailablePOCs.Selected.Email = "No available email addresses found..."),
                                Concat(combobox_NotifyClearingOfficeAvailablePOCs.SelectedItems, Email, ";")
                            ),
                
                            emailSet_2: If(!IsBlank(combobox_NotifyClearingOfficeAdditionalPOCs.Selected),
                                Concat(combobox_NotifyClearingOfficeAdditionalPOCs.SelectedItems, Mail, ";")
                            ),
                
                            taskDetails: {
                                actionItemID: gallery_checklistTasks.Selected.actionItem,
                                taskCategory: gallery_checklistTasks.Selected.groupValue,
                                taskTitle: If(gallery_checklistTasks.Selected.actionItem >= 200, 
                                    LookUp('OBOF-DS-templateOutProcessingChecklistLocalTask', uid = gallery_checklistTasks.Selected.uid).taskTitle, 
                                    LookUp(col_templateChecklistOutprocessing, uid = gallery_checklistTasks.Selected.uid).taskTitle),
                                taskDetails: If(gallery_checklistTasks.Selected.actionItem >= 200, 
                                    LookUp('OBOF-DS-templateOutProcessingChecklistLocalTask', uid = gallery_checklistTasks.Selected.uid).taskDetails, 
                                    LookUp(col_templateChecklistOutprocessing, uid = gallery_checklistTasks.Selected.uid).taskDetails),
                                taskCompletionTelemetry: gallery_checklistTasks.Selected.taskCompletionTelemetry,
                                dueDate: gallery_checklistTasks.Selected.dueInDaysEval.dueDate,
                                daysRemaining: gallery_checklistTasks.Selected.dueInDaysEval.daysRemaining
                
                            },
                
                            notificationTemplate: If(gallery_checklistTasks.Selected.actionItem >= 200, 
                                    LookUp('OBOF-DS-templateOutProcessingChecklistLocalTask', uid = gallery_checklistTasks.Selected.uid).notificationTemplate, 
                                    LookUp(col_templateChecklistOutprocessing, uid = gallery_checklistTasks.Selected.uid).notificationTemplate),
                
                            displayNames:
                            /* 1 */ First(Ungroup(gallery_checklists.Selected.employee, "givenName")).givenName & " " & First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname & ";" &
                            /* 2 */ First(gallery_checklists.Selected.employee.displayName).displayName & ";" &
                            /* 3 */ First(Ungroup(gallery_checklists.Selected.supervisor, "givenName").givenName).givenName & " " & First(Ungroup(gallery_checklists.Selected.supervisor, "givenName").givenName).givenName & ";" &
                            /* 4 */ First(Ungroup(gallery_checklists.Selected.supervisor, "givenName").givenName).givenName & ";" &
                            /* 5 */ First(Ungroup(gallery_checklists.Selected.designee, "displayName").displayName).displayName & ";" &
                            /* 6 */ First(currentUser).givenName & " " & First(currentUser).surname & ";" &
                            /* 7 */ First(currentUser).displayName,
                
                            checklistDetails: {
                                //organization: First(Ungroup(gallery_checklists.Selected.employee.organization, "organization")).organization.Label,
                                organization: First(Ungroup(gallery_checklists.Selected.employee, "organization_v2").organization_v2).organization_v2,
                                organizationCode: First(Ungroup(gallery_checklists.Selected.employee.organizationCode, "organizationCode")).organizationCode,
                                displayName: First(gallery_checklists.Selected.employee.displayName).displayName,
                                checklistID: gallery_checklists.Selected.ID,
                                supervisor: First(Ungroup(gallery_checklists.Selected.supervisor, "displayName").displayName).displayName,
                                designee: First(Ungroup(gallery_checklists.Selected.designee, "displayName").displayName).displayName,
                                checklistCompletedDate: gallery_checklists.Selected.outprocessingCompletedDate,
                                checklistStatus: gallery_checklists.Selected.checklistStatus.Value,
                                checklistDepartureDate: gallery_checklists.Selected.departureDate,
                                checklistState: gallery_checklists.Selected.outprocessingState.Value,
                                departingEmployeeGivenName: First(Ungroup(gallery_checklists.Selected.employee, "givenName")).givenName,
                                departingEmployeesurname: First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname
                            },
                            
                            varDateMod: If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,
                                    DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),
                                    If(Weekday(DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,
                                        DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),
                                            DateAdd(gallery_checklists.Selected.departureDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)
                                    )
                                )
                        }
                    },
                
                    Set(signatureStatus, 
                        Concat(Filter(gallery_checklistTasks.Selected.taskCompletionTelemetry, 
                            Value(ThisRecord.Value) >= 0), 
                            If(!IsBlank(ThisRecord.Value), 
                            "<li>" & Replace(ThisRecord.t,1,9,"") & ": <strong><span style='color: " & If(Value(ThisRecord.Value) = 1, "green; font-size: 20px;'>☑", "black; font-size: 20px;'>☐") & "</span></strong></li>"), 
                        Char(10))
                    );
                
                    Set(daysRemainingDepartureDate, 1 + ((DateDiff(Today(),notificationAttributes.varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(notificationAttributes.varDateMod))*2)) / 7 - Switch(Weekday(notificationAttributes.varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0));
                
                    Set(notificationTemplate, 
                        If(!IsBlank(notificationAttributes.notificationTemplate),
                            Substitute(
                                Substitute(
                                    Substitute(
                                        Substitute(
                                            Substitute(
                                                notificationAttributes.notificationTemplate, "[givenname] [surname]", 
                                                First(Ungroup(gallery_checklists.Selected.employee, "givenName")).givenName & " " & First(Ungroup(gallery_checklists.Selected.employee, "surname")).surname
                                            ),
                                            "[departuredate]", 
                                            gallery_checklists.Selected.departureDate
                                        ),
                                        "[outprocessingstatus]", 
                                        gallery_checklists.Selected.checklistStatus.Value
                                    ),
                                    "[supervisorgivenname] [supervisorsurname]",
                                    First(currentUser).givenName & " " & First(currentUser).surname
                                ),
                                "[supervisordisplayname]",
                                First(currentUser).displayName
                            ),
                            Text("")
                        )
                    );
                
                    If(!IsBlank(notificationAttributes.emailSet_1) && IsBlank(notificationAttributes.emailSet_2), Set(receivers, notificationAttributes.emailSet_1));
                    If(!IsBlank(notificationAttributes.emailSet_2) && IsBlank(notificationAttributes.emailSet_1), Set(receivers, notificationAttributes.emailSet_2));
                    If(!IsBlank(notificationAttributes.emailSet_1) && !IsBlank(notificationAttributes.emailSet_2), Set(receivers, Concatenate(notificationAttributes.emailSet_1, ";", notificationAttributes.emailSet_2)));
                    
                    If(!IsBlank(receivers), 
                        Select(updateNotificationDetails);
                        Set(notificationResponse, 'OBOF-SendNotification'.Run(
                                {
                                    text: receivers,
                                    text_1: notificationAttributes.taskDetails.actionItemID,
                                    text_2:notificationAttributes.taskDetails.taskCategory,
                                    text_3: signatureStatus,
                                    text_4: notificationAttributes.taskDetails.dueDate,
                                    text_5: notificationAttributes.taskDetails.daysRemaining,
                                    text_6: notificationAttributes.checklistDetails.organization,
                                    text_7: notificationAttributes.checklistDetails.organizationCode,
                                    text_8: notificationTemplate,
                                    text_9: notificationAttributes.checklistDetails.checklistID,
                                    text_10: appMetadata.appUrl,
                                    text_12: appMetadata.appEnviornment.Value,
                                    text_13: notificationAttributes.checklistDetails.checklistDepartureDate,
                                    text_14: notificationAttributes.checklistDetails.checklistState,
                                    text_15: notificationAttributes.checklistDetails.checklistStatus,
                                    text_16: notificationAttributes.taskDetails.taskDetails,
                                    text_17: notificationAttributes.taskDetails.taskTitle,
                                    text_18: daysRemainingDepartureDate,
                                    text_19: notificationAttributes.displayNames
                                }
                            )
                        );
                    )
                );
            Size: =9
            Text: ="ƒ() sendNotification"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =20

        updateNotificationDetails As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                        
                    },
                
                    ClearCollect(col_notificationDetails, selectedTask.notificationDetails);
                
                    Patch(col_notificationDetails,
                        selectedTask.notificationDetails,
                        {
                            email: receivers,
                            isNotified: true,
                            timestamp: DateValue(Text(Now()))
                        }
                    );
                    
                    If(
                        IsEmpty(
                            Errors(col_checklistTasks,
                                Patch(col_checklistTasks, selectedTask,
                                    {
                                        notificationDetails: First(col_notificationDetails)
                                    }
                                )
                            )
                        ),
                        Set(clearingOffice, Blank());
                        Set(isNotifyClearingOfficeVisible, false);
                        Reset(combobox_NotifyClearingOfficeCommand);
                        Reset(combobox_NotifyClearingOfficeLocation);
                        Reset(combobox_NotifyClearingOfficeAvailablePOCs);
                        Reset(combobox_NotifyClearingOfficeAdditionalPOCs);
                        Select(updateChecklistJSON),
                        Notify("Notification Details Patch Error", NotificationType.Error)
                    )
                
                )
            Size: =9
            Text: ="ƒ() updateNotificationDetails"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =21

        attachChangerGearServiceRequest As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)
                        
                    },
                    
                    If(
                        IsEmpty(
                            Errors(col_checklistTasks,
                                Patch(col_checklistTasks, selectedTask,
                                    {
                                        isServiceRequestCompleted: true,
                                        serviceRequestNumber: Upper(input_ChangeGearServiceRequest.Text)
                                    }
                                )
                            )
                        ),
                        "",//Select(updateChecklistJSON),
                        Notify("ChangeGear Service Request Patch Error", NotificationType.Error)
                    )
                )
            Size: =9
            Text: ="ƒ() attachChangerGearServiceRequest"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =22

        newComment As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {   
                        commentRows: If(IsBlank(CountRows(Sort(First(col_commentsJSON.comments).comments, ID, SortOrder.Descending))), 0, CountRows(Sort(First(col_commentsJSON.comments).comments, ID, SortOrder.Descending))),
                        selectedComment: LookUp(col_commentsJSON, ID = 1)
                    },
                
                    With(
                        {
                            comment:
                                {
                                    ID: commentRows + 1,
                                    timestamp: DateTimeValue(Now()),
                                    uid: Text(First(currentUser).uid),
                                    displayName: Text(First(currentUser).displayName),
                                    replyUid: Text(""),
                                    replyDisplayName: Text(""),
                                    notifyEmail: If(IsBlank(combobox_NewComment_Notify.Selected.Mail), Text(""), combobox_NewComment_Notify.Selected.Mail),
                                    notifyUid: If(IsBlank(combobox_NewComment_Notify.Selected.Id), Text(""), combobox_NewComment_Notify.Selected.Id),
                                    comment: Text(input_NewComment.Text)
                                },
                            viewedBy: [{uid: First(currentUser).uid}]
                        },
                
                        If(commentRows = 0,
                            If(IsEmpty(
                                Errors(
                                    ClearCollect(col_commentsJSON,
                                        {
                                            ID: 1,
                                            comments: Table(comment),
                                            viewedBy: viewedBy
                                        }
                                    )
                                )
                            ), 
                            RenameColumns(col_commentsJSON, "ID", "ID");
                            Notify("Comment Submitted", NotificationType.Success), 
                            Notify("Comment Failed to Submit - Please try again...", NotificationType.Warning))
                        );
                        
                        If(commentRows >= 1,    
                            ClearCollect(cc, Ungroup(col_commentsJSON.comments, "comments"));
                            Patch(cc,
                                Defaults(cc),
                                    comment
                            );
                            
                            Patch(col_commentsJSON,
                                {ID: 1},
                                {
                                    comments: cc,
                                    viewedBy: viewedBy
                                }
                            );
                        )
                    );
                
                    If(!IsBlank(combobox_NewComment_Notify.Selected.Mail),
                        UpdateContext(
                            {
                                newCommentNotify:
                                    {
                                        comment: input_NewComment.Text, 
                                        email: combobox_NewComment_Notify.Selected.Mail, 
                                        displayName: combobox_NewComment_Notify.Selected.DisplayName
                                    }
                            }
                        );
                        Select(sendNotificationComment)
                
                    );
                
                    Reset(combobox_NewComment_Notify);
                    Reset(input_NewComment);
                    Reset(toggle_Tagged);
                    Select(updateNewCommentJSON)
                    
                )
            Size: =9
            Text: ="ƒ() newComment"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =23

        buildComments As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        commentRows: Value(CountRows(gallery_Comments.AllItems)),
                        commentsJSON: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).comments
                    },
                
                    ClearCollect(col_commentsJSON,
                        DropColumns(
                            AddColumns(
                                Table(ParseJSON(commentsJSON)),
                                "ID", Value(Value.ID),
                                "viewedBy", ForAll(Table(Value.viewedBy), {uid: Text(Value.uid)}),
                                "comments",ForAll(Table(Value.comments), 
                                    {
                                        ID: Value(Value.ID),
                                        timestamp: DateTimeValue(Value.timestamp),
                                        displayName: Text(Value.displayName),
                                        uid: Text(Value.uid),
                                        replyUid: Text(Value.replyUid),
                                        replyDisplayName: Text(Value.replyDisplayName),
                                        notifyEmail: Text(Value.notifyEmail),
                                        notifyUid: Text(Value.notifyUid),
                                        comment: Text(Value.comment)
                                    }
                                )
                            ),
                            "Value"
                        )
                    );
                    RenameColumns(Ungroup(col_commentsJSON.comments, "comments"), "ID", "ID");
                
                    If(!IsBlank(ShowColumns(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID), "comments").comments),
                        //Notify($"[DEBUG] W1 : CHKID{gallery_checklists.Selected.ID} comment body");
                        If(!(First(currentUser).uid in Ungroup(col_commentsJSON, "viewedBy").uid),
                            //Notify($"[DEBUG] W2 : {First(currentUser).uid} append");
                            ClearCollect(vb, Ungroup(col_commentsJSON, "viewedBy").uid);
                            Patch(vb, Defaults(vb), {uid: First(currentUser).uid});
                            Patch(col_commentsJSON,
                                LookUp(col_commentsJSON, ID = 1),
                                {
                                    viewedBy: vb
                                }
                            );
                            Select(updateNewCommentJSON)
                        )
                    );
                
                    If(commentScope = "newComment",
                        Select(newComment)
                    )
                
                )
            Size: =9
            Text: ="ƒ() buildComments"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =24

        appendCommentsViewedBy As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        commentRows: Value(CountRows(gallery_Comments.AllItems)),
                        commentsJSON: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).comments
                    },
                    
                    ClearCollect(col_commentsJSON,
                        DropColumns(
                            AddColumns(
                                Table(ParseJSON(commentsJSON)),
                                "ID", Value(Value.ID),
                                "viewedBy", ForAll(Table(Value.viewedBy), {uid: Text(Value.uid)}),
                                "comments",ForAll(Table(Value.comments), 
                                    {
                                        ID: Value(Value.ID),
                                        timestamp: DateTimeValue(Value.timestamp),
                                        displayName: Text(Value.displayName),
                                        uid: Text(Value.uid),
                                        replyUid: Text(Value.replyUid),
                                        replyDisplayName: Text(Value.replyDisplayName),
                                        notifyEmail: Text(Value.notifyEmail),
                                        notifyUid: Text(Value.notifyUid),
                                        comment: Text(Value.comment)
                                    }
                                )
                            ),
                            "Value"
                        )
                    );
                
                    RenameColumns(Ungroup(col_commentsJSON.comments, "comments"), "ID", "ID");
                    ClearCollect(vb, Ungroup(col_commentsJSON, "viewedBy").uid);
                    Patch(vb, Defaults(vb), {uid: Text(First(currentUser).uid)});
                    
                )
            Size: =9
            Text: ="ƒ() appendCommentsViewedBy"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =25

        updateNewCommentJSON As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        commentsObj: If(IsEmpty(col_commentsJSON), Blank(), JSON(col_commentsJSON))
                    },
                
                    Switch(commentsObj,
                        Blank(), Notify($"Comment value was blank. Try again..", NotificationType.Error),
                        //Notify("[DEBUG] Updating Comments JSON");
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                comments: commentsObj
                            }
                        )
                    );
                    UpdateContext({commentScope: ""})
                )
            Size: =9
            Text: ="ƒ() updateNewCommentJSON"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =26

        sendNotificationComment As button:
            BorderThickness: =1
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |
                =With(
                    {
                        notificationAttributes: {
                            comment: newCommentNotify.comment,
                            commenter: First(currentUser).displayName,
                            commentee: {
                                displayName: If(IsError(newCommentNotify.displayName) || IsBlank(newCommentNotify.displayName),"Placeholder string comply with schema",newCommentNotify.displayName),
                                email: If(IsError(newCommentNotify.email) || IsBlank(newCommentNotify.email),Blank(),newCommentNotify.email),
                                isNotifyEnabled: If(IsError(newCommentNotify.displayName) || IsBlank(newCommentNotify.displayName), false, true)
                            },
                            checklistDetails: {
                                checklistStatus: If(IsBlank(gallery_checklists.Selected.checklistStatus.Value), "checklistStatus null", gallery_checklists.Selected.checklistStatus.Value),
                                checklistState: If(IsBlank(gallery_checklists.Selected.outprocessingState.Value), "checklistState null", gallery_checklists.Selected.outprocessingState.Value),
                                checklistID: If(IsBlank(gallery_checklists.Selected.ID), "checklist ID null", gallery_checklists.Selected.ID)
                            },
                            taskDetails: {
                                actionItemID: If(IsBlank(gallery_checklistTasks.Selected.actionItem), "actionItem null", gallery_checklistTasks.Selected.actionItem),
                                taskCategory: If(IsBlank(gallery_checklistTasks.Selected.groupValue), "groupValue null", gallery_checklistTasks.Selected.groupValue)
                            }
                        }
                    },
                    /*
                    text: notificationAttributes.commentee.email,
                    text_1: notificationAttributes.taskDetails.actionItemID,
                    text_2: notificationAttributes.taskDetails.taskCategory,
                    text_9: notificationAttributes.checklistDetails.checklistID,
                    text_12: appMetadata.appEnviornment,
                    text_15: notificationAttributes.checklistDetails.checklistStatus,
                    text_3: notificationAttributes.comment,
                    text_4: notificationAttributes.commenter,
                    text_5: notificationAttributes.commentee.displayName,
                    text_6: appMetadata.appUrl
                    */
                    
                    If(notificationAttributes.commentee.isNotifyEnabled,
                        'OBOF-SendNotification-Comment'.Run(
                            {
                                text: notificationAttributes.commentee.email,
                                text_2: notificationAttributes.taskDetails.taskCategory,
                                text_9: notificationAttributes.checklistDetails.checklistID,
                                text_12: appMetadata.appEnviornment.Value,
                                text_15: notificationAttributes.checklistDetails.checklistStatus,
                                text_3: notificationAttributes.comment,
                                text_4: notificationAttributes.commenter,
                                text_5: notificationAttributes.commentee.displayName,
                                text_6: appMetadata.appUrl
                            }
                        )
                    )
                );
            Size: =9
            Text: ="ƒ() sendNotificationComment"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =27

        sendNotificationSupervisorDesignee As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |
                =With(
                    {
                        notificationAttributes: {
                            departingEmployee: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_EmployeeName_4.Selected, combobox_EmployeeName_3.Selected),
                            supervisor: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Supervisor_4.Selected, combobox_Supervisor_3.Selected),
                            designee: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Designee_4.Selected, combobox_Designee_3.Selected),
                            checklistID: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", gallery_checklists.Selected.ID, chkRecord.ID),
                            departureDate: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", datepicker_DepartureDate_4.SelectedDate,chkRecord.departureDate),
                            organization: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", combobox_Organization_4.Selected.ORG_NAME, combobox_Organization_3.Selected.ORG_NAME),
                            organizationCode: If(sendNotificationSupervisorDesigneeScope = "updateChecklistAttributes", input_OrganizationCode_4.Text, input_OrganizationCode_3.Text)
                        }
                    },
                    
                    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && !(notificationAttributes.designee.Id = First(currentUser).uid),
                        Set(receivers, notificationAttributes.designee.Mail)
                    );
                    If(!(notificationAttributes.supervisor.Id = First(currentUser).uid) && notificationAttributes.designee.Id = First(currentUser).uid,
                        Set(receivers, notificationAttributes.supervisor.Mail)
                    );
                    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && (notificationAttributes.designee.Id = First(currentUser).uid),
                        Set(receivers, Blank())
                    );
                    If((First(currentUser).uid <> notificationAttributes.supervisor.Id) && (First(currentUser).uid <> notificationAttributes.designee.Id),
                        Set(receivers, notificationAttributes.supervisor.Mail)
                    );
                
                    If(!IsBlank(receivers),
                        'OBOF-SendNotification-SupervisorDesignee'.Run(
                            {
                                text: receivers,
                                text_1: notificationAttributes.departingEmployee.DisplayName,
                                text_2: notificationAttributes.supervisor.DisplayName,
                                text_3: notificationAttributes.designee.DisplayName,
                                text_4: notificationAttributes.checklistID,
                                text_5: notificationAttributes.departureDate,
                                text_6: notificationAttributes.organization,
                                text_7: notificationAttributes.organizationCode,
                                text_8: appMetadata.appEnviornment.Value,
                                text_9: appMetadata.appUrl
                            }
                        )
                    )
                );
            Size: =9
            Text: ="ƒ() sendNotificationSupervisorDesignee"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =28

        validateCompletionSignature As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =With(
                    {
                        tasksMissingSignatureForCompletion: If(signatureType = "signatureEmployee", 
                            Filter(col_checklistTasks, actionItem <> 36 && actionItem <> 37 && {t: signatureType, Value: 0} in taskCompletionTelemetry),
                            Filter(col_checklistTasks, actionItem <> 37 && (
                                {t: Index(signatureTypeArray, 1).Value, Value: 0} in taskCompletionTelemetry ||
                                {t: Index(signatureTypeArray, 2).Value, Value: 0} in taskCompletionTelemetry ||
                                {t: Index(signatureTypeArray, 3).Value, Value: 0} in taskCompletionTelemetry)
                            )
                        )
                    },
                
                    If(CountRows(tasksMissingSignatureForCompletion) > 0, 
                        ClearCollect(col_missingSignatures, tasksMissingSignatureForCompletion);
                        Set(isMainPopupVisible, true);
                        Set(popupScope, "popup_main_missingCompletionTasks"),
                        Set(isBuildChecklistTasksRunning, true);
                        Set(runBuildChecklistTasks, true);
                        Select(recordTransactLog);
                    )
                )
            Size: =9
            Text: ="ƒ() validateCompletionSignature"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =29

        validateChecklistComplete As button:
            BorderThickness: =1
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(79, 90, 94, 1)
            FontWeight: =FontWeight.Normal
            Height: =24
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: |-
                =If(
                    {isCompleted: false} in col_checklistTasks.isCompleted,
                    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = "Completed", 
                        Patch('OBOF-DS-checklistOutProcessing',
                            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                            {
                                outprocessingState: {Value: "In Progress"},
                                outprocessingCompletedDate: Blank()
                            }
                        );
                        Select(refreshChecklists);
                    );
                    Notify("Chekclist Not Completed", NotificationType.Warning),
                    Patch('OBOF-DS-checklistOutProcessing',
                        LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),
                        {
                            outprocessingState: {Value: "Completed"},
                            outprocessingCompletedDate: Now()
                        }
                    );
                    Select(refreshChecklists);
                    Notify("Checklist Completed", NotificationType.Success)
                );
            Size: =9
            Text: ="ƒ() validateChecklistComplete"
            Width: =Parent.Width - 10
            X: =40
            Y: =40
            ZIndex: =30

