{
  "ComponentAllowCustomization": true,
  "ComponentChangedSinceFileImport": true,
  "ComponentDefinitionInfo": {
    "AllowAccessToGlobals": true,
    "Children": [],
    "ControlPropertyState": [
      "Fill",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "",
        "InvariantPropertyName": "Height",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "",
        "InvariantPropertyName": "Width",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "X",
      "Y",
      "ZIndex",
      "Refresh_GlobalFilter",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "true",
        "InvariantPropertyName": "isChecklistComplete",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "",
        "InvariantPropertyName": "OnReset",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "Refresh_Delay",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "true",
        "InvariantPropertyName": "NewChcklist",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "BuildChecklistTasks_Delay",
      "BuildChecklistTasks_ChecklistID",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "Set(isBuildChecklistTasksRunning, true);\r\n\r\n// COLLECTION CHECKLIST TEMPLATES\r\nRefresh('OBOF-DS-appSettings');\r\nRefresh('OBOF-DS-userDelegation');\r\nRefresh('GLBL-DS-userRegistration');\r\nRefresh('OBOF-DS-checklistOutProcessing');\r\nRefresh('OBOF-DS-templateOutProcessingChecklist');\r\nRefresh('OBOF-DS-templateOutProcessingChecklistLocalTask');\r\nClearCollect(col_templateChecklistOutprocessing, SortByColumns('OBOF-DS-templateOutProcessingChecklist', \"actionItem\", SortOrder.Ascending));\r\nClearCollect(col_templateChecklistOutprocessingLocalTask, SortByColumns('OBOF-DS-templateOutProcessingChecklistLocalTask', \"actionItem\", SortOrder.Ascending));\r\n\r\nWith(\r\n    {\r\n        outprocessingChecklistItems: ShowColumns(\r\n            Filter('OBOF-DS-checklistOutProcessing',outprocessingState.Value = GlobalFilter),\r\n            \"ID\",\r\n            \"uidUser\",\r\n            \"uidDesignee\",\r\n            \"uidSupervisor\",\r\n            \"checklistStatus\",\r\n            \"departureDate\",\r\n            \"outprocessingState\",\r\n            \"outprocessingCompletedDate\",\r\n            \"isDelegated\",\r\n            \"Created\",\r\n            \"newEmployerAgency\",\r\n            \"newEmployerAgencyAddress\"\r\n        ) // SELECT COLUMNS\r\n    },\r\n    With(\r\n        {\r\n            // AGGREGATE ALL FOREIGN TABLES INTO A SINGLE OBJECT\r\n            outprocessingChecklistItemsAggregation: AddColumns(\r\n                outprocessingChecklistItems,\r\n\r\n                // IDENTIFY IF EMPLOYEE CHECKLIST IS DELEGATED -->> AGGREGATE DATA ON EMPLOYEE\r\n                // IF isDelegate\r\n                \"employee\", If(isDelegated, \r\n                    ShowColumns(Table(LookUp('OBOF-DS-userDelegation' As ud, uidUser = ud.uid)), \r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"), \r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidUser = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\")), // END IF isDelegate | employee\r\n                \r\n                // AGGREGATE DATA ON DESIGNEE\r\n                \"designee\", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid).uid),\r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"),\r\n                    With(\r\n                        {\r\n                            graphApiResponseDesignee: Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/{uidDesignee}\", \"GET\", \"\")\r\n                        },\r\n                        [\r\n                            {\r\n                                uid: Text(graphApiResponseDesignee.id),\r\n                                displayName: Text(graphApiResponseDesignee.displayName),\r\n                                givenName: Text(graphApiResponseDesignee.givenName),\r\n                                surname: Text(graphApiResponseDesignee.surname),\r\n                                jobTitle: Text(graphApiResponseDesignee.jobTitle),\r\n                                mail: Text(graphApiResponseDesignee.mail),\r\n                                organization: \"\",\r\n                                organizationCode: \"\",\r\n                                payPlan_Grade: \"\",\r\n                                payPlan: \"\",\r\n                                grade: \"\",\r\n                                department: \"\",\r\n                                service: [{Value: \"\"}],\r\n                                militaryServiceBranch: \"\"\r\n                            }\r\n                        ]\r\n                    )\r\n                ),\r\n                \r\n                // AGGREGATE DATA ON SUPERVISOR\r\n                \"supervisor\", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid).uid),\r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"),\r\n                    With(\r\n                        {\r\n                            graphApiResponseSupervisor: Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/{uidSupervisor}\", \"GET\", \"\")\r\n                        },\r\n                        [\r\n                            {\r\n                                uid: Text(graphApiResponseSupervisor.id),\r\n                                displayName: Text(graphApiResponseSupervisor.displayName),\r\n                                givenName: Text(graphApiResponseSupervisor.givenName),\r\n                                surname: Text(graphApiResponseSupervisor.surname),\r\n                                jobTitle: Text(graphApiResponseSupervisor.jobTitle),\r\n                                mail: Text(graphApiResponseSupervisor.mail),\r\n                                organization: \"\",\r\n                                organizationCode: \"\",\r\n                                payPlan_Grade: \"\",\r\n                                payPlan: \"\",\r\n                                grade: \"\",\r\n                                department: \"\",\r\n                                service: [{Value: \"\"}],\r\n                                militaryServiceBranch: \"\"\r\n                            }\r\n                        ]\r\n                    )\r\n                )\r\n            )\r\n        },\r\n\r\n        Set(des, Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/35573b91-3205-4a0a-9e69-771b4d67260f\", \"GET\", \"\",{ContentType: \"application/json;odata=nometadata\"}));\r\n        \r\n        //35573b91-3205-4a0a-9e69-771b4d67260f\r\n        // BUILD COLLECTION FROM FOREIGN TABLE AGGREGATE\r\n        ClearCollect(col_outprocessingChecklistItems, outprocessingChecklistItemsAggregation);\r\n        ClearCollect(aaa, outprocessingChecklistItems)\r\n    )\r\n);\r\nIf(!Delay,\r\n    Set(isBuildChecklistTasksRunning, false);\r\n)   \r\n",
        "InvariantPropertyName": "Refresh",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "true",
        "InvariantPropertyName": "DelegationNewChecklist",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        tasksMissingSignatureForCompletion: If(signatureType = \"signatureEmployee\", \r\n            Filter(col_checklistTasks, actionItem <> 36 && actionItem <> 37 && {t: signatureType, Value: 0} in taskCompletionTelemetry),\r\n            Filter(col_checklistTasks, actionItem <> 37 && (\r\n                {t: Index(signatureTypeArray, 1).Value, Value: 0} in taskCompletionTelemetry ||\r\n                {t: Index(signatureTypeArray, 2).Value, Value: 0} in taskCompletionTelemetry ||\r\n                {t: Index(signatureTypeArray, 3).Value, Value: 0} in taskCompletionTelemetry)\r\n            )\r\n        )\r\n    },\r\n\r\n    If(CountRows(tasksMissingSignatureForCompletion) > 0, \r\n        ClearCollect(col_missingSignatures, tasksMissingSignatureForCompletion);\r\n        Set(isMainPopupVisible, true);\r\n        Set(popupScope, \"popup_main_missingCompletionTasks\"),\r\n        Set(isBuildChecklistTasksRunning, true);\r\n        Set(runBuildChecklistTasks, true);\r\n        //Select(recordTransactLog); // REMOVED CODE LEFT FOR REFERENCE\r\n    )\r\n)",
        "InvariantPropertyName": "ValidateCompletionSignature",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "DeletChecklist_ChecklistID",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)\r\n    },\r\n    With(\r\n        {\r\n            transactions: selectedTask.transactLog,\r\n            actionItem: gallery_checklistTasks.Selected.actionItem,\r\n            groupValue: gallery_checklistTasks.Selected.groupValue,\r\n            isDelegated: gallery_checklists.Selected.isDelegated,\r\n            currentUserName: First(currentUser).surname & \", \" & First(currentUser).givenName,\r\n            delegatedUserName: First(Ungroup(gallery_checklists.Selected.employee, \"surname\")).surname & \", \" & First(Ungroup(gallery_checklists.Selected.employee, \"surname\")).givenName\r\n        },\r\n       \r\n            ClearCollect(ta, transactions);\r\n\r\n            Switch(LogType,\r\n            \r\n                \"addSignature\", \r\n                    Set(log,\r\n                        {\r\n                            logObj: \r\n                                {\r\n                                    logID: Value(Value(Last(ta).ID) + 1),\r\n                                    logMsg: Text(\"[USER: \" & First(currentUser).mail & \"];[ACTION ITEM: \" & actionItem & \"];[FUNCTION: Add Signature];[DELEGATED: \" & Upper(isDelegated) & \"];Action Completed By: \" & If(isDelegated, currentUserName & \" on behalf of employee \" & delegatedUserName, currentUserName) & \" in group \" & groupValue) & \".\",\r\n                                    logTimestamp: DateValue(Text(Now(), \"mm/dd/yyyy hh:mm:ss\"))\r\n                                }\r\n                        }\r\n                    ),\r\n\r\n                \"removeSignature\", \r\n                    Set(log,\r\n                        {\r\n                            logObj: \r\n                                {\r\n                                    logID: Value(Value(Last(ta).ID) + 1),\r\n                                    logMsg: Text(\"[USER: \" & First(currentUser).mail & \"];[ACTION ITEM: \" & actionItem & \"];[FUNCTION: Remove Signature];[DELEGATED: \" & Upper(isDelegated) & \"];Action Reversed By: \" & If(isDelegated, currentUserName & \" on behalf of employee \" & delegatedUserName, currentUserName) & \" in group \" & groupValue) & \".\",\r\n                                    logTimestamp: DateValue(Text(Now(), \"mm/dd/yyyy hh:mm:ss\"))\r\n                                }\r\n                        }\r\n                    )\r\n\r\n            );\r\n            \r\n            Patch(ta,\r\n                Defaults(ta), \r\n                {\r\n                    ID: log.logObj.logID,\r\n                    log: log.logObj.logMsg,\r\n                    timestamp: log.logObj.logTimestamp\r\n                }\r\n            );\r\n\r\n            Patch(col_checklistTasks,\r\n                selectedTask,\r\n                {\r\n                    transactLog: ta\r\n                }\r\n            );\r\n            Clear(ta);\r\n        );\r\n    /*\r\n    // REMOVE CODE BUT LEFT FOR REFERENCE\r\n    Switch(transactLogScope,\r\n        \"addSignature\",\r\n            Select(signatureTask),\r\n        \"removeSignature\",\r\n            Select(eraseSignatureTask),\r\n        \"updateChecklist\",\r\n            Select(updateChecklistAttributes);\r\n    );\r\n    */\r\n);\r\n\r\n",
        "InvariantPropertyName": "RecordTransactLog",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "RecordTransactLog_LogType",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "true",
        "InvariantPropertyName": "UpdateChecklistJSON",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "SignatureTask_ActionItem",
      "EraseSignatureTask_ActionItem",
      "EraseSignatureTask_SignatureType",
      "SignatureTask_SignatureType",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, ActionItem = ID),\r\n        returnCode: Table({})\r\n    },\r\n\r\n    Set(isComplete, false);\r\n    Switch(SignatureType,\r\n        \"signatureDesignee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureSupervisor\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureSupervisorDesignee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureEmployee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureMSO\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureClearingOffice\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        ),\r\n        \"signatureNAACB\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true),\r\n            \"\"\r\n        )\r\n    );\r\n\r\n    If(!IsBlank(selectedTask) && !isComplete,\r\n        Patch(col_checklistTasks,\r\n            selectedTask,\r\n            Switch(SignatureType,\r\n                \"signatureDesignee\", {\r\n                    taskCompletionTelemetry: [\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureDesignee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureDesignee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureDesignee.date, \r\n                                isComplete: selectedTask.signatureDesignee.isComplete, \r\n                                signature: selectedTask.signatureDesignee.signature,\r\n                                uid: selectedTask.signatureDesignee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureSupervisor\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0, \r\n                            {Value: 1, t: \"signatureSupervisor\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureSupervisor: \r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureSupervisor.date, \r\n                                isComplete: selectedTask.signatureSupervisor.isComplete, \r\n                                signature: selectedTask.signatureSupervisor.signature,\r\n                                uid: selectedTask.signatureSupervisor.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureSupervisorDesignee\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureSupervisorDesignee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureSupervisorDesignee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureSupervisorDesignee.date, \r\n                                isComplete: selectedTask.signatureSupervisorDesignee.isComplete, \r\n                                signature: selectedTask.signatureSupervisorDesignee.signature,\r\n                                uid: selectedTask.signatureSupervisorDesignee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureEmployee\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureEmployee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureEmployee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureEmployee.date, \r\n                                isComplete: selectedTask.signatureEmployee.isComplete, \r\n                                signature: selectedTask.signatureEmployee.signature,\r\n                                uid: selectedTask.signatureEmployee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureMSO\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0, \r\n                            {Value: 1, t: \"signatureMSO\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureMSO:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureMSO.date, \r\n                                isComplete: selectedTask.signatureMSO.isComplete, \r\n                                signature: selectedTask.signatureMSO.signature,\r\n                                uid: selectedTask.signatureMSO.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureClearingOffice\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0, \r\n                            {Value: 1, t: \"signatureClearingOffice\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureClearingOffice:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureClearingOffice.date, \r\n                                isComplete: selectedTask.signatureClearingOffice.isComplete, \r\n                                signature: selectedTask.signatureClearingOffice.signature,\r\n                                uid: selectedTask.signatureClearingOffice.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureNAACB\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value), t: \"signatureDesignee\"},\r\n                        {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value), t: \"signatureSupervisor\"},\r\n                        {Value: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value), t: \"signatureSupervisorDesignee\"},\r\n                        {Value: If(selectedTask.isEmployeeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value), t: \"signatureEmployee\"},\r\n                        {Value: If(selectedTask.isMSOACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value), t: \"signatureMSO\"},\r\n                        {Value: If(selectedTask.isClearingOffice, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value), t: \"signatureClearingOffice\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 0, \r\n                            {Value: 1, t: \"signatureNAACB\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                        ),\r\n                    ],\r\n                    signatureDesignee: {\r\n                        date: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureDesignee.date),\r\n                        isComplete: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, selectedTask.signatureDesignee.isComplete), \r\n                        signature: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureDesignee.signature), \r\n                        uid: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureDesignee.uid)},\r\n                    signatureSupervisor: {\r\n                        date: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisor.date),\r\n                        isComplete: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisor.isComplete), \r\n                        signature: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisor.signature), \r\n                        uid: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisor.uid)},\r\n                    signatureSupervisorDesignee: {\r\n                        date: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisorDesignee.date),\r\n                        isComplete: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisorDesignee.isComplete), \r\n                        signature: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisorDesignee.signature), \r\n                        uid: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisorDesignee.uid)},\r\n                    signatureEmployee: {\r\n                        date: If(selectedTask.isEmployeeACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureEmployee.date),\r\n                        isComplete: If(selectedTask.isEmployeeACB, 1, selectedTask.signatureEmployee.isComplete), \r\n                        signature: If(selectedTask.isEmployeeACB, Text(\"\"), selectedTask.signatureEmployee.signature), \r\n                        uid: If(selectedTask.isEmployeeACB, Text(\"\"), selectedTask.signatureEmployee.uid)},\r\n                    signatureMSO: {\r\n                        date: If(selectedTask.isMSOACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureMSO.date),\r\n                        isComplete: If(selectedTask.isMSOACB, 1, selectedTask.signatureMSO.isComplete), \r\n                        signature: If(selectedTask.isMSOACB, Text(\"\"), selectedTask.signatureMSO.signature), \r\n                        uid: If(selectedTask.isMSOACB, Text(\"\"), selectedTask.signatureMSO.uid)},\r\n                    signatureClearingOffice: {\r\n                        date: If(selectedTask.isClearingOffice, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureClearingOffice.date),\r\n                        isComplete: If(selectedTask.isClearingOffice, 1, selectedTask.signatureClearingOffice.isComplete), \r\n                        signature: If(selectedTask.isClearingOffice, Text(\"\"), selectedTask.signatureClearingOffice.signature), \r\n                        uid: If(selectedTask.isClearingOffice, Text(\"\"), selectedTask.signatureClearingOffice.uid)},\r\n                    signatureNAACB: {\r\n                        date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}\r\n                    }\r\n            )\r\n        )\r\n    );\r\n\r\n    returnCode\r\n)",
        "InvariantPropertyName": "SignatureTask",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)\r\n    },\r\n    If(!IsBlank(selectedTask),\r\n        If(\r\n            IsEmpty(\r\n                Errors(col_checklistTasks,\r\n                    Patch(col_checklistTasks,\r\n                        selectedTask,\r\n                        Switch(signatureType,\r\n                            \"signatureDesignee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: 0, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureSupervisor\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: 0, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureSupervisor: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureSupervisorDesignee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: 0, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureSupervisorDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureEmployee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: 0, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureEmployee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureMSO\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: 0, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureMSO: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureClearingOffice\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: 0, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureClearingOffice: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureNAACB\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value), t: \"signatureDesignee\"},\r\n                                    {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value), t: \"signatureSupervisor\"},\r\n                                    {Value: If(selectedTask.isDesigneeACB || selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value), t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: If(selectedTask.isEmployeeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value), t: \"signatureEmployee\"},\r\n                                    {Value: If(selectedTask.isMSOACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value), t: \"signatureMSO\"},\r\n                                    {Value: If(selectedTask.isClearingOffice, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value), t: \"signatureClearingOffice\"},\r\n                                    {Value: 0, t: \"signatureNAACB\"},\r\n                                ],\r\n                                signatureDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureSupervisor: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureSupervisorDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureEmployee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureMSO: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureClearingOffice: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureNAACB: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")}\r\n                                }\r\n                        )\r\n                    )\r\n                )\r\n            ),\r\n            \r\n            // REMOVED CODE BUT LEFT AS REFERENCE\r\n            //Select(updateChecklistJSON);\r\n            Set(signatureType, Blank());,\r\n            Notify(\"[col_checklistTasks] patch error\", NotificationType.Error)\r\n        ),\r\n        Notify(\"[ERASE] ]Oh boy, this is super embarassing... we did not find a task UID associated with that signature. Not really sure what else to tell you right now expcet today is gonna be a great day!\", NotificationType.Error)\r\n    )\r\n)",
        "InvariantPropertyName": "EraseSignatureTask",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "true",
        "InvariantPropertyName": "isValidateCompletionSignature",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "UpdateChecklistAttributes_CurrentGalleryID",
      "RecentlyPatchedChecklist",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "Set(recentlySelectedChecklist, gallery_checklists.Selected);\r\nIf(\r\n    // BEGIN LOGICAL TEST\r\n    IsBlank(combobox_EmployeeName_4.Selected.Mail) ||\r\n    IsBlank(combobox_Supervisor_4.Selected.Id) ||\r\n    IsBlank(combobox_Designee_4.Selected.Id) ||\r\n    IsBlank(combobox_Organization_4.Selected.Label) ||\r\n    IsBlank(input_OrganizationCode_4.Text) ||\r\n    IsBlank(combobox_Service_4.Selected.Value) ||\r\n    If(combobox_Service_4.Selected.Value = \"Military\" && IsBlank(combobox_MilitaryServiceBranch_4.Selected.Value), true, false) ||\r\n    IsBlank(combobox_PayPlanGrade_4.Selected.v) ||\r\n    IsBlank(combobox_OutprocessingStatus_4.Selected.Value) ||\r\n    IsBlank(datepicker_DepartureDate_4.SelectedDate) ||\r\n    If(combobox_EmployeeName_4.Selected.Id = combobox_Designee_4.Selected.Id, true, false) ||\r\n    If(combobox_EmployeeName_4.Selected.Id = combobox_Supervisor_4.Selected.Id, true, false) ||\r\n    If(\"Transfer\" in combobox_OutprocessingStatus_4.Selected.Value && (IsBlank(input_NewEmployerName_4.Text && IsBlank(input_NewEmployerAddress_4.Text))), true, false),\r\n    // END LOGICAL TEST\r\n\r\n    // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST\r\n    Set(popupScope, \"popup_main_updateChecklistAttributesPatch\");\r\n    Set(isMainPopupVisible, true),\r\n    // END TRUE RESULT - LOGICAL TEST\r\n\r\n    With(\r\n        {\r\n            checklistAttributes: {\r\n                supervisor: combobox_Supervisor_4.Selected,\r\n                designee: combobox_Designee_4.Selected,\r\n                organization: combobox_Organization_4.Selected,\r\n                organizationCode: input_OrganizationCode_4.Text,\r\n                service: combobox_Service_4.Selected,\r\n                militaryServiceBranch: combobox_MilitaryServiceBranch_4.Selected,\r\n                payplanGrade: combobox_PayPlanGrade_4.Selected,\r\n                officeLocation: input_OfficeLocation_4.Text,\r\n                city: input_City_4.Text,\r\n                outProcessingStatus: combobox_OutprocessingStatus_4.Selected,\r\n                departureDate: datepicker_DepartureDate_4.SelectedDate,\r\n                newEmployerAgency: input_NewEmployerName_4.Text,\r\n                newEmployerAddress: input_NewEmployerAddress_4.Text\r\n            },\r\n            selectedChecklistUser: If(gallery_checklists.Selected.isDelegated, LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser), LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser)),\r\n            selectedChecklist: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)\r\n        },\r\n\r\n        If(gallery_checklists.Selected.isDelegated,\r\n            Patch('OBOF-DS-userDelegation',\r\n                selectedChecklistUser,\r\n                {\r\n                    militaryServiceBranch: checklistAttributes.militaryServiceBranch,\r\n                    service: checklistAttributes.service,\r\n                    payPlan_Grade: checklistAttributes.payplanGrade.v,\r\n                    grade: checklistAttributes.payplanGrade.g,\r\n                    payPlan: checklistAttributes.payplanGrade.p,\r\n                    organization: checklistAttributes.organization,\r\n                    organizationCode: checklistAttributes.organizationCode,\r\n                    officeLocation: checklistAttributes.officeLocation,\r\n                    city: checklistAttributes.city,\r\n                    delegationUid: checklistAttributes.designee.Id,\r\n                    supervisor: {\r\n                        '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                        Claims: Concatenate(\"i:0#.f|membership|\", checklistAttributes.supervisor.Mail),\r\n                        Department: checklistAttributes.supervisor.Department,\r\n                        DisplayName: checklistAttributes.supervisor.DisplayName,\r\n                        Email: checklistAttributes.supervisor.Mail,\r\n                        JobTitle: checklistAttributes.supervisor.JobTitle,\r\n                        Picture: \"\"\r\n                    },\r\n                    supervisorDisplayName: checklistAttributes.supervisor.DisplayName,\r\n                    supervisorEmail: checklistAttributes.supervisor.Mail,\r\n                    supervisorGivenName: checklistAttributes.supervisor.GivenName,\r\n                    supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,\r\n                    supervisorSurname: checklistAttributes.supervisor.Surname,\r\n                    supervisorUid: checklistAttributes.supervisor.Id\r\n                }\r\n            ),\r\n            Patch('GLBL-DS-userRegistration',\r\n                selectedChecklistUser,\r\n                {\r\n                    militaryServiceBranch: checklistAttributes.militaryServiceBranch,\r\n                    service: checklistAttributes.service,\r\n                    payPlan_Grade: checklistAttributes.payplanGrade.v,\r\n                    grade: checklistAttributes.payplanGrade.g,\r\n                    payPlan: checklistAttributes.payplanGrade.p,\r\n                    organization: checklistAttributes.organization,\r\n                    organizationCode: checklistAttributes.organizationCode,\r\n                    officeLocation: checklistAttributes.officeLocation,\r\n                    city: checklistAttributes.city,\r\n                    supervisor: {\r\n                        '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                        Claims: Concatenate(\"i:0#.f|membership|\", checklistAttributes.supervisor.Mail),\r\n                        Department: checklistAttributes.supervisor.Department,\r\n                        DisplayName: checklistAttributes.supervisor.DisplayName,\r\n                        Email: checklistAttributes.supervisor.Mail,\r\n                        JobTitle: checklistAttributes.supervisor.JobTitle,\r\n                        Picture: \"\"\r\n                    },\r\n                    supervisorDisplayName: checklistAttributes.supervisor.DisplayName,\r\n                    supervisorEmail: checklistAttributes.supervisor.Mail,\r\n                    supervisorGivenName: checklistAttributes.supervisor.GivenName,\r\n                    supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,\r\n                    supervisorSurname: checklistAttributes.supervisor.Surname,\r\n                    supervisorUid: checklistAttributes.supervisor.Id\r\n                }\r\n            )\r\n        );\r\n        If(\r\n            IsEmpty(\r\n                Errors('OBOF-DS-checklistOutProcessing',\r\n                    Patch('OBOF-DS-checklistOutProcessing',\r\n                        selectedChecklist,\r\n                        {\r\n                            uidSupervisor: checklistAttributes.supervisor.Id,\r\n                            uidDesignee: checklistAttributes.designee.Id,\r\n                            checklistStatus: checklistAttributes.outProcessingStatus,\r\n                            departureDate: checklistAttributes.departureDate,\r\n                            newEmployerAgency: checklistAttributes.newEmployerAgency,\r\n                            newEmployerAgencyAddress:checklistAttributes.newEmployerAddress\r\n                        }\r\n                    )\r\n                )\r\n            ),\r\n            Notify(\"Updated\", NotificationType.Success),\r\n            Notify(\"[OBOF-DS-checklistOutProcessing] patch error\", NotificationType.Error)\r\n        );\r\n        Set(isEditChecklistVisible, false);\r\n        \r\n        /*\r\n        // REMOVED CODE BUT LEFT FOR REFERENCE\r\n        If(runSendNotificationSupervisorDesignee,\r\n            Select(sendNotificationSupervisorDesignee);\r\n        );\r\n        Select(refreshChecklists)\r\n        */\r\n    )\r\n)",
        "InvariantPropertyName": "UpdateChecklistAttributes",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "RecentlyPatchedUser",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "Set(isBuildChecklistTasksRunning, true);\r\nWith(\r\n    {\r\n        checklistJSON: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).checklistJSON\r\n    },\r\n    //Set(cjs, checklistJSON);\r\n    //Set(bbb, JSON(checklistJSON)));\r\n\r\n    ClearCollect(col_ParsedJSON,\r\n        DropColumns(\r\n            AddColumns(\r\n                Table(ParseJSON(checklistJSON)),\r\n                \"ID\", Value(Value.ID),\r\n                \"actionItem\", Value(Value.actionItem),\r\n                \"groupValue\", Text(Value.groupValue),\r\n                \"service\", DropColumns(AddColumns(RenameColumns(Table(Value.service), \"Value\", \"V\"), \"Value\", Text(V.Value)), \"V\"),\r\n                \"isSupervisorACB\", If(Value(Value.isSupervisorACB) = 1, true, false),\r\n                \"isDesigneeACB\", If(Value(Value.isDesigneeACB) = 1, true, false),\r\n                \"isEmployeeACB\", If(Value(Value.isEmployeeACB) = 1, true, false),\r\n                \"isMSOACB\", If(Value(Value.isMSOACB) = 1, true, false),\r\n                \"isNAACB\", If(Value(Value.isNAACB) = 1, true, false),\r\n                \"isClearingOffice\", If(Value(Value.isClearingOffice) = 1, true, false),\r\n                \"uid\", Text(Value.uid),\r\n                \"autoNotify\", If(Value(Value.autoNotify) = 1, true, false),\r\n                \"extendAttributes\", If(Value(Value.extendAttributes) = 1, true, false),\r\n                \"dueInDays\", Value(Value.dueInDays),\r\n                \"dueInDaysEval\", {\r\n                        dueDate: With({taskDD: gallery_checklists.Selected.departureDate},\r\n                                    DateValue(If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                        DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                        If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays)+ (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                            DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                                DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days))))), \r\n                        daysRemaining: With({taskDDMod: If(Weekday(DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                    DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                    If(Weekday(DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                        DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                            DateAdd(DateValue(Text(gallery_checklists.Selected.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)))},\r\n                                Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))\r\n                    },\r\n                \"mandatoryClearingOfficeACB\", If(Value(Value.mandatoryClearingOfficeACB) = 1, true, false),\r\n                \"notificationDetails\", {\r\n                    isNotified: If(Value(Value.notificationDetails.isNotified) = 1, true, false),\r\n                    email: Text(Value.notificationDetails.email),\r\n                    timestamp: DateValue(Text(Value.notificationDetails.timestamp))\r\n                },\r\n                \"createServiceRequest\", If(Value(Value.createServiceRequest) = 1, true, false),\r\n                \"isServiceRequestCompleted\", If(Value(Value.isServiceRequestCompleted) = 1, true, false),\r\n                \"serviceRequestNumber\", Text(Value.serviceRequestNumber),\r\n                \"urlServiceRequest\", Text(Value.urlServiceRequest),\r\n                \"signatureClearingOffice\", {\r\n                        date: DateTimeValue(Text(Value.signatureClearingOffice.date)), \r\n                        isComplete: Value(Value.signatureClearingOffice.isComplete), \r\n                        signature: Text(Value.signatureClearingOffice.signature), \r\n                        uid: Text(Value.signatureClearingOffice.uid)\r\n                    },\r\n                \"signatureEmployee\", {\r\n                        date: DateTimeValue(Text(Value.signatureEmployee.date)), \r\n                        isComplete: Value(Value.signatureEmployee.isComplete), \r\n                        signature: Text(Value.signatureEmployee.signature), \r\n                        uid: Text(Value.signatureEmployee.uid)\r\n                    },\r\n                \"signatureMSO\", {\r\n                        date: DateTimeValue(Text(Value.signatureMSO.date)), \r\n                        isComplete: Value(Value.signatureMSO.isComplete), \r\n                        signature: Text(Value.signatureMSO.signature), \r\n                        uid: Text(Value.signatureMSO.uid)\r\n                    },\r\n                \"signatureDesignee\", {\r\n                        date: DateTimeValue(Text(Value.signatureDesignee.date)), \r\n                        isComplete: Value(Value.signatureDesignee.isComplete), \r\n                        signature: Text(Value.signatureDesignee.signature), \r\n                        uid: Text(Value.signatureDesignee.uid)\r\n                    },\r\n                \"signatureSupervisor\", {\r\n                        date: DateTimeValue(Text(Value.signatureSupervisor.date)), \r\n                        isComplete: Value(Value.signatureSupervisor.isComplete), \r\n                        signature: Text(Value.signatureSupervisor.signature), \r\n                        uid: Text(Value.signatureSupervisor.uid)\r\n                    },\r\n                \"signatureSupervisorDesignee\", {\r\n                        date: DateTimeValue(Text(Value.signatureSupervisorDesignee.date)), \r\n                        isComplete: Value(Value.signatureSupervisorDesignee.isComplete), \r\n                        signature: Text(Value.signatureSupervisorDesignee.signature), \r\n                        uid: Text(Value.signatureSupervisorDesignee.uid)\r\n                    },\r\n                \"signatureNAACB\", {\r\n                        date: DateTimeValue(Text(Value.signatureNAACB.date)), \r\n                        isComplete: Value(Value.signatureNAACB.isComplete), \r\n                        signature: Text(Value.signatureNAACB.signature), \r\n                        uid: Text(Value.signatureNAACB.uid)\r\n                    },\r\n                \"built\", Now(),\r\n                \"extendAttributesJSON\", ForAll(Table(Value.extendAttributesJSON), {ID: Value(Value.ID), description: Text(Value.description), response: Text(Value.response), responded: If(Value(Value.responded) = 1, true, false)}),\r\n                \"transactLog\", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateTimeValue(Text(Value.timestamp))})\r\n                ),\r\n            \"Value\"\r\n        )\r\n    );\r\n    //\"transactLog\", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateValue(Text(Value.timestamp))})\r\n\r\n    // SET PRIMARY KEY AS [ID]\r\n    RenameColumns(Ungroup(col_ParsedJSON.extendAttributesJSON, \"extendAttributesJSON\"),\"ID\",\"ID\");\r\n    // SET PRIMARY KEY AS [ID]\r\n    RenameColumns(Ungroup(col_ParsedJSON.transactLog, \"transactLog\"),\"ID\",\"ID\");\r\n    \r\n    ClearCollect(col_checklistTasks,\r\n        RenameColumns(\r\n            AddColumns(\r\n                AddColumns(col_ParsedJSON,\r\n                    \"taskCompletionTelemetry\", Table(\r\n                        If(isClearingOffice, {Value: signatureClearingOffice.isComplete, t: \"signatureClearingOffice\"}, {Value: -1, t: \"signatureClearingOffice\"}),\r\n                        If(isEmployeeACB, {Value: signatureEmployee.isComplete, t: \"signatureEmployee\"}, {Value: -1, t: \"signatureEmployee\"}),\r\n                        If(isMSOACB, {Value: signatureMSO.isComplete, t: \"signatureMSO\"}, {Value: -1, t: \"signatureMSO\"}),\r\n                        If(isDesigneeACB && !isSupervisorACB, {Value: signatureDesignee.isComplete, t: \"signatureDesignee\"}, {Value: -1, t: \"signatureDesignee\"}),\r\n                        If(isSupervisorACB && !isDesigneeACB, {Value: signatureSupervisor.isComplete, t: \"signatureSupervisor\"}, {Value: -1, t: \"signatureSupervisor\"}),\r\n                        If(isSupervisorACB && isDesigneeACB, {Value: signatureSupervisorDesignee.isComplete, t: \"signatureSupervisorDesignee\"}, {Value: -1, t: \"signatureSupervisorDesignee\"})\r\n                    )\r\n                ),\r\n                \"isCompleted\", If(IsEmpty(Filter(col_ParsedJSON, 0 in taskCompletionTelemetry.Value)), true, false)\r\n            ),\r\n            \"ID\",\"ID\"\r\n        )\r\n    )\r\n);\r\n\r\n// RESET ALL NEW CHECKLIST FIELDS WITHIN FORM\r\nClear(col_ParsedJSON);\r\nReset(toggle_DelegationNewChecklist);\r\nReset(checkbox_DelegationAcknowledge);\r\nReset(combobox_EmployeeName_3);\r\nReset(combobox_Designee_3);\r\nReset(combobox_Service_3);\r\nReset(combobox_MilitaryServiceBranch_3);\r\nReset(combobox_PayPlanGrade_3);\r\nReset(combobox_Organization_3);\r\nReset(input_OrganizationCode_3);\r\nReset(input_OfficeLocation_3);\r\nReset(combobox_State_3);\r\nReset(input_City_3);\r\nReset(combobox_OutprocessingStatus_3);\r\nReset(datepicker_DepartureDate_3);\r\nReset(input_NewEmployerName_3);\r\nReset(input_NewEmployerAddress_3);\r\nSet(chkRecord, Blank());\r\nSet(sendNotificationSupervisorDesigneeScope, Blank());\r\nSet(runSendNotificationSupervisorDesignee, false);\r\nSet(runBuildChecklistTasks, false);\r\nIf(!Delay,\r\n    Set(isBuildChecklistTasksRunning, false);\r\n);\r\n",
        "InvariantPropertyName": "BuildChecklistTasks",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "If(\r\n    {isCompleted: false} in col_checklistTasks.isCompleted,\r\n    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = \"Completed\", \r\n        Patch('OBOF-DS-checklistOutProcessing',\r\n            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n            {\r\n                outprocessingState: {Value: \"In Progress\"},\r\n                outprocessingCompletedDate: Blank()\r\n            }\r\n        );\r\n        //Select(refreshChecklists); // REMOVED CODE BUT LEFT FOR REFERENCE\r\n    );\r\n    Notify(\"Chekclist Not Completed\", NotificationType.Warning);\r\n    false,\r\n    Patch('OBOF-DS-checklistOutProcessing',\r\n        LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n        {\r\n            outprocessingState: {Value: \"Completed\"},\r\n            outprocessingCompletedDate: Now()\r\n        }\r\n    );\r\n    //Select(refreshChecklists); // REMOVED CODE BUT LEFT FOR REFERENCE\r\n    Notify(\"Checklist Completed\", NotificationType.Success);\r\n    true\r\n);",
        "InvariantPropertyName": "ValidateChecklistComplete",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "SendNotificationSupervisorDesignee_NotificationSupervisorDesigneeScope",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        notificationAttributes: {\r\n            departingEmployee: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_EmployeeName_4.Selected, combobox_EmployeeName_3.Selected),\r\n            supervisor: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Supervisor_4.Selected, combobox_Supervisor_3.Selected),\r\n            designee: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Designee_4.Selected, combobox_Designee_3.Selected),\r\n            checklistID: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", gallery_checklists.Selected.ID, chkRecord.ID),\r\n            departureDate: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", datepicker_DepartureDate_4.SelectedDate,chkRecord.departureDate),\r\n            organization: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Organization_4.Selected.Label, combobox_Organization_3.Selected.Label),\r\n            organizationCode: If(sendNotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", input_OrganizationCode_4.Text, input_OrganizationCode_3.Text)\r\n        }\r\n    },\r\n    \r\n    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && !(notificationAttributes.designee.Id = First(currentUser).uid),\r\n        Set(receivers, notificationAttributes.designee.Mail)\r\n    );\r\n    If(!(notificationAttributes.supervisor.Id = First(currentUser).uid) && notificationAttributes.designee.Id = First(currentUser).uid,\r\n        Set(receivers, notificationAttributes.supervisor.Mail)\r\n    );\r\n    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && (notificationAttributes.designee.Id = First(currentUser).uid),\r\n        Set(receivers, Blank())\r\n    );\r\n    If((First(currentUser).uid <> notificationAttributes.supervisor.Id) && (First(currentUser).uid <> notificationAttributes.designee.Id),\r\n        Set(receivers, notificationAttributes.supervisor.Mail)\r\n    );\r\n\r\n    If(!IsBlank(receivers),\r\n        'OBOF-SendNotification-SupervisorDesignee'.Run(\r\n            {\r\n                text: receivers,\r\n                text_1: notificationAttributes.departingEmployee.DisplayName,\r\n                text_2: notificationAttributes.supervisor.DisplayName,\r\n                text_3: notificationAttributes.designee.DisplayName,\r\n                text_4: notificationAttributes.checklistID,\r\n                text_5: notificationAttributes.departureDate,\r\n                text_6: notificationAttributes.organization,\r\n                text_7: notificationAttributes.organizationCode,\r\n                text_8: appMetadata.appEnviornment,\r\n                text_9: appMetadata.appUrl\r\n            }\r\n        )\r\n    )\r\n);\r\n",
        "InvariantPropertyName": "SendNotificationSupervisorDesignee",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "Remove('OBOF-DS-checklistOutProcessing',\r\n    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)\r\n);",
        "InvariantPropertyName": "DeletChecklist",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "IWAMQueryEmail_Email",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "ClearCollect(_responseIWAMQueryEmail, \r\n    DropColumns(\r\n        AddColumns(\r\n            PowerBI.ExecuteDatasetQuery(\"208885bd-ffb9-441b-8c9a-2106d426e81a\", \"d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9\",\r\n                $\"EVALUATE\r\n\t\t\t\t\tCALCULATETABLE(\r\n\t\t\t\t\t\t'IWAM USERS',\r\n\t\t\t\t\t\t'IWAM USERS'[DCMA_EMAIL] = \"\"{Email}\"\"\r\n\t\t\t\t\t)\"\r\n            ).firstTableRows,\r\n            \"USERID\", Text(ThisRecord.Value.'IWAM USERS[USERID]'),\r\n            \"ACTIVE\", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', \"true\", true),\r\n            \"USR_LAST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),\r\n            \"USR_MIDDLE_INITIAL\", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),\r\n            \"DCMA_ORGANIZATION_LEVEL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),\r\n            \"DCMA_EMPLOYEE_TYPE\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),\r\n            \"DCMA_JOB_SERIES\", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),\r\n            \"IS_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),\r\n            \"DCMA_EMAIL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),\r\n            \"TELEPHONE\", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),\r\n            \"USR_FULLNAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),\r\n            \"DIRECT_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),\r\n            \"DCMA_SITE_ID\", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),\r\n            \"USR_FIRST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')\r\n        ),\r\n        \"Value\"\r\n    )\r\n);",
        "InvariantPropertyName": "IWAMQueryEmail",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "IWAMQueryOrganization",
      "IWAMQueryOrganization_OrganizationName",
      "IWAMQueryOrganization_OrganizationCode",
      "IWAMQueryOrganization_OrganizationCodeParent",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "ClearCollect(_responseIWAMQueryDCID, \r\n    DropColumns(\r\n        AddColumns(\r\n            PowerBI.ExecuteDatasetQuery(\"208885bd-ffb9-441b-8c9a-2106d426e81a\", \"d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9\",\r\n                $\"EVALUATE\r\n\t\t\t\t\tCALCULATETABLE(\r\n\t\t\t\t\t\t'IWAM USERS',\r\n\t\t\t\t\t\t'IWAM USERS'[DIRECT_SUPERVISOR] = \"\"{UserID}\"\"\r\n\t\t\t\t\t)\"\r\n            ).firstTableRows,\r\n            \"USERID\", Text(ThisRecord.Value.'IWAM USERS[USERID]'),\r\n            \"ACTIVE\", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', \"true\", true, false),\r\n            \"USR_LAST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),\r\n            \"USR_MIDDLE_INITIAL\", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),\r\n            \"DCMA_ORGANIZATION_LEVEL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),\r\n            \"DCMA_EMPLOYEE_TYPE\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),\r\n            \"DCMA_JOB_SERIES\", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),\r\n            \"IS_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),\r\n            \"DCMA_EMAIL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),\r\n            \"TELEPHONE\", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),\r\n            \"USR_FULLNAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),\r\n            \"DIRECT_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),\r\n            \"DCMA_SITE_ID\", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),\r\n            \"USR_FIRST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')\r\n        ),\r\n        \"Value\"\r\n    )\r\n);\r\nShowColumns(First(_responseIWAMQueryDCID),\r\n    \"USERID\",\r\n    \"ACTIVE\",\r\n    \"USR_LAST_NAME\",\r\n    \"USR_MIDDLE_INITIAL\",\r\n    \"DCMA_ORGANIZATION_LEVEL\",\r\n    \"DCMA_EMPLOYEE_TYPE\",\r\n    \"DCMA_JOB_SERIES\",\r\n    \"IS_SUPERVISOR\",\r\n    \"DCMA_EMAIL\",\r\n    \"TELEPHONE\",\r\n    \"USR_FULLNAME\",\r\n    \"DIRECT_SUPERVISOR\",\r\n    \"DCMA_SITE_ID\",\r\n    \"USR_FIRST_NAME\"\r\n)",
        "InvariantPropertyName": "IWAMQueryDCID",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "IWAMQueryDCID_UserID",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)\r\n        \r\n    },\r\n\r\n    ClearCollect(col_eaj, selectedTask);\r\n\r\n    Notify($\"[DEBUG] ID: {ExtendedAttributesJSONID} RESPONSE: {ExtendedAttributesJSONResponse}\", NotificationType.Warning);\r\n\r\n    /*If(\r\n        IsEmpty(\r\n            Errors(col_eaj,\r\n                Patch(col_eaj, {ID: ExtendedAttributesJSONID},\r\n                    {\r\n                        ID: ExtendedAttributesJSONID,\r\n                        description: LookUp(col_eaj, ID = ExtendedAttributesJSONID).description,\r\n                        response: ExtendedAttributesJSONResponse,\r\n                        responded: true\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\"col_eaj Patch\", NotificationType.Success), //Select(updateChecklistJSON),\r\n        Notify(\"col_eaj Patch Error\", NotificationType.Error)\r\n    );*/\r\n    \r\n    /*If(\r\n        IsEmpty(\r\n            Errors(col_checklistTasks,\r\n                Patch(col_checklistTasks, selectedTask,\r\n                    {\r\n                        extendAttributesJSON: col_eaj\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\"Extended Attributes Patch\", NotificationType.Success), //Select(updateChecklistJSON),\r\n        Notify(\"Extended Attributes Patch Error\", NotificationType.Error)\r\n    )*/\r\n)",
        "InvariantPropertyName": "UpdateExtendedAttributes",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      },
      "UpdateExtendedAttributes_ExtendedAttributesJSONResponse",
      "UpdateExtendedAttributes_ActionItem",
      "UpdateExtendedAttributes_ExtendedAttributesJSONID",
      "AttachChangerGearServiceRequest_ActionItem",
      "AttachChangerGearServiceRequest_ChangeGearServiceRequestNumber",
      {
        "AFDDataSourceName": "",
        "AutoRuleBindingEnabled": false,
        "AutoRuleBindingString": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)\r\n        \r\n    },\r\n    \r\n    If(\r\n        IsEmpty(\r\n            Errors(col_checklistTasks,\r\n                Patch(col_checklistTasks, selectedTask,\r\n                    {\r\n                        isServiceRequestCompleted: true,\r\n                        serviceRequestNumber: Upper(input_ChangeGearServiceRequest.Text)\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        \"\",//Select(updateChecklistJSON),\r\n        Notify(\"ChangeGear Service Request Patch Error\", NotificationType.Error)\r\n    )\r\n)",
        "InvariantPropertyName": "AttachChangerGearServiceRequest",
        "IsLockable": false,
        "NameMapSourceSchema": "?"
      }
    ],
    "LastModifiedTimestamp": "638447235783069717",
    "Name": "DataSource",
    "Rules": [
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "Refresh_GlobalFilter",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "true",
        "Property": "Refresh_Delay",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "BuildChecklistTasks_ChecklistID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "RecordTransactLog_LogType",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "SignatureTask_ActionItem",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "EraseSignatureTask_ActionItem",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "EraseSignatureTask_SignatureType",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "SignatureTask_SignatureType",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "isValidateCompletionSignature",
        "Property": "isValidateCompletionSignature",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "recentlyPatchedChecklist",
        "Property": "RecentlyPatchedChecklist",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "true",
        "Property": "BuildChecklistTasks_Delay",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "UpdateChecklistAttributes_CurrentGalleryID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "recentlyPatchedUser",
        "Property": "RecentlyPatchedUser",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "DeletChecklist_ChecklistID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "SendNotificationSupervisorDesignee_NotificationSupervisorDesigneeScope",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "IWAMQueryOrganization_OrganizationName",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "IWAMQueryOrganization_OrganizationCode",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "IWAMQueryEmail_Email",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "IWAMQueryOrganization_OrganizationCodeParent",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "IWAMQueryDCID_UserID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "UpdateExtendedAttributes_ExtendedAttributesJSONResponse",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "UpdateExtendedAttributes_ActionItem",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "UpdateExtendedAttributes_ExtendedAttributesJSONID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "100",
        "Property": "AttachChangerGearServiceRequest_ActionItem",
        "RuleProviderType": "System"
      },
      {
        "Category": "Data",
        "InvariantScript": "\"Text\"",
        "Property": "AttachChangerGearServiceRequest_ChangeGearServiceRequestNumber",
        "RuleProviderType": "System"
      },
      {
        "Category": "Design",
        "InvariantScript": "RGBA(0, 0, 0, 0)",
        "Property": "Fill",
        "RuleProviderType": "System"
      },
      {
        "Category": "Design",
        "InvariantScript": "20",
        "Property": "Height",
        "RuleProviderType": "Unknown"
      },
      {
        "Category": "Design",
        "InvariantScript": "20",
        "Property": "Width",
        "RuleProviderType": "Unknown"
      },
      {
        "Category": "Design",
        "InvariantScript": "0",
        "Property": "X",
        "RuleProviderType": "Unknown"
      },
      {
        "Category": "Design",
        "InvariantScript": "0",
        "Property": "Y",
        "RuleProviderType": "Unknown"
      },
      {
        "Category": "Design",
        "InvariantScript": "1",
        "Property": "ZIndex",
        "RuleProviderType": "Unknown"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "ClearCollect(_responseIWAMQueryEmail, \r\n    DropColumns(\r\n        AddColumns(\r\n            PowerBI.ExecuteDatasetQuery(\"208885bd-ffb9-441b-8c9a-2106d426e81a\", \"d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9\",\r\n                $\"EVALUATE\r\n\t\t\t\t\tCALCULATETABLE(\r\n\t\t\t\t\t\t'IWAM USERS',\r\n\t\t\t\t\t\t'IWAM USERS'[DCMA_EMAIL] = \"\"{Email}\"\"\r\n\t\t\t\t\t)\"\r\n            ).firstTableRows,\r\n            \"USERID\", Text(ThisRecord.Value.'IWAM USERS[USERID]'),\r\n            \"ACTIVE\", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', \"true\", true, false),\r\n            \"USR_LAST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),\r\n            \"USR_MIDDLE_INITIAL\", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),\r\n            \"DCMA_ORGANIZATION_LEVEL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),\r\n            \"DCMA_EMPLOYEE_TYPE\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),\r\n            \"DCMA_JOB_SERIES\", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),\r\n            \"IS_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),\r\n            \"DCMA_EMAIL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),\r\n            \"TELEPHONE\", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),\r\n            \"USR_FULLNAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),\r\n            \"DIRECT_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),\r\n            \"DCMA_SITE_ID\", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),\r\n            \"USR_FIRST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')\r\n        ),\r\n        \"Value\"\r\n    )\r\n);\r\nShowColumns(_responseIWAMQueryEmail,\r\n    \"USERID\",\r\n    \"ACTIVE\",\r\n    \"USR_LAST_NAME\",\r\n    \"USR_MIDDLE_INITIAL\",\r\n    \"DCMA_ORGANIZATION_LEVEL\",\r\n    \"DCMA_EMPLOYEE_TYPE\",\r\n    \"DCMA_JOB_SERIES\",\r\n    \"IS_SUPERVISOR\",\r\n    \"DCMA_EMAIL\",\r\n    \"TELEPHONE\",\r\n    \"USR_FULLNAME\",\r\n    \"DIRECT_SUPERVISOR\",\r\n    \"DCMA_SITE_ID\",\r\n    \"USR_FIRST_NAME\"\r\n)",
        "Property": "IWAMQueryEmail",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Set(inputParameters, \r\n    [\r\n        {ID: 1, Value: OrganizationCodeParent, OrganizationScope: \"ORGANIZATIONS[Parent ORG Code]\", IsUsed: If(!IsBlank(OrganizationCodeParent), true, false)},\r\n        {ID: 2, Value: OrganizationCode, OrganizationScope: \"ORGANIZATIONS[ORG Code]\", IsUsed: If(!IsBlank(OrganizationCode), true, false)},\r\n        {ID: 3, Value: OrganizationName, OrganizationScope: \"ORGANIZATIONS[ORG_NAME]\", IsUsed: If(!IsBlank(OrganizationName), true, false)}\r\n    ]\r\n);\r\n\r\nIf(CountIf(inputParameters, IsUsed = true) > 1,\r\n    Notify(\"IWAM Query Organization: Unexpected input parameter.\", NotificationType.Error),\r\n    Set(HasInput, LookUp(inputParameters, IsUsed = true).ID)\r\n);\r\n\r\nSwitch(HasInput,\r\n    1, Set(p, {Value: OrganizationCodeParent, OrganizationScope: \"ORGANIZATIONS[Parent ORG Code]\"}),\r\n    2, Set(p, {Value: OrganizationCode, OrganizationScope: \"ORGANIZATIONS[ORG Code]\"}),\r\n    3, Set(p, {Value: OrganizationName, OrganizationScope: \"ORGANIZATIONS[ORG_NAME]\"}),\r\n    Set(p, {Value: OrganizationName, OrganizationScope: \"ORGANIZATIONS[ORG_NAME]\"})\r\n);\r\n\r\nClearCollect(_responseIWAMQueryOrganization,\r\n    DropColumns(\r\n        AddColumns(\r\n            PowerBI.ExecuteDatasetQuery(\"208885bd-ffb9-441b-8c9a-2106d426e81a\", \"d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9\",\r\n                $\"EVALUATE\r\n                    CALCULATETABLE(\r\n                        ORGANIZATIONS,\r\n                        CONTAINSSTRING({p.OrganizationScope}, \"\"{p.Value}\"\")\r\n                    )\r\n                ORDER BY ORGANIZATIONS[ORG_NAME]\"\r\n            ).firstTableRows,\r\n            \"ENTITY_CODE\", Text(ThisRecord.Value.'ORGANIZATIONS[ENTITY_CODE]'),\r\n            \"LVL\", Value(ThisRecord.Value.'ORGANIZATIONS[LVL]'),\r\n            \"ORG Code\", Text(ThisRecord.Value.'ORGANIZATIONS[ORG Code]'),\r\n            \"ORG_ID\", Value(ThisRecord.Value.'ORGANIZATIONS[ORG_ID]'),\r\n            \"ORG_NAME\", Text(ThisRecord.Value.'ORGANIZATIONS[ORG_NAME]'),\r\n            \"ORG_TYPE\", Text(ThisRecord.Value.'ORGANIZATIONS[ORG_TYPE]'),\r\n            \"Parent ORG Code\", Text(ThisRecord.Value.'ORGANIZATIONS[Parent ORG Code]'),\r\n            \"Parent ORG ID\", Value(ThisRecord.Value.'ORGANIZATIONS[Parent ORG ID]'),\r\n            \"REPORT_PARENT_ID\", Value(ThisRecord.Value.'ORGANIZATIONS[REPORT_PARENT_ID]')\r\n        ),\r\n        \"Value\"\r\n    )\r\n);\r\n\r\nShowColumns(_responseIWAMQueryOrganization,\r\n    \"ENTITY_CODE\",\r\n    \"LVL\",\r\n    \"ORG Code\",\r\n    \"ORG_ID\",\r\n    \"ORG_NAME\",\r\n    \"ORG_TYPE\",\r\n    \"Parent ORG Code\",\r\n    \"Parent ORG ID\",\r\n    \"REPORT_PARENT_ID\"\r\n)",
        "Property": "IWAMQueryOrganization",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Set(IsRunning, false);",
        "Property": "OnReset",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        varDateMod: If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n            DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n            If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                    DateAdd(datepicker_DepartureDate_3.SelectedDate, (1 + (RoundDown((1 / 5) * 2, 0)))*-1, TimeUnit.Days)))\r\n    },\r\n\r\n    /*\r\n    // REMOVED THIS CODE BUT LEFT AS REFERENCE\r\n    UpdateContext(\r\n        {\r\n            numBusinessDays: 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0)\r\n        }\r\n    );\r\n    */\r\n\r\n    Set(numBusinessDaysNewChecklist, 1 + ((DateDiff(Today(),varDateMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(varDateMod))*2)) / 7 - Switch(Weekday(varDateMod),7,1,0) - Switch(Weekday(Today()),1,1,0));\r\n\r\n    If(\r\n        // BEGIN LOGICAL TEST\r\n        IsBlank(combobox_EmployeeName_3.Selected.Mail) ||\r\n        IsBlank(combobox_Supervisor_3.Selected.Mail) ||\r\n        IsBlank(combobox_Designee_3.Selected.Mail) ||\r\n        IsBlank(combobox_Organization_3.Selected.ORG_NAME) ||\r\n        IsBlank(input_OrganizationCode_3.Text) ||\r\n        IsBlank(combobox_Service_3.Selected.Value) ||\r\n        If(combobox_Service_3.Selected.Value = \"Military\" && IsBlank(combobox_MilitaryServiceBranch_3.Selected.Value), true, false) ||\r\n        IsBlank(combobox_PayPlanGrade_3.Selected.v) ||\r\n        IsBlank(combobox_OutprocessingStatus_3.Selected.Value) ||\r\n        IsBlank(datepicker_DepartureDate_3.SelectedDate) ||\r\n        If(combobox_EmployeeName_3.Selected.Id = combobox_Designee_3.Selected.Id, true, false) ||\r\n        If(combobox_EmployeeName_3.Selected.Id = combobox_Supervisor_3.Selected.Id, true, false) ||\r\n        If((\"Transfer\" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerName_3.Text) || (\"Transfer\" in combobox_OutprocessingStatus_3.Selected.Value && IsBlank(input_NewEmployerAddress_3.Text))), true, false),\r\n        // END LOGICAL TEST\r\n\r\n        // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST\r\n        Set(popupScope, \"popup_main_newChecklistPatch\");\r\n        Set(isMainPopupVisible, true);\r\n        false,\r\n        // END TRUE RESULT - LOGICAL TEST\r\n\r\n        // BUILD JSON SCHEMA FOR CHECKLIST TASKS\r\n        Set(isBuildChecklistTasksRunning, true);\r\n        With(\r\n            { \r\n                newChecklistObj: {\r\n                    employeeName: combobox_EmployeeName_3.Selected,\r\n                    designee: combobox_Designee_3.Selected,\r\n                    supervisor: combobox_Supervisor_3.Selected,\r\n                    outprocessingStatus: combobox_OutprocessingStatus_3.Selected,\r\n                    departureDate: datepicker_DepartureDate_3.SelectedDate\r\n                },\r\n                \r\n                tasksChecklistObj: JSON(\r\n                    ForAll(\r\n                        If(!toggle_DelegationNewChecklist.Value, // LOGIC FOR NON-DELEGATED\r\n                            // NON-DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE\r\n                            Filter(col_templateChecklistOutprocessing, active = true && First(currentUser).service.Value in Ungroup(service, \"Value\").Value),\r\n                            // DELEGATED FILTER FOR TASKS ASSOCIATED WITH SERVICE\r\n                            Filter(col_templateChecklistOutprocessing, active = true && combobox_Service_3.Selected.Value in Ungroup(service, \"Value\").Value)\r\n                        ),\r\n                        {\r\n                            ID: actionItem,\r\n                            actionItem: actionItem,\r\n                            groupValue: groupValue,\r\n                            service: service,\r\n                            isSupervisorACB: isSupervisorACB,\r\n                            isDesigneeACB: isDesigneeACB,\r\n                            isEmployeeACB: isEmployeeACB,\r\n                            isMSOACB: isMSOACB,\r\n                            isNAACB: isNAACB,\r\n                            isClearingOffice: isClearingOffice,\r\n                            uid: uid,\r\n                            autoNotify: autoNotify,\r\n                            mandatoryClearingOfficeACB: mandatoryClearingOfficeACB,\r\n                            notificationDetails: {isNotified: false, email: Text(\"\"), timestamp: Date(1970, 1, 1)},\r\n                            dueInDays: dueInDays,\r\n                            dueInDaysEval: {\r\n                                dueDate: With({taskDD: datepicker_DepartureDate_3.SelectedDate},\r\n                                        DateValue(If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                            DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                            If(Weekday(DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                                DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                                    DateAdd(taskDD, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days))))),\r\n                                daysRemaining: With({taskDDMod: \r\n                                    If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                        DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                        If(Weekday(DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                            DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                                DateAdd(datepicker_DepartureDate_3.SelectedDate, (dueInDays + (RoundDown((dueInDays / 5) * 2, 0)))*-1, TimeUnit.Days)))},\r\n                                    Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))\r\n                            },\r\n                            createServiceRequest: createServiceRequest,\r\n                            isServiceRequestCompleted: false,\r\n                            serviceRequestNumber: Text(\"\"),\r\n                            urlServiceRequest: urlServiceRequest,\r\n                            transactLog: [\r\n                                {\r\n                                    log: Text(\"[USER: \" & First(currentUser).mail & \"];[ACTION ITEM: \" & actionItem & \"];[FUNCTION: New Checklist];[DELEGATED: \" & Upper(toggle_DelegationNewChecklist.Value) & \"];New checklist task added for \" & combobox_EmployeeName_3.Selected.Surname & \", \" &combobox_EmployeeName_3.Selected.GivenName & \" in group \" & groupValue),\r\n                                    timestamp: Text(Now(), \"mm/dd/yyyy hh:mm:ss\"),\r\n                                    ID: 1\r\n                                }\r\n                            ],\r\n                            extendAttributes: extendAttributes,\r\n                            extendAttributesJSON: ForAll(Table(ParseJSON(extendAttributesJSON)), \r\n                                    {\r\n                                        ID: Value(ThisRecord.Value.ID), \r\n                                        description: Text(ThisRecord.Value.description), \r\n                                        response: Text(ThisRecord.Value.response), \r\n                                        responded: Value(If(Value(ThisRecord.Value.responded) = 0, false, true))\r\n                                    }\r\n                                ),\r\n                            taskCompletionTelemetry: Table(\r\n                                    If(isClearingOffice, {Value: 0, t: \"signatureClearingOffice\"}, {Value: -1, t: \"signatureClearingOffice\"}),\r\n                                    If(isEmployeeACB, {Value: 0, t: \"signatureEmployee\"}, {Value: -1, t: \"signatureEmployee\"}),\r\n                                    If(isMSOACB, {Value: 0, t: \"signatureMSO\"}, {Value: -1, t: \"signatureMSO\"}),\r\n                                    If(isDesigneeACB && !isSupervisorACB, {Value: 0, t: \"signatureDesignee\"}, {Value: -1, t: \"signatureDesignee\"}),\r\n                                    If(isSupervisorACB && !isDesigneeACB, {Value: 0, t: \"signatureSupervisor\"}, {Value: -1, t: \"signatureSupervisor\"}),\r\n                                    If(isSupervisorACB && isDesigneeACB, {Value: 0, t: \"signatureSupervisorDesignee\"}, {Value: -1, t: \"signatureSupervisorDesignee\"})\r\n                                ),\r\n                            signatureSupervisor: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")},\r\n                            signatureDesignee: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid:Text(\"\")},\r\n                            signatureEmployee: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")},\r\n                            signatureSupervisorDesignee: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")},\r\n                            signatureMSO: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")},\r\n                            signatureClearingOffice: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")},\r\n                            signatureNAACB: {signature: Text(\"\"),date: Date(1970, 1, 1),isComplete: 0,uid: Text(\"\")}\r\n                        }\r\n                    )\r\n                )\r\n            },\r\n            // END JSON SCHEMA FOR CHECKLIST TASKS\r\n\r\n            // CREATE USER PROFILE IF DELEGATION IS TRUE\r\n            If(toggle_DelegationNewChecklist.Value, \r\n                Patch('OBOF-DS-userDelegation',\r\n                    If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),\r\n                        Defaults('OBOF-DS-userDelegation'),\r\n                        LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)\r\n                    ),\r\n                    {\r\n                        uid: combobox_EmployeeName_3.Selected.Id,\r\n                        displayName: combobox_EmployeeName_3.Selected.DisplayName,\r\n                        givenName: combobox_EmployeeName_3.Selected.GivenName,\r\n                        surname: combobox_EmployeeName_3.Selected.Surname,\r\n                        payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,\r\n                        grade: Value(combobox_PayPlanGrade_3.Selected.g),\r\n                        payPlan: combobox_PayPlanGrade_3.Selected.p,\r\n                        service: combobox_Service_3.Selected,\r\n                        militaryServiceBranch: combobox_MilitaryServiceBranch_3.Selected,\r\n                        mail: combobox_EmployeeName_3.Selected.Mail,\r\n                        accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,\r\n                        jobTitle:combobox_EmployeeName_3.Selected.JobTitle,\r\n                        streetAddress: Blank(), //VALUE NOT USED IN DATA\r\n                        city:combobox_EmployeeName_3.Selected.City,\r\n                        postalCode: combobox_EmployeeName_3.Selected.PostalCode,\r\n                        companyName: combobox_EmployeeName_3.Selected.CompanyName,\r\n                        department: combobox_EmployeeName_3.Selected.Department,\r\n                        //organization: combobox_Organization_3.Selected,\r\n                        organization_v2: combobox_Organization_3.Selected.ORG_NAME,\r\n                        organizationId: combobox_Organization_3.Selected.ORG_ID,\r\n                        organizationCode: input_OrganizationCode_3.Text,\r\n                        isEmployee: true,\r\n                        officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,\r\n                        supervisor: {\r\n                            '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                            Claims: Concatenate(\"i:0#.f|membership|\", combobox_Supervisor_3.Selected.Mail),\r\n                            Department: combobox_Supervisor_3.Selected.Department,\r\n                            DisplayName: combobox_Supervisor_3.Selected.DisplayName,\r\n                            Email: combobox_Supervisor_3.Selected.Mail,\r\n                            JobTitle: combobox_Supervisor_3.Selected.JobTitle,\r\n                            Picture: \"\"\r\n                        },\r\n                        supervisorUid: combobox_Supervisor_3.Selected.Id,\r\n                        supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,\r\n                        supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,\r\n                        supervisorSurname: combobox_Supervisor_3.Selected.Surname,\r\n                        supervisorEmail: combobox_Supervisor_3.Selected.Mail,\r\n                        supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,\r\n                        delegationUid: combobox_Designee_3.Selected.Id\r\n                    }\r\n                );\r\n                ClearCollect(delegatedUser, 'OBOF-DS-userDelegation');\r\n            );\r\n            // END CREATE USER PROFILE IF DELEGATION IS TRUE\r\n\r\n            // CREATE EMPLOYEE OUT-PROCESSING CHECKLIST\r\n            Set(chkRecord,\r\n                Patch('OBOF-DS-checklistOutProcessing',\r\n                    Defaults('OBOF-DS-checklistOutProcessing'),\r\n                    {\r\n                        uidUser: newChecklistObj.employeeName.Id,\r\n                        uidDesignee: newChecklistObj.designee.Id,\r\n                        uidSupervisor: newChecklistObj.supervisor.Id,\r\n                        checklistStatus: newChecklistObj.outprocessingStatus,\r\n                        departureDate: newChecklistObj.departureDate,\r\n                        outprocessingState: {Value: \"In Progress\"},\r\n                        isDelegated: If(toggle_DelegationNewChecklist.Value && checkbox_DelegationAcknowledge.Checked, true, false),\r\n                        newEmployerAgency: input_NewEmployerName_3.Text,\r\n                        newEmployerAgencyAddress: input_NewEmployerAddress_3.Text,\r\n                        checklistJSON: tasksChecklistObj\r\n                    }\r\n                )\r\n            );\r\n            // END CREATE EMPLOYEE OUT-PROCESSING CHECKLIST\r\n        );\r\n        \r\n        Set(isNewChecklistVisible, false);\r\n        true        \r\n    );\r\n    \r\n)",
        "Property": "NewChcklist",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "If({isCompleted: false} in col_checklistTasks.isCompleted,\r\n    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = \"Completed\", \r\n        Patch('OBOF-DS-checklistOutProcessing',\r\n            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n            {\r\n                outprocessingState: {Value: \"In Progress\"},\r\n                outprocessingCompletedDate: Blank()\r\n            }\r\n        );\r\n        //Select(refreshChecklists);\r\n    );\r\n    Notify(\"Chekclist Not Completed\", NotificationType.Warning),\r\n    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value <> \"Completed\",\r\n        Patch('OBOF-DS-checklistOutProcessing',\r\n            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n            {\r\n                outprocessingState: {Value: \"Completed\"},\r\n                outprocessingCompletedDate: Now()\r\n            }\r\n        );\r\n        //Select(refreshChecklists);\r\n    );\r\n    Notify(\"Checklist Completed\", NotificationType.Success)\r\n);",
        "Property": "isChecklistComplete",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Set(isBuildChecklistTasksRunning, true);\r\n//Set(defaultGalleryCheklistItem, gallery_checklists.Selected);\r\n\r\n// COLLECTION CHECKLIST TEMPLATES\r\nRefresh('OBOF-DS-appSettings');\r\nRefresh('OBOF-DS-userDelegation');\r\nRefresh('GLBL-DS-userRegistration');\r\nRefresh('OBOF-DS-checklistOutProcessing');\r\nRefresh('OBOF-DS-templateOutProcessingChecklist');\r\nRefresh('OBOF-DS-templateOutProcessingChecklistLocalTask');\r\n\r\nClearCollect(col_organizations, DataSourceComponent.IWAMQueryOrganization(\"\",\"\",\"\"));\r\nClearCollect(col_IWAMUserInfo, DataSourceComponent.IWAMQueryEmail(User().Email));\r\nClearCollect(col_IWAMSupervisor, DataSourceComponent.IWAMQueryDCID(First(col_IWAMUserInfo).DIRECT_SUPERVISOR));\r\nClearCollect(col_IWAMUser,\r\n    AddColumns(\r\n        col_IWAMUserInfo,\r\n        \"super_USERID\", First(col_IWAMSupervisor).USERID,\r\n        \"super_ACTIVE\", First(col_IWAMSupervisor).ACTIVE,\r\n        \"super_USR_LAST_NAME\", First(col_IWAMSupervisor).USR_LAST_NAME,\r\n        \"super_USR_MIDDLE_INITIAL\", First(col_IWAMSupervisor).USR_MIDDLE_INITIAL,\r\n        \"super_USR_FIRST_NAME\", First(col_IWAMSupervisor).USR_FIRST_NAME,\r\n        \"super_DCMA_ORGANIZATION_LEVEL\", First(col_IWAMSupervisor).DCMA_ORGANIZATION_LEVEL,\r\n        \"super_DCMA_EMPLOYEE_TYPE\", First(col_IWAMSupervisor).DCMA_EMPLOYEE_TYPE,\r\n        \"super_DCMA_JOB_SERIES\", First(col_IWAMSupervisor).DCMA_JOB_SERIES,\r\n        \"super_IS_SUPERVISOR\", First(col_IWAMSupervisor).IS_SUPERVISOR,\r\n        \"super_DCMA_EMAIL\", First(col_IWAMSupervisor).DCMA_EMAIL,\r\n        \"super_TELEPHONE\", First(col_IWAMSupervisor).TELEPHONE,\r\n        \"super_USR_FULLNAME\", First(col_IWAMSupervisor).USR_FULLNAME,\r\n        \"super_DIRECT_SUPERVISOR\", First(col_IWAMSupervisor).DIRECT_SUPERVISOR,\r\n        \"super_DCMA_SITE_ID\", First(col_IWAMSupervisor).DCMA_SITE_ID\r\n    )\r\n);\r\n\r\n//Refresh(gallery_checklists);\r\n\r\nClearCollect(col_templateChecklistOutprocessing, SortByColumns('OBOF-DS-templateOutProcessingChecklist', \"actionItem\", SortOrder.Ascending));\r\nClearCollect(col_templateChecklistOutprocessingLocalTask, SortByColumns('OBOF-DS-templateOutProcessingChecklistLocalTask', \"actionItem\", SortOrder.Ascending));\r\n\r\nWith(\r\n    {\r\n        obj_currentUserV2: Table(LookUp('GLBL-DS-userRegistration', uid = Office365Users.MyProfileV2().id))\r\n    },\r\n    ClearCollect(currentUser,\r\n        AddColumns(\r\n            obj_currentUserV2,\r\n            \"isTFManager\", !IsBlank(LookUp(memberOf, id in _TFManager.role).id),\r\n            \"isTFProgramManager\", !IsBlank(LookUp(memberOf, id in _TFProgramManager.role).id),\r\n            \"isEmployee\", !IsBlank(LookUp(memberOf, id in _Employee.role).id),\r\n            \"isSupervisor\", !IsBlank(LookUp(memberOf, id in _Supervisor.role).id),\r\n            \"isMSO\", !IsBlank(LookUp(memberOf, id in _MSO.role).id),\r\n            \"isClearingOffice\", !IsBlank(LookUp(memberOf, id in _ClearingOffice.role).id)\r\n        )\r\n    )\r\n);\r\n\r\nWith(\r\n    {\r\n        outprocessingChecklistItems: ShowColumns(\r\n            Filter('OBOF-DS-checklistOutProcessing',outprocessingState.Value = GlobalFilter),\r\n            \"ID\",\r\n            \"uidUser\",\r\n            \"uidDesignee\",\r\n            \"uidSupervisor\",\r\n            \"checklistStatus\",\r\n            \"departureDate\",\r\n            \"outprocessingState\",\r\n            \"outprocessingCompletedDate\",\r\n            \"isDelegated\",\r\n            \"Created\",\r\n            \"newEmployerAgency\",\r\n            \"newEmployerAgencyAddress\"\r\n        ) // SELECT COLUMNS\r\n    },\r\n    With(\r\n        {\r\n            // AGGREGATE ALL FOREIGN TABLES INTO A SINGLE OBJECT\r\n            outprocessingChecklistItemsAggregation: AddColumns(\r\n                outprocessingChecklistItems,\r\n\r\n                // IDENTIFY IF EMPLOYEE CHECKLIST IS DELEGATED -->> AGGREGATE DATA ON EMPLOYEE\r\n                // IF isDelegate\r\n                \"employee\", If(isDelegated, \r\n                    ShowColumns(Table(LookUp('OBOF-DS-userDelegation' As ud, uidUser = ud.uid)), \r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization_v2\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"), \r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidUser = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization_v2\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\")), // END IF isDelegate | employee\r\n                \r\n                // AGGREGATE DATA ON DESIGNEE\r\n                \"designee\", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid).uid),\r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidDesignee = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization_v2\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"),\r\n                    With(\r\n                        {\r\n                            graphApiResponseDesignee: Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/{uidDesignee}\", \"GET\", \"\")\r\n                        },\r\n                        [\r\n                            {\r\n                                uid: Text(graphApiResponseDesignee.id),\r\n                                displayName: Text(graphApiResponseDesignee.displayName),\r\n                                givenName: Text(graphApiResponseDesignee.givenName),\r\n                                surname: Text(graphApiResponseDesignee.surname),\r\n                                jobTitle: Text(graphApiResponseDesignee.jobTitle),\r\n                                mail: Text(graphApiResponseDesignee.mail),\r\n                                organization: \"\",\r\n                                organizationCode: \"\",\r\n                                payPlan_Grade: \"\",\r\n                                payPlan: \"\",\r\n                                grade: \"\",\r\n                                department: \"\",\r\n                                service: [{Value: \"\"}],\r\n                                militaryServiceBranch: \"\"\r\n                            }\r\n                        ]\r\n                    )\r\n                ),\r\n                \r\n                // AGGREGATE DATA ON SUPERVISOR\r\n                \"supervisor\", If(!IsBlank(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid).uid),\r\n                    ShowColumns(Table(LookUp('GLBL-DS-userRegistration' As ur, uidSupervisor = ur.uid)),\r\n                        \"uid\",\"displayName\",\"givenName\",\"surname\",\"jobTitle\",\"mail\",\"organization_v2\",\"organizationCode\",\"payPlan_Grade\",\"payPlan\",\"grade\",\"department\",\"service\",\"militaryServiceBranch\"),\r\n                    With(\r\n                        {\r\n                            graphApiResponseSupervisor: Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/{uidSupervisor}\", \"GET\", \"\")\r\n                        },\r\n                        [\r\n                            {\r\n                                uid: Text(graphApiResponseSupervisor.id),\r\n                                displayName: Text(graphApiResponseSupervisor.displayName),\r\n                                givenName: Text(graphApiResponseSupervisor.givenName),\r\n                                surname: Text(graphApiResponseSupervisor.surname),\r\n                                jobTitle: Text(graphApiResponseSupervisor.jobTitle),\r\n                                mail: Text(graphApiResponseSupervisor.mail),\r\n                                organization: \"\",\r\n                                organizationCode: \"\",\r\n                                payPlan_Grade: \"\",\r\n                                payPlan: \"\",\r\n                                grade: \"\",\r\n                                department: \"\",\r\n                                service: [{Value: \"\"}],\r\n                                militaryServiceBranch: \"\"\r\n                            }\r\n                        ]\r\n                    )\r\n                )\r\n            )\r\n        },\r\n\r\n        Set(des, Office365Groups.HttpRequest($\"https://dod-graph.microsoft.us/v1.0/users/35573b91-3205-4a0a-9e69-771b4d67260f\", \"GET\", \"\",{ContentType: \"application/json;odata=nometadata\"}));\r\n        \r\n        // BUILD COLLECTION FROM FOREIGN TABLE AGGREGATE\r\n        ClearCollect(col_outprocessingChecklistItems, outprocessingChecklistItemsAggregation);\r\n    )\r\n);\r\nIf(!Delay,\r\n    Set(isBuildChecklistTasksRunning, false);,\r\n    true\r\n);\r\nIf(IsEmpty(col_outprocessingChecklistItems), Set(showGalleryLabels, true), Set(showGalleryLabels, false));",
        "Property": "Refresh",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Notify($\"Function DelegationNewChecklist is deprecated\", NotificationType.Warning);\r\n/*\r\n// IF DELEGATED\r\nIf(toggle_DelegationNewChecklist,\r\n    //If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),\r\n        Patch('OBOF-DS-userDelegation',\r\n            If(IsBlank((LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id))),\r\n                Defaults('OBOF-DS-userDelegation'),\r\n                LookUp('OBOF-DS-userDelegation', uid = combobox_EmployeeName_3.Selected.Id)\r\n            ),\r\n            //Defaults('OBOF-DS-userDelegation'),\r\n            {\r\n                uid: combobox_EmployeeName_3.Selected.Id,\r\n                displayName: combobox_EmployeeName_3.Selected.DisplayName,\r\n                givenName: combobox_EmployeeName_3.Selected.GivenName,\r\n                surname: combobox_EmployeeName_3.Selected.Surname,\r\n                payPlan_Grade: combobox_PayPlanGrade_3.Selected.v,\r\n                grade: Value(combobox_PayPlanGrade_3.Selected.g),\r\n                payPlan: combobox_PayPlanGrade_3.Selected.p,\r\n                service: combobox_Service_3,\r\n                militaryServiceBranch: combobox_MilitaryServiceBranch_3,\r\n                mail: combobox_EmployeeName_3.Selected.Mail,\r\n                accountEnabled: combobox_EmployeeName_3.Selected.AccountEnabled,\r\n                jobTitle:combobox_EmployeeName_3.Selected.JobTitle,\r\n                streetAddress: Blank(),\r\n                city:combobox_EmployeeName_3.Selected.City,\r\n                postalCode: combobox_EmployeeName_3.Selected.PostalCode,\r\n                companyName: combobox_EmployeeName_3.Selected.CompanyName,\r\n                department: combobox_EmployeeName_3.Selected.Department,\r\n                organization: combobox_Organization_3.Selected,\r\n                organizationCode: input_OrganizationCode_3.Text,\r\n                isEmployee: true,\r\n                officeLocation: combobox_EmployeeName_3.Selected.OfficeLocation,\r\n                supervisor: {\r\n                    '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                    Claims: Concatenate(\"i:0#.f|membership|\", combobox_Supervisor_3.Selected.Mail),\r\n                    Department: combobox_Supervisor_3.Selected.Department,\r\n                    DisplayName: combobox_Supervisor_3.Selected.DisplayName,\r\n                    Email: combobox_Supervisor_3.Selected.Mail,\r\n                    JobTitle: combobox_Supervisor_3.Selected.JobTitle,\r\n                    Picture: \"\"\r\n                },\r\n                supervisorUid: combobox_Supervisor_3.Selected.Id,\r\n                supervisorDisplayName: combobox_Supervisor_3.Selected.DisplayName,\r\n                supervisorGivenName: combobox_Supervisor_3.Selected.GivenName,\r\n                supervisorSurname: combobox_Supervisor_3.Selected.Surname,\r\n                supervisorEmail: combobox_Supervisor_3.Selected.Mail,\r\n                supervisorPhone: combobox_Supervisor_3.Selected.TelephoneNumber,\r\n                delegationUid: combobox_Designee_3.Selected.Id\r\n            }\r\n        )\r\n    //)\r\n);\r\n\r\nReset(toggle_DelegationNewChecklist);\r\nReset(checkbox_DelegationAcknowledge);\r\nReset(combobox_EmployeeName_3);\r\nReset(combobox_Designee_3);\r\nReset(combobox_Service_3);\r\nReset(combobox_MilitaryServiceBranch_3);\r\nReset(combobox_PayPlanGrade_3);\r\nReset(combobox_Organization_3);\r\nReset(input_OrganizationCode_3);\r\nReset(input_OfficeLocation_3);\r\nReset(combobox_State_3);\r\nReset(input_City_3);\r\nReset(combobox_OutprocessingStatus_3);\r\nReset(datepicker_DepartureDate_3_1);\r\n//Select(refreshChecklists);\r\nSet(isNewChecklistVisible, false);\r\n//Select(buildChecklistTasks);\r\n*/",
        "Property": "DelegationNewChecklist",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        tasksMissingSignatureForCompletion: If(signatureType = \"signatureEmployee\", \r\n            Filter(col_checklistTasks, actionItem <> 36 && actionItem <> 37 && {t: signatureType, Value: 0} in taskCompletionTelemetry),\r\n            Filter(col_checklistTasks, actionItem <> 37 && (\r\n                {t: Index(signatureTypeArray, 1).Value, Value: 0} in taskCompletionTelemetry ||\r\n                {t: Index(signatureTypeArray, 2).Value, Value: 0} in taskCompletionTelemetry ||\r\n                {t: Index(signatureTypeArray, 3).Value, Value: 0} in taskCompletionTelemetry)\r\n            )\r\n        )\r\n    },\r\n    \r\n    If(CountRows(tasksMissingSignatureForCompletion) > 0, \r\n        Set(isValidateCompletionSignature, false);\r\n        //Notify($\"NOT VALID {CountRows(tasksMissingSignatureForCompletion)} - {false}\"); // DEBUG VALUE\r\n        ClearCollect(col_missingSignatures, tasksMissingSignatureForCompletion);\r\n        Set(isMainPopupVisible, true);\r\n        Set(popupScope, \"popup_main_missingCompletionTasks\");\r\n        false,\r\n\r\n        Set(isValidateCompletionSignature, true);\r\n        //Notify($\"VALID {CountRows(tasksMissingSignatureForCompletion)} - {true}\"); // DEBUG VALUE\r\n        true\r\n    )\r\n)",
        "Property": "ValidateCompletionSignature",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, gallery_checklistTasks.Selected.ID = ID)\r\n    },\r\n    With(\r\n        {\r\n            transactions: selectedTask.transactLog,\r\n            actionItem: gallery_checklistTasks.Selected.actionItem,\r\n            groupValue: gallery_checklistTasks.Selected.groupValue,\r\n            isDelegated: gallery_checklists.Selected.isDelegated,\r\n            currentUserName: First(currentUser).surname & \", \" & First(currentUser).givenName,\r\n            delegatedUserName: First(Ungroup(gallery_checklists.Selected.employee, \"surname\")).surname & \", \" & First(Ungroup(gallery_checklists.Selected.employee, \"surname\")).givenName\r\n        },\r\n        \r\n            ClearCollect(ta, transactions);\r\n\r\n            Switch(LogType,\r\n            \r\n                \"addSignature\", \r\n                    Set(log,\r\n                        {\r\n                            logObj: \r\n                                {\r\n                                    logID: Value(Value(Last(ta).ID) + 1),\r\n                                    logMsg: Text(\"[USER: \" & First(currentUser).mail & \"];[ACTION ITEM: \" & actionItem & \"];[FUNCTION: Add Signature];[DELEGATED: \" & Upper(isDelegated) & \"];Action Completed By: \" & If(isDelegated, currentUserName & \" on behalf of employee \" & delegatedUserName, currentUserName) & \" in group \" & groupValue) & \".\",\r\n                                    logTimestamp: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime))\r\n                                }\r\n                        }\r\n                    ),\r\n\r\n                \"removeSignature\", \r\n                    Set(log,\r\n                        {\r\n                            logObj: \r\n                                {\r\n                                    logID: Value(Value(Last(ta).ID) + 1),\r\n                                    logMsg: Text(\"[USER: \" & First(currentUser).mail & \"];[ACTION ITEM: \" & actionItem & \"];[FUNCTION: Remove Signature];[DELEGATED: \" & Upper(isDelegated) & \"];Action Reversed By: \" & If(isDelegated, currentUserName & \" on behalf of employee \" & delegatedUserName, currentUserName) & \" in group \" & groupValue) & \".\",\r\n                                    logTimestamp: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime))\r\n                                }\r\n                        }\r\n                    )\r\n\r\n            );\r\n            \r\n            Patch(ta,\r\n                Defaults(ta), \r\n                {\r\n                    ID: log.logObj.logID,\r\n                    log: log.logObj.logMsg,\r\n                    timestamp: log.logObj.logTimestamp\r\n                }\r\n            );\r\n\r\n            Patch(col_checklistTasks,\r\n                selectedTask,\r\n                {\r\n                    transactLog: ta\r\n                }\r\n            );\r\n            Clear(ta);\r\n        );\r\n    /*\r\n    // REMOVE CODE BUT LEFT FOR REFERENCE\r\n    Switch(transactLogScope,\r\n        \"addSignature\",\r\n            Select(signatureTask),\r\n        \"removeSignature\",\r\n            Select(eraseSignatureTask),\r\n        \"updateChecklist\",\r\n            Select(updateChecklistAttributes);\r\n    );\r\n    */\r\n);\r\n\r\n",
        "Property": "RecordTransactLog",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        tasksChecklistObj: JSON(col_checklistTasks)\r\n    },\r\n\r\n    If(\r\n        IsEmpty(\r\n            Errors('OBOF-DS-checklistOutProcessing',\r\n                Patch('OBOF-DS-checklistOutProcessing',\r\n                    LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n                    {\r\n                        checklistJSON: tasksChecklistObj\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\r\n            \"[Action Item: \" & Text(gallery_checklistTasks.Selected.actionItem, \"#0\") & \"] \" &\r\n            \"CHKID: \" & gallery_checklists.Selected.ID & \" | \" &\r\n            \"CHK_Task: \" & gallery_checklistTasks.Selected.uid & \" | \" &\r\n            \"Action Completed By: \" & First(currentUser).displayName &\"-\"& First(currentUser).uid, NotificationType.Success \r\n        ),\r\n        Notify(\"[OBOF-DS-checklistOutProcessing] patch error\", NotificationType.Error)\r\n    );\r\n\r\n    /*\r\n    // REMOVED CODE BUT LEFT AS REFERENCE\r\n    If(runBuildChecklistTasks, Select(buildChecklistTasks), Set(isBuildChecklistTasksRunning, false));\r\n    If(runRefreshChecklists, Select(refreshChecklists), Set(isBuildChecklistTasksRunning, false));\r\n    Select(buildChecklistTasks);\r\n    */\r\n    Set(isBuildChecklistTasksRunning, false);\r\n)",
        "Property": "UpdateChecklistJSON",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, ActionItem = ID),\r\n        returnCode: Table({})\r\n    },\r\n\r\n    Set(isComplete, false);\r\n    Switch(SignatureType,\r\n        \"signatureDesignee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureDesignee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureDesignee.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureSupervisor\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureSupervisor] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureSupervisor.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureSupervisorDesignee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureSupervisorDesignee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureSupervisorDesignee.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureEmployee\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureEmployee] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureEmployee.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureMSO\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureMSO] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureMSO.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureClearingOffice\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureClearingOffice] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureClearingOffice.signature}\", NotificationType.Warning),\r\n            \"\"\r\n        ),\r\n        \"signatureNAACB\", If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 1,\r\n            Collect(returnCode, Defaults(returnCode), {code: 409});\r\n            Set(isComplete, true);\r\n            Notify($\"[signatureNAACB] CODE|409 Object Security:  Task previously accomplished by: {selectedTask.signatureNAACB.signature}\", NotificationType.Warning),\r\n            If(\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 1 ||\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 1 ||\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 1 ||\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 1 ||\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 1 ||\r\n                LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 1,\r\n                Set(isComplete, true);\r\n                Notify($\"[signatureNAACB] CODE|409 Object Security:  Task previously accomplished.\", NotificationType.Warning)\r\n            )\r\n        )\r\n    );\r\n\r\n    If(!IsBlank(selectedTask) && !isComplete,\r\n        Patch(col_checklistTasks,\r\n            selectedTask,\r\n            Switch(SignatureType,\r\n                \"signatureDesignee\", {\r\n                    taskCompletionTelemetry: [\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureDesignee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureDesignee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureDesignee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureDesignee.date, \r\n                                isComplete: selectedTask.signatureDesignee.isComplete, \r\n                                signature: selectedTask.signatureDesignee.signature,\r\n                                uid: selectedTask.signatureDesignee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureSupervisor\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0, \r\n                            {Value: 1, t: \"signatureSupervisor\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureSupervisor: \r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisor.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureSupervisor.date, \r\n                                isComplete: selectedTask.signatureSupervisor.isComplete, \r\n                                signature: selectedTask.signatureSupervisor.signature,\r\n                                uid: selectedTask.signatureSupervisor.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureSupervisorDesignee\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureSupervisorDesignee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureSupervisorDesignee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureSupervisorDesignee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureSupervisorDesignee.date, \r\n                                isComplete: selectedTask.signatureSupervisorDesignee.isComplete, \r\n                                signature: selectedTask.signatureSupervisorDesignee.signature,\r\n                                uid: selectedTask.signatureSupervisorDesignee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureEmployee\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0, \r\n                            {Value: 1, t: \"signatureEmployee\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureEmployee:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureEmployee.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureEmployee.date, \r\n                                isComplete: selectedTask.signatureEmployee.isComplete, \r\n                                signature: selectedTask.signatureEmployee.signature,\r\n                                uid: selectedTask.signatureEmployee.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureMSO\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0, \r\n                            {Value: 1, t: \"signatureMSO\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureMSO:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureMSO.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureMSO.date, \r\n                                isComplete: selectedTask.signatureMSO.isComplete, \r\n                                signature: selectedTask.signatureMSO.signature,\r\n                                uid: selectedTask.signatureMSO.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureClearingOffice\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0, \r\n                            {Value: 1, t: \"signatureClearingOffice\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"}\r\n                        ),\r\n                        {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                    ],\r\n                    signatureClearingOffice:\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureClearingOffice.isComplete = 0,\r\n                            {\r\n                                date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), \r\n                                isComplete: 1, \r\n                                signature: First(currentUser).displayName, \r\n                                uid: First(currentUser).uid\r\n                            },\r\n                            {\r\n                                date: selectedTask.signatureClearingOffice.date, \r\n                                isComplete: selectedTask.signatureClearingOffice.isComplete, \r\n                                signature: selectedTask.signatureClearingOffice.signature,\r\n                                uid: selectedTask.signatureClearingOffice.uid\r\n                            }\r\n                        )\r\n                    },\r\n                \"signatureNAACB\", {\r\n                    taskCompletionTelemetry: [\r\n                        {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value), t: \"signatureDesignee\"},\r\n                        {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value), t: \"signatureSupervisor\"},\r\n                        {Value: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value), t: \"signatureSupervisorDesignee\"},\r\n                        {Value: If(selectedTask.isEmployeeACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value), t: \"signatureEmployee\"},\r\n                        {Value: If(selectedTask.isMSOACB, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value), t: \"signatureMSO\"},\r\n                        {Value: If(selectedTask.isClearingOffice, 1, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value), t: \"signatureClearingOffice\"},\r\n                        If(LookUp(col_checklistTasks, ID = selectedTask.ID).signatureNAACB.isComplete = 0, \r\n                            {Value: 1, t: \"signatureNAACB\"},\r\n                            {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                        ),\r\n                    ],\r\n                    signatureDesignee: {\r\n                        date: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureDesignee.date),\r\n                        isComplete: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 1, selectedTask.signatureDesignee.isComplete), \r\n                        signature: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureDesignee.signature), \r\n                        uid: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureDesignee.uid)},\r\n                    signatureSupervisor: {\r\n                        date: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisor.date),\r\n                        isComplete: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisor.isComplete), \r\n                        signature: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisor.signature), \r\n                        uid: If(!selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisor.uid)},\r\n                    signatureSupervisorDesignee: {\r\n                        date: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureSupervisorDesignee.date),\r\n                        isComplete: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, 1, selectedTask.signatureSupervisorDesignee.isComplete), \r\n                        signature: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisorDesignee.signature), \r\n                        uid: If(selectedTask.isDesigneeACB && selectedTask.isSupervisorACB, Text(\"\"), selectedTask.signatureSupervisorDesignee.uid)},\r\n                    signatureEmployee: {\r\n                        date: If(selectedTask.isEmployeeACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureEmployee.date),\r\n                        isComplete: If(selectedTask.isEmployeeACB, 1, selectedTask.signatureEmployee.isComplete), \r\n                        signature: If(selectedTask.isEmployeeACB, Text(\"\"), selectedTask.signatureEmployee.signature), \r\n                        uid: If(selectedTask.isEmployeeACB, Text(\"\"), selectedTask.signatureEmployee.uid)},\r\n                    signatureMSO: {\r\n                        date: If(selectedTask.isMSOACB, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureMSO.date),\r\n                        isComplete: If(selectedTask.isMSOACB, 1, selectedTask.signatureMSO.isComplete), \r\n                        signature: If(selectedTask.isMSOACB, Text(\"\"), selectedTask.signatureMSO.signature), \r\n                        uid: If(selectedTask.isMSOACB, Text(\"\"), selectedTask.signatureMSO.uid)},\r\n                    signatureClearingOffice: {\r\n                        date: If(selectedTask.isClearingOffice, DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), selectedTask.signatureClearingOffice.date),\r\n                        isComplete: If(selectedTask.isClearingOffice, 1, selectedTask.signatureClearingOffice.isComplete), \r\n                        signature: If(selectedTask.isClearingOffice, Text(\"\"), selectedTask.signatureClearingOffice.signature), \r\n                        uid: If(selectedTask.isClearingOffice, Text(\"\"), selectedTask.signatureClearingOffice.uid)},\r\n                    signatureNAACB: {\r\n                        date: DateTimeValue(Text(Now(), DateTimeFormat.LongDateTime)), isComplete: 1, signature: First(currentUser).displayName, uid: First(currentUser).uid}\r\n                    }\r\n            )\r\n        )\r\n    );\r\n\r\n    //returnCode\r\n\r\n)",
        "Property": "SignatureTask",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, ActionItem = ID)\r\n    },\r\n    If(!IsBlank(selectedTask),\r\n        /*If(\r\n            IsEmpty(\r\n                Errors(col_checklistTasks,*/\r\n                    Patch(col_checklistTasks,\r\n                        selectedTask,\r\n                        Switch(signatureType,\r\n                            \"signatureDesignee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: 0, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureSupervisor\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: 0, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureSupervisor: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureSupervisorDesignee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: 0, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureSupervisorDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureEmployee\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: 0, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureEmployee: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureMSO\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: 0, t: \"signatureMSO\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureMSO: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureClearingOffice\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value, t: \"signatureDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value, t: \"signatureSupervisor\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value, t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value, t: \"signatureEmployee\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value, t: \"signatureMSO\"},\r\n                                    {Value: 0, t: \"signatureClearingOffice\"},\r\n                                    {Value: LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureNAACB\").Value, t: \"signatureNAACB\"}\r\n                                ],\r\n                                signatureClearingOffice: {\r\n                                    date: DateValue(Date(1970, 1, 1)), isComplete: 0, signature: Text(\"\"), uid: Text(\"\")}\r\n                                },\r\n                            \"signatureNAACB\", {\r\n                                taskCompletionTelemetry: [\r\n                                    {Value: If(selectedTask.isDesigneeACB && !selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureDesignee\").Value), t: \"signatureDesignee\"},\r\n                                    {Value: If(selectedTask.isSupervisorACB && !selectedTask.isDesigneeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisor\").Value), t: \"signatureSupervisor\"},\r\n                                    {Value: If(selectedTask.isDesigneeACB || selectedTask.isSupervisorACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureSupervisorDesignee\").Value), t: \"signatureSupervisorDesignee\"},\r\n                                    {Value: If(selectedTask.isEmployeeACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureEmployee\").Value), t: \"signatureEmployee\"},\r\n                                    {Value: If(selectedTask.isMSOACB, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureMSO\").Value), t: \"signatureMSO\"},\r\n                                    {Value: If(selectedTask.isClearingOffice, 0, LookUp(selectedTask.taskCompletionTelemetry, t = \"signatureClearingOffice\").Value), t: \"signatureClearingOffice\"},\r\n                                    {Value: 0, t: \"signatureNAACB\"},\r\n                                ],\r\n                                signatureDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureSupervisor: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureSupervisorDesignee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureEmployee: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureMSO: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureClearingOffice: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")},\r\n                                signatureNAACB: {\r\n                                    date: DateValue(Date(1970, 1, 1)),\r\n                                    isComplete: 0,\r\n                                    signature: Text(\"\"),\r\n                                    uid: Text(\"\")}\r\n                                }\r\n                        )\r\n                    )\r\n                /*)\r\n            ),\r\n            \r\n            // REMOVED CODE BUT LEFT AS REFERENCE\r\n            //Select(updateChecklistJSON);\r\n            Set(signatureType, Blank());,\r\n            Notify(\"[col_checklistTasks] patch error\", NotificationType.Error)\r\n        ),\r\n        Notify(\"[ERASE] ]Oh boy, this is super embarassing... we did not find a task UID associated with that signature. Not really sure what else to tell you right now expcet today is gonna be a great day!\", NotificationType.Error)\r\n        */\r\n    )\r\n)",
        "Property": "EraseSignatureTask",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "If(!IsBlank(CurrentGalleryID), Set(currentGalleryID, CurrentGalleryID));\r\nIf(\r\n    // BEGIN LOGICAL TEST\r\n    IsBlank(combobox_EmployeeName_4.Selected.Mail) ||\r\n    IsBlank(combobox_Supervisor_4.Selected.Id) ||\r\n    IsBlank(combobox_Designee_4.Selected.Id) ||\r\n    IsBlank(combobox_Organization_4.Selected.ORG_NAME) ||\r\n    IsBlank(input_OrganizationCode_4.Text) ||\r\n    IsBlank(combobox_Service_4.Selected.Value) ||\r\n    If(combobox_Service_4.Selected.Value = \"Military\" && IsBlank(combobox_MilitaryServiceBranch_4.Selected.Value), true, false) ||\r\n    IsBlank(combobox_PayPlanGrade_4.Selected.v) ||\r\n    IsBlank(combobox_OutprocessingStatus_4.Selected.Value) ||\r\n    IsBlank(datepicker_DepartureDate_4.SelectedDate) ||\r\n    If(combobox_EmployeeName_4.Selected.Id = combobox_Designee_4.Selected.Id, true, false) ||\r\n    If(combobox_EmployeeName_4.Selected.Id = combobox_Supervisor_4.Selected.Id, true, false) ||\r\n    If(\"Transfer\" in combobox_OutprocessingStatus_4.Selected.Value && (IsBlank(input_NewEmployerName_4.Text && IsBlank(input_NewEmployerAddress_4.Text))), true, false),\r\n    // END LOGICAL TEST\r\n\r\n    // BEGIN TRUE RESULT - LOGICAL TEST - POPUP ERROR IF TRUE FROM LOGICAL TEST\r\n    Set(popupScope, \"popup_main_updateChecklistAttributesPatch\");\r\n    Set(isMainPopupVisible, true),\r\n    // END TRUE RESULT - LOGICAL TEST\r\n\r\n    With(\r\n        {\r\n            checklistAttributes: {\r\n                supervisor: combobox_Supervisor_4.Selected,\r\n                designee: combobox_Designee_4.Selected,\r\n                organization: combobox_Organization_4.Selected,\r\n                organizationCode: input_OrganizationCode_4.Text,\r\n                service: combobox_Service_4.Selected,\r\n                militaryServiceBranch: combobox_MilitaryServiceBranch_4.Selected,\r\n                payplanGrade: combobox_PayPlanGrade_4.Selected,\r\n                officeLocation: input_OfficeLocation_4.Text,\r\n                city: input_City_4.Text,\r\n                outProcessingStatus: combobox_OutprocessingStatus_4.Selected,\r\n                departureDate: datepicker_DepartureDate_4.SelectedDate,\r\n                newEmployerAgency: input_NewEmployerName_4.Text,\r\n                newEmployerAddress: input_NewEmployerAddress_4.Text\r\n            },\r\n            selectedChecklistUser: If(gallery_checklists.Selected.isDelegated, LookUp('OBOF-DS-userDelegation', uid = gallery_checklists.Selected.uidUser), LookUp('GLBL-DS-userRegistration', uid = gallery_checklists.Selected.uidUser)),\r\n            selectedChecklist: LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID)\r\n        },\r\n\r\n        If(gallery_checklists.Selected.isDelegated,\r\n            Set(recentlyPatchedUser,\r\n                Patch('OBOF-DS-userDelegation',\r\n                    selectedChecklistUser,\r\n                    {\r\n                        militaryServiceBranch: checklistAttributes.militaryServiceBranch,\r\n                        service: checklistAttributes.service,\r\n                        payPlan_Grade: checklistAttributes.payplanGrade.v,\r\n                        grade: checklistAttributes.payplanGrade.g,\r\n                        payPlan: checklistAttributes.payplanGrade.p,\r\n                        organization_v2: checklistAttributes.organization.ORG_NAME,\r\n                        organizationCode: checklistAttributes.organizationCode,\r\n                        officeLocation: checklistAttributes.officeLocation,\r\n                        city: checklistAttributes.city,\r\n                        delegationUid: checklistAttributes.designee.Id,\r\n                        supervisor: {\r\n                            '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                            Claims: Concatenate(\"i:0#.f|membership|\", checklistAttributes.supervisor.Mail),\r\n                            Department: checklistAttributes.supervisor.Department,\r\n                            DisplayName: checklistAttributes.supervisor.DisplayName,\r\n                            Email: checklistAttributes.supervisor.Mail,\r\n                            JobTitle: checklistAttributes.supervisor.JobTitle,\r\n                            Picture: \"\"\r\n                        },\r\n                        supervisorDisplayName: checklistAttributes.supervisor.DisplayName,\r\n                        supervisorEmail: checklistAttributes.supervisor.Mail,\r\n                        supervisorGivenName: checklistAttributes.supervisor.GivenName,\r\n                        supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,\r\n                        supervisorSurname: checklistAttributes.supervisor.Surname,\r\n                        supervisorUid: checklistAttributes.supervisor.Id\r\n                    }\r\n                )\r\n            ),\r\n            Set(recentlyPatchedUser,\r\n                Patch('GLBL-DS-userRegistration',\r\n                    selectedChecklistUser,\r\n                    {\r\n                        militaryServiceBranch: checklistAttributes.militaryServiceBranch,\r\n                        service: checklistAttributes.service,\r\n                        payPlan_Grade: checklistAttributes.payplanGrade.v,\r\n                        grade: checklistAttributes.payplanGrade.g,\r\n                        payPlan: checklistAttributes.payplanGrade.p,\r\n                        organization_v2: checklistAttributes.organization.ORG_NAME,\r\n                        organizationCode: checklistAttributes.organizationCode,\r\n                        officeLocation: checklistAttributes.officeLocation,\r\n                        city: checklistAttributes.city,\r\n                        supervisor: {\r\n                            '@odata.type':\"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser\",\r\n                            Claims: Concatenate(\"i:0#.f|membership|\", checklistAttributes.supervisor.Mail),\r\n                            Department: checklistAttributes.supervisor.Department,\r\n                            DisplayName: checklistAttributes.supervisor.DisplayName,\r\n                            Email: checklistAttributes.supervisor.Mail,\r\n                            JobTitle: checklistAttributes.supervisor.JobTitle,\r\n                            Picture: \"\"\r\n                        },\r\n                        supervisorDisplayName: checklistAttributes.supervisor.DisplayName,\r\n                        supervisorEmail: checklistAttributes.supervisor.Mail,\r\n                        supervisorGivenName: checklistAttributes.supervisor.GivenName,\r\n                        supervisorPhone: checklistAttributes.supervisor.TelephoneNumber,\r\n                        supervisorSurname: checklistAttributes.supervisor.Surname,\r\n                        supervisorUid: checklistAttributes.supervisor.Id\r\n                    }\r\n                )\r\n            )\r\n        );\r\n        If(\r\n            Set(recentlyPatchedChecklist,\r\n                Patch('OBOF-DS-checklistOutProcessing',\r\n                    selectedChecklist,\r\n                    {\r\n                        uidSupervisor: checklistAttributes.supervisor.Id,\r\n                        uidDesignee: checklistAttributes.designee.Id,\r\n                        checklistStatus: checklistAttributes.outProcessingStatus,\r\n                        departureDate: checklistAttributes.departureDate,\r\n                        newEmployerAgency: checklistAttributes.newEmployerAgency,\r\n                        newEmployerAgencyAddress:checklistAttributes.newEmployerAddress\r\n                    }\r\n                )\r\n            ),\r\n            Notify(\"Updated\", NotificationType.Success),\r\n            Notify(\"[OBOF-DS-checklistOutProcessing] patch error\", NotificationType.Error)\r\n        );\r\n        Set(isEditChecklistVisible, false);\r\n        \r\n        /*\r\n        // REMOVED CODE BUT LEFT FOR REFERENCE\r\n        If(runSendNotificationSupervisorDesignee,\r\n            Select(sendNotificationSupervisorDesignee);\r\n        );\r\n        Select(refreshChecklists)\r\n        */\r\n    )\r\n)",
        "Property": "UpdateChecklistAttributes",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Set(isBuildChecklistTasksRunning, true);\r\nWith(\r\n    {\r\n        checklist: LookUp('OBOF-DS-checklistOutProcessing', ID = ChecklistID)\r\n    },\r\n\r\n    ClearCollect(col_ParsedJSON,\r\n        DropColumns(\r\n            AddColumns(\r\n                Table(ParseJSON(checklist.checklistJSON)),\r\n                \"ID\", Value(Value.ID),\r\n                \"actionItem\", Value(Value.actionItem),\r\n                \"groupValue\", Text(Value.groupValue),\r\n                \"service\", DropColumns(AddColumns(RenameColumns(Table(Value.service), \"Value\", \"V\"), \"Value\", Text(V.Value)), \"V\"),\r\n                \"isSupervisorACB\", If(Value(Value.isSupervisorACB) = 1, true, false),\r\n                \"isDesigneeACB\", If(Value(Value.isDesigneeACB) = 1, true, false),\r\n                \"isEmployeeACB\", If(Value(Value.isEmployeeACB) = 1, true, false),\r\n                \"isMSOACB\", If(Value(Value.isMSOACB) = 1, true, false),\r\n                \"isNAACB\", If(Value(Value.isNAACB) = 1, true, false),\r\n                \"isClearingOffice\", If(Value(Value.isClearingOffice) = 1, true, false),\r\n                \"uid\", Text(Value.uid),\r\n                \"autoNotify\", If(Value(Value.autoNotify) = 1, true, false),\r\n                \"extendAttributes\", If(Value(Value.extendAttributes) = 1, true, false),\r\n                \"dueInDays\", Value(Value.dueInDays),\r\n                \"dueInDaysEval\", {\r\n                        dueDate: With({taskDD: checklist.departureDate},\r\n                                    DateValue(If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                        DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                        If(Weekday(DateAdd(taskDD, (Value(Value.dueInDays)+ (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                            DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                                DateAdd(taskDD, (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days))))), \r\n                        daysRemaining: With({taskDDMod: If(Weekday(DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 7,\r\n                                    DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 - 1, TimeUnit.Days),\r\n                                    If(Weekday(DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)) = 1,\r\n                                        DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1 + 1, TimeUnit.Days),\r\n                                            DateAdd(DateValue(Text(checklist.departureDate)), (Value(Value.dueInDays) + (RoundDown((Value(Value.dueInDays) / 5) * 2, 0)))*-1, TimeUnit.Days)))},\r\n                                Value(1 + ((DateDiff(Today(),taskDDMod,TimeUnit.Days)) * 5 - ((Weekday(Today()) - Weekday(taskDDMod))*2)) / 7 - Switch(Weekday(taskDDMod),7,1,0) - Switch(Weekday(Today()),1,1,0)))\r\n                    },\r\n                \"mandatoryClearingOfficeACB\", If(Value(Value.mandatoryClearingOfficeACB) = 1, true, false),\r\n                \"notificationDetails\", {\r\n                    isNotified: If(Value(Value.notificationDetails.isNotified) = 1, true, false),\r\n                    email: Text(Value.notificationDetails.email),\r\n                    timestamp: DateValue(Text(Value.notificationDetails.timestamp))\r\n                },\r\n                \"createServiceRequest\", If(Value(Value.createServiceRequest) = 1, true, false),\r\n                \"isServiceRequestCompleted\", If(Value(Value.isServiceRequestCompleted) = 1, true, false),\r\n                \"serviceRequestNumber\", Text(Value.serviceRequestNumber),\r\n                \"urlServiceRequest\", Text(Value.urlServiceRequest),\r\n                \"signatureClearingOffice\", {\r\n                        date: DateTimeValue(Text(Value.signatureClearingOffice.date)), \r\n                        isComplete: Value(Value.signatureClearingOffice.isComplete), \r\n                        signature: Text(Value.signatureClearingOffice.signature), \r\n                        uid: Text(Value.signatureClearingOffice.uid)\r\n                    },\r\n                \"signatureEmployee\", {\r\n                        date: DateTimeValue(Text(Value.signatureEmployee.date)), \r\n                        isComplete: Value(Value.signatureEmployee.isComplete), \r\n                        signature: Text(Value.signatureEmployee.signature), \r\n                        uid: Text(Value.signatureEmployee.uid)\r\n                    },\r\n                \"signatureMSO\", {\r\n                        date: DateTimeValue(Text(Value.signatureMSO.date)), \r\n                        isComplete: Value(Value.signatureMSO.isComplete), \r\n                        signature: Text(Value.signatureMSO.signature), \r\n                        uid: Text(Value.signatureMSO.uid)\r\n                    },\r\n                \"signatureDesignee\", {\r\n                        date: DateTimeValue(Text(Value.signatureDesignee.date)), \r\n                        isComplete: Value(Value.signatureDesignee.isComplete), \r\n                        signature: Text(Value.signatureDesignee.signature), \r\n                        uid: Text(Value.signatureDesignee.uid)\r\n                    },\r\n                \"signatureSupervisor\", {\r\n                        date: DateTimeValue(Text(Value.signatureSupervisor.date)), \r\n                        isComplete: Value(Value.signatureSupervisor.isComplete), \r\n                        signature: Text(Value.signatureSupervisor.signature), \r\n                        uid: Text(Value.signatureSupervisor.uid)\r\n                    },\r\n                \"signatureSupervisorDesignee\", {\r\n                        date: DateTimeValue(Text(Value.signatureSupervisorDesignee.date)), \r\n                        isComplete: Value(Value.signatureSupervisorDesignee.isComplete), \r\n                        signature: Text(Value.signatureSupervisorDesignee.signature), \r\n                        uid: Text(Value.signatureSupervisorDesignee.uid)\r\n                    },\r\n                \"signatureNAACB\", {\r\n                        date: DateTimeValue(Text(Value.signatureNAACB.date)), \r\n                        isComplete: Value(Value.signatureNAACB.isComplete), \r\n                        signature: Text(Value.signatureNAACB.signature), \r\n                        uid: Text(Value.signatureNAACB.uid)\r\n                    },\r\n                \"built\", Now(),\r\n                \"extendAttributesJSON\", ForAll(Table(Value.extendAttributesJSON), {ID: Value(Value.ID), description: Text(Value.description), response: Text(Value.response), responded: If(Value(Value.responded) = 1, true, false)}),\r\n                \"transactLog\", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateTimeValue(Text(Value.timestamp))})\r\n                ),\r\n            \"Value\"\r\n        )\r\n    );\r\n    //\"transactLog\", ForAll(Table(Value.transactLog), {ID: Value(Value.ID), log: Text(Value.log), timestamp: DateValue(Text(Value.timestamp))})\r\n\r\n    // SET PRIMARY KEY AS [ID]\r\n    RenameColumns(Ungroup(col_ParsedJSON.extendAttributesJSON, \"extendAttributesJSON\"),\"ID\",\"ID\");\r\n    // SET PRIMARY KEY AS [ID]\r\n    RenameColumns(Ungroup(col_ParsedJSON.transactLog, \"transactLog\"),\"ID\",\"ID\");\r\n    \r\n    ClearCollect(col_checklistTasks,\r\n        RenameColumns(\r\n            AddColumns(\r\n                AddColumns(col_ParsedJSON,\r\n                    \"taskCompletionTelemetry\", Table(\r\n                        If(isClearingOffice, {Value: signatureClearingOffice.isComplete, t: \"signatureClearingOffice\"}, {Value: -1, t: \"signatureClearingOffice\"}),\r\n                        If(isEmployeeACB, {Value: signatureEmployee.isComplete, t: \"signatureEmployee\"}, {Value: -1, t: \"signatureEmployee\"}),\r\n                        If(isMSOACB, {Value: signatureMSO.isComplete, t: \"signatureMSO\"}, {Value: -1, t: \"signatureMSO\"}),\r\n                        If(isDesigneeACB && !isSupervisorACB, {Value: signatureDesignee.isComplete, t: \"signatureDesignee\"}, {Value: -1, t: \"signatureDesignee\"}),\r\n                        If(isSupervisorACB && !isDesigneeACB, {Value: signatureSupervisor.isComplete, t: \"signatureSupervisor\"}, {Value: -1, t: \"signatureSupervisor\"}),\r\n                        If(isSupervisorACB && isDesigneeACB, {Value: signatureSupervisorDesignee.isComplete, t: \"signatureSupervisorDesignee\"}, {Value: -1, t: \"signatureSupervisorDesignee\"})\r\n                    )\r\n                ),\r\n                \"isCompleted\", If(IsEmpty(Filter(col_ParsedJSON, 0 in taskCompletionTelemetry.Value)), true, false)\r\n            ),\r\n            \"ID\",\"ID\"\r\n        )\r\n    )\r\n);\r\n\r\n// RESET ALL NEW CHECKLIST FIELDS WITHIN FORM\r\nClear(col_ParsedJSON);\r\nReset(toggle_DelegationNewChecklist);\r\nReset(checkbox_DelegationAcknowledge);\r\nReset(combobox_EmployeeName_3);\r\nReset(combobox_Designee_3);\r\nReset(combobox_Service_3);\r\nReset(combobox_MilitaryServiceBranch_3);\r\nReset(combobox_PayPlanGrade_3);\r\nReset(combobox_Organization_3);\r\nReset(input_OrganizationCode_3);\r\nReset(input_OfficeLocation_3);\r\nReset(combobox_State_3);\r\nReset(input_City_3);\r\nReset(combobox_OutprocessingStatus_3);\r\nReset(datepicker_DepartureDate_3);\r\nReset(input_NewEmployerName_3);\r\nReset(input_NewEmployerAddress_3);\r\nSet(chkRecord, Blank());\r\nSet(sendNotificationSupervisorDesigneeScope, Blank());\r\nSet(runSendNotificationSupervisorDesignee, false);\r\nSet(runBuildChecklistTasks, false);\r\nIf(!Delay,\r\n    Set(isBuildChecklistTasksRunning, false);\r\n);\r\n",
        "Property": "BuildChecklistTasks",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "If({isCompleted: false} in col_checklistTasks.isCompleted,\r\n    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = \"Completed\", \r\n        Patch('OBOF-DS-checklistOutProcessing',\r\n            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n            {\r\n                outprocessingState: {Value: \"In Progress\"},\r\n                outprocessingCompletedDate: Blank()\r\n            }\r\n        );\r\n        Set(patchRun, true),\r\n\r\n        Set(patchRun, false)\r\n    );\r\n    //Notify(\"Checklist Not Completed\", NotificationType.Warning);\r\n    patchRun,\r\n\r\n    If(LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID).outprocessingState.Value = \"In Progress\",\r\n        Patch('OBOF-DS-checklistOutProcessing',\r\n            LookUp('OBOF-DS-checklistOutProcessing', ID = gallery_checklists.Selected.ID),\r\n            {\r\n                outprocessingState: {Value: \"Completed\"},\r\n                outprocessingCompletedDate: Now()\r\n            }\r\n        );\r\n        Set(patchRun, true),\r\n\r\n        Set(patchRun, false)\r\n    );\r\n    Notify(\"Checklist Completed\", NotificationType.Success);\r\n    patchRun\r\n);",
        "Property": "ValidateChecklistComplete",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        notificationAttributes: {\r\n            departingEmployee: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_EmployeeName_4.Selected, combobox_EmployeeName_3.Selected),\r\n            supervisor: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Supervisor_4.Selected, combobox_Supervisor_3.Selected),\r\n            designee: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Designee_4.Selected, combobox_Designee_3.Selected),\r\n            checklistID: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", gallery_checklists.Selected.ID, chkRecord.ID),\r\n            departureDate: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", datepicker_DepartureDate_4.SelectedDate,chkRecord.departureDate),\r\n            organization: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", combobox_Organization_4.Selected.ORG_NAME, combobox_Organization_3.Selected.ORG_NAME),\r\n            organizationCode: If(NotificationSupervisorDesigneeScope = \"updateChecklistAttributes\", input_OrganizationCode_4.Text, input_OrganizationCode_3.Text)\r\n        }\r\n    },\r\n    \r\n    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && !(notificationAttributes.designee.Id = First(currentUser).uid),\r\n        Set(receivers, notificationAttributes.designee.Mail)\r\n    );\r\n    If(!(notificationAttributes.supervisor.Id = First(currentUser).uid) && notificationAttributes.designee.Id = First(currentUser).uid,\r\n        Set(receivers, notificationAttributes.supervisor.Mail)\r\n    );\r\n    If((notificationAttributes.supervisor.Id = First(currentUser).uid) && (notificationAttributes.designee.Id = First(currentUser).uid),\r\n        Set(receivers, Blank())\r\n    );\r\n    If((First(currentUser).uid <> notificationAttributes.supervisor.Id) && (First(currentUser).uid <> notificationAttributes.designee.Id),\r\n        Set(receivers, notificationAttributes.supervisor.Mail)\r\n    );\r\n\r\n    If(!IsBlank(receivers),\r\n        'OBOF-SendNotification-SupervisorDesignee'.Run(\r\n            {\r\n                text: receivers,\r\n                text_1: notificationAttributes.departingEmployee.DisplayName,\r\n                text_2: notificationAttributes.supervisor.DisplayName,\r\n                text_3: notificationAttributes.designee.DisplayName,\r\n                text_4: notificationAttributes.checklistID,\r\n                text_5: notificationAttributes.departureDate,\r\n                text_6: notificationAttributes.organization,\r\n                text_7: notificationAttributes.organizationCode,\r\n                text_8: appMetadata.appEnviornment.Value,\r\n                text_9: appMetadata.appUrl\r\n            }\r\n        )\r\n    )\r\n);\r\n",
        "Property": "SendNotificationSupervisorDesignee",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "Remove('OBOF-DS-checklistOutProcessing',\r\n    LookUp('OBOF-DS-checklistOutProcessing', ID = ChecklistID)\r\n);",
        "Property": "DeletChecklist",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "ClearCollect(_responseIWAMQueryDCID, \r\n    DropColumns(\r\n        AddColumns(\r\n            PowerBI.ExecuteDatasetQuery(\"208885bd-ffb9-441b-8c9a-2106d426e81a\", \"d190c00c-71e7-4a6a-a53e-1b1ca7aa7ec9\",\r\n                $\"EVALUATE\r\n\t\t\t\t\tCALCULATETABLE(\r\n\t\t\t\t\t\t'IWAM USERS',\r\n\t\t\t\t\t\t'IWAM USERS'[USERID] = \"\"{UserID}\"\"\r\n\t\t\t\t\t)\"\r\n            ).firstTableRows,\r\n            \"USERID\", Text(ThisRecord.Value.'IWAM USERS[USERID]'),\r\n            \"ACTIVE\", If(ThisRecord.Value.'IWAM USERS[ACTIVE]', \"true\", true, false),\r\n            \"USR_LAST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_LAST_NAME]'),\r\n            \"USR_MIDDLE_INITIAL\", Text(ThisRecord.Value.'IWAM USERS[USR_MIDDLE_INITIAL]'),\r\n            \"DCMA_ORGANIZATION_LEVEL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_ORGANIZATION_LEVEL]'),\r\n            \"DCMA_EMPLOYEE_TYPE\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMPLOYEE_TYPE]'),\r\n            \"DCMA_JOB_SERIES\", Value(ThisRecord.Value.'IWAM USERS[DCMA_JOB_SERIES]'),\r\n            \"IS_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[IS_SUPERVISOR]'),\r\n            \"DCMA_EMAIL\", Text(ThisRecord.Value.'IWAM USERS[DCMA_EMAIL]'),\r\n            \"TELEPHONE\", Text(ThisRecord.Value.'IWAM USERS[TELEPHONE]'),\r\n            \"USR_FULLNAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FULLNAME]'),\r\n            \"DIRECT_SUPERVISOR\", Text(ThisRecord.Value.'IWAM USERS[DIRECT_SUPERVISOR]'),\r\n            \"DCMA_SITE_ID\", Value(ThisRecord.Value.'IWAM USERS[DCMA_SITE_ID]'),\r\n            \"USR_FIRST_NAME\", Text(ThisRecord.Value.'IWAM USERS[USR_FIRST_NAME]')\r\n        ),\r\n        \"Value\"\r\n    )\r\n);\r\nShowColumns(First(_responseIWAMQueryDCID),\r\n    \"USERID\",\r\n    \"ACTIVE\",\r\n    \"USR_LAST_NAME\",\r\n    \"USR_MIDDLE_INITIAL\",\r\n    \"DCMA_ORGANIZATION_LEVEL\",\r\n    \"DCMA_EMPLOYEE_TYPE\",\r\n    \"DCMA_JOB_SERIES\",\r\n    \"IS_SUPERVISOR\",\r\n    \"DCMA_EMAIL\",\r\n    \"TELEPHONE\",\r\n    \"USR_FULLNAME\",\r\n    \"DIRECT_SUPERVISOR\",\r\n    \"DCMA_SITE_ID\",\r\n    \"USR_FIRST_NAME\"\r\n)",
        "Property": "IWAMQueryDCID",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, ID = ActionItem)\r\n        \r\n    },\r\n\r\n    ClearCollect(col_eaj, selectedTask.extendAttributesJSON);\r\n\r\n    If(\r\n        IsEmpty(\r\n            Errors(col_eaj,\r\n                Patch(col_eaj, {ID: ExtendedAttributesJSONID},\r\n                    {\r\n                        ID: ExtendedAttributesJSONID,\r\n                        description: Text(LookUp(col_eaj, ID = ExtendedAttributesJSONID).description),\r\n                        response: ExtendedAttributesJSONResponse,\r\n                        responded: true\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\"col_eaj Patch\", NotificationType.Success), //Select(updateChecklistJSON),\r\n        Notify(\"col_eaj Patch\", NotificationType.Error)\r\n    );\r\n    \r\n    If(\r\n        IsEmpty(\r\n            Errors(col_checklistTasks,\r\n                Patch(col_checklistTasks, selectedTask,\r\n                    {\r\n                        extendAttributesJSON: col_eaj\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\"Extended Attributes Patch\", NotificationType.Success), //Select(updateChecklistJSON),\r\n        Notify(\"Extended Attributes Patch Error\", NotificationType.Error)\r\n    )\r\n)",
        "Property": "UpdateExtendedAttributes",
        "RuleProviderType": "System"
      },
      {
        "Category": "Behavior",
        "InvariantScript": "With(\r\n    {\r\n        selectedTask: LookUp(col_checklistTasks, ID = ActionItem)\r\n        \r\n    },\r\n    \r\n    If(\r\n        IsEmpty(\r\n            Errors(col_checklistTasks,\r\n                Patch(col_checklistTasks, selectedTask,\r\n                    {\r\n                        isServiceRequestCompleted: true,\r\n                        serviceRequestNumber: Upper(ChangeGearServiceRequestNumber)\r\n                    }\r\n                )\r\n            )\r\n        ),\r\n        Notify(\"ChangeGear Service Request Patch\", NotificationType.Success),\r\n        Notify(\"ChangeGear Service Request Patch\", NotificationType.Error)\r\n    )\r\n)",
        "Property": "AttachChangerGearServiceRequest",
        "RuleProviderType": "System"
      }
    ]
  },
  "ComponentExtraMetadata": {
    "ComponentDescription": "Component Function used to manage data sources and JSON"
  },
  "ComponentManifest": {
    "AllowAccessToGlobals": true,
    "AllowCustomization": true,
    "Description": "Component Function used to manage data sources and JSON",
    "Name": "DataSource",
    "TemplateGuid": "2475a326773b4beeb2b8a2b849912bbc"
  },
  "ComponentType": "CanvasComponent",
  "CustomGroupControlTemplateName": "",
  "CustomProperties": [
    {
      "Category": 2,
      "DisplayName": "Refresh",
      "Hidden": true,
      "Name": "Refresh",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "Refresh_Delay",
            "Name": "Refresh_Delay",
            "PropertyDataTypeKey": "Boolean",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Setting this value true will inhibit IsRunnig from updating.",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "Delay"
            },
            "Tooltip": "Setting this value true will inhibit IsRunnig from updating.",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "Refresh_GlobalFilter",
            "Name": "Refresh_GlobalFilter",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "GlobalFilter",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "GlobalFilter"
            },
            "Tooltip": "GlobalFilter",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Refresh all data sources associated with function",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "BuildChecklistTasks",
      "Hidden": true,
      "Name": "BuildChecklistTasks",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "BuildChecklistTasks_Delay",
            "Name": "BuildChecklistTasks_Delay",
            "PropertyDataTypeKey": "Boolean",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Delay",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "Delay"
            },
            "Tooltip": "Delay",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "BuildChecklistTasks_ChecklistID",
            "Name": "BuildChecklistTasks_ChecklistID",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Checklist ID used to get JSON",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ChecklistID"
            },
            "Tooltip": "Checklist ID used to get JSON",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Build Checklist Tasks from persistent data store",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "isChecklistComplete",
      "Hidden": true,
      "Name": "isChecklistComplete",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "Evaluate if the Checklist and all Tasks associated are complete",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "DelegationNewChecklist",
      "Hidden": true,
      "Name": "DelegationNewChecklist",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "TODO: DelegationNewChecklist",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "NewChcklist",
      "Hidden": true,
      "Name": "NewChcklist",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "TDO: NewChcklist",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "ValidateCompletionSignature",
      "Hidden": true,
      "Name": "ValidateCompletionSignature",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "TODO: ValidateCompletionSignature",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "DeletChecklist",
      "Hidden": true,
      "Name": "DeletChecklist",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "DeletChecklist_ChecklistID",
            "Name": "DeletChecklist_ChecklistID",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Checklist ID",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ChecklistID"
            },
            "Tooltip": "Checklist ID",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Delete Checklist from data source",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "RecordTransactLog",
      "Hidden": true,
      "Name": "RecordTransactLog",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "RecordTransactLog_LogType",
            "Name": "RecordTransactLog_LogType",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Log type examples: addSignature, removeSignature",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "LogType"
            },
            "Tooltip": "Log type examples: addSignature, removeSignature",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Record the transaction of event in log",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "UpdateChecklistJSON",
      "Hidden": true,
      "Name": "UpdateChecklistJSON",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "Update persistent data source with JSON checklist tasks",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "SignatureTask",
      "Hidden": true,
      "Name": "SignatureTask",
      "PropertyDataTypeKey": "Table",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "SignatureTask_SignatureType",
            "Name": "SignatureTask_SignatureType",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "The type of signature example: signatureSupervisorDesignee",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "SignatureType"
            },
            "Tooltip": "The type of signature example: signatureSupervisorDesignee",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "SignatureTask_ActionItem",
            "Name": "SignatureTask_ActionItem",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ActionItem",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ActionItem"
            },
            "Tooltip": "ActionItem",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Add digital signature to a task",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Table\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "EraseSignatureTask",
      "Hidden": true,
      "Name": "EraseSignatureTask",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "EraseSignatureTask_SignatureType",
            "Name": "EraseSignatureTask_SignatureType",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "The type of signature example: signatureSupervisorDesignee",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "SignatureType"
            },
            "Tooltip": "The type of signature example: signatureSupervisorDesignee",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "EraseSignatureTask_ActionItem",
            "Name": "EraseSignatureTask_ActionItem",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ActionItem",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ActionItem"
            },
            "Tooltip": "ActionItem",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Eras digital signature from task",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 0,
      "DisplayName": "isValidateCompletionSignature",
      "Hidden": true,
      "Name": "isValidateCompletionSignature",
      "PropertyDataTypeKey": "Boolean",
      "Tooltip": "Is Completion Signature Valid",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "UpdateChecklistAttributes",
      "Hidden": true,
      "Name": "UpdateChecklistAttributes",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "UpdateChecklistAttributes_CurrentGalleryID",
            "Name": "UpdateChecklistAttributes_CurrentGalleryID",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "The current gallery ID to set defaul selected item when function completes",
              "IsRequired": false,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "CurrentGalleryID"
            },
            "Tooltip": "The current gallery ID to set defaul selected item when function completes",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Update attributes associated with selected Checklist",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 0,
      "DisplayName": "RecentlyPatchedChecklist",
      "Hidden": true,
      "Name": "RecentlyPatchedChecklist",
      "PropertyDataTypeKey": "Record",
      "Tooltip": "Returns the recently patched Checklist",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Author\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Claims\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Email\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"JobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Picture\",\"Kind\":\"Image\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"ComplianceAssetId\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Created\",\"Kind\":\"DateTime\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Editor\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Claims\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Email\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"JobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Picture\",\"Kind\":\"Image\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Modified\",\"Kind\":\"DateTime\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"OData__ColorTag\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Title\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"appliedJSON\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"checklistJSON\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"checklistStatus\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Value\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"comments\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"departureDate\",\"Kind\":\"Date\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"isDelegated\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"newEmployerAgency\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"newEmployerAgencyAddress\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"outprocessingCompletedDate\",\"Kind\":\"Date\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"outprocessingState\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Value\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"uidDesignee\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"uidSupervisor\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"uidUser\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Attachments}\",\"Kind\":\"Attachment\",\"EnumString\":\"\",\"Attachment\":{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Table\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"AbsoluteUri\",\"Kind\":\"Hyperlink\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Id\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Value\",\"Kind\":\"Hyperlink\",\"EnumString\":\"\",\"Type\":[]}]}}},{\"Name\":\"{FilenameWithExtension}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{FullPath}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{HasAttachments}\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Identifier}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{IsFolder}\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Link}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{ModerationComment}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{ModerationStatus}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Name}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Path}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Thumbnail}\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Large\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Medium\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Small\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"{TriggerWindowEndToken}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{TriggerWindowStartToken}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{VersionNumber}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]}}"
    },
    {
      "Category": 0,
      "DisplayName": "RecentlyPatchedUser",
      "Hidden": true,
      "Name": "RecentlyPatchedUser",
      "PropertyDataTypeKey": "Record",
      "Tooltip": "Returns the recently patched User",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Author\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Claims\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Email\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"JobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Picture\",\"Kind\":\"Image\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"ComplianceAssetId\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Created\",\"Kind\":\"DateTime\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Editor\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Claims\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Email\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"JobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Picture\",\"Kind\":\"Image\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Modified\",\"Kind\":\"DateTime\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"OData__ColorTag\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Title\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"accountEnabled\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"city\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"companyName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"delegationUid\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"displayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"givenName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"grade\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"jobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"mail\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"militaryServiceBranch\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Value\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"officeLocation\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"organization\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Label\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Path\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"TermGuid\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Value\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"WssId\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"organizationCode\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"payPlan\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"payPlan_Grade\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"postalCode\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"service\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Value\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"streetAddress\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisor\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Claims\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Department\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Email\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"JobTitle\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Picture\",\"Kind\":\"Image\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"supervisorDisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisorEmail\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisorGivenName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisorPhone\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisorSurname\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"supervisorUid\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"surname\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"uid\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Attachments}\",\"Kind\":\"Attachment\",\"EnumString\":\"\",\"Attachment\":{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Table\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"AbsoluteUri\",\"Kind\":\"Hyperlink\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DisplayName\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Id\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Value\",\"Kind\":\"Hyperlink\",\"EnumString\":\"\",\"Type\":[]}]}}},{\"Name\":\"{FilenameWithExtension}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{FullPath}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{HasAttachments}\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Identifier}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{IsFolder}\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Link}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{ModerationComment}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{ModerationStatus}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Name}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Path}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{Thumbnail}\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"Large\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Medium\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Small\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]},{\"Name\":\"{TriggerWindowEndToken}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{TriggerWindowStartToken}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"{VersionNumber}\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]}}"
    },
    {
      "Category": 2,
      "DisplayName": "ValidateChecklistComplete",
      "Hidden": true,
      "Name": "ValidateChecklistComplete",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": []
      },
      "Tooltip": "Validates if the context of checklist is complete. Returns true or false.",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "SendNotificationSupervisorDesignee",
      "Hidden": true,
      "Name": "SendNotificationSupervisorDesignee",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "SendNotificationSupervisorDesignee_NotificationSupervisorDesigneeScope",
            "Name": "SendNotificationSupervisorDesignee_NotificationSupervisorDesigneeScope",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "NotificationSupervisorDesigneeScope",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "NotificationSupervisorDesigneeScope"
            },
            "Tooltip": "NotificationSupervisorDesigneeScope",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "Send Notification Supervisor and Designee",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "IWAMQueryEmail",
      "Hidden": true,
      "Name": "IWAMQueryEmail",
      "PropertyDataTypeKey": "Table",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "IWAMQueryEmail_Email",
            "Name": "IWAMQueryEmail_Email",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Email",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "Email"
            },
            "Tooltip": "Email",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "A custom property",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Table\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"ACTIVE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_EMAIL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_EMPLOYEE_TYPE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_JOB_SERIES\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_ORGANIZATION_LEVEL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_SITE_ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DIRECT_SUPERVISOR\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"IS_SUPERVISOR\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"TELEPHONE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USERID\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_FIRST_NAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_FULLNAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_LAST_NAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_MIDDLE_INITIAL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]}}"
    },
    {
      "Category": 2,
      "DisplayName": "IWAMQueryOrganization",
      "Hidden": true,
      "Name": "IWAMQueryOrganization",
      "PropertyDataTypeKey": "Table",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "IWAMQueryOrganization_OrganizationCodeParent",
            "Name": "IWAMQueryOrganization_OrganizationCodeParent",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "OrganizationCodeParent",
              "IsRequired": false,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "OrganizationCodeParent"
            },
            "Tooltip": "OrganizationCodeParent",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "IWAMQueryOrganization_OrganizationCode",
            "Name": "IWAMQueryOrganization_OrganizationCode",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "OrganizationCode",
              "IsRequired": false,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "OrganizationCode"
            },
            "Tooltip": "OrganizationCode",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "IWAMQueryOrganization_OrganizationName",
            "Name": "IWAMQueryOrganization_OrganizationName",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "OrganizationName",
              "IsRequired": false,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "OrganizationName"
            },
            "Tooltip": "OrganizationName",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "A custom property",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Table\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"ENTITY_CODE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"LVL\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"ORG Code\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"ORG_ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"ORG_NAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"ORG_TYPE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Parent ORG Code\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"Parent ORG ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"REPORT_PARENT_ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}]}}"
    },
    {
      "Category": 2,
      "DisplayName": "IWAMQueryDCID",
      "Hidden": true,
      "Name": "IWAMQueryDCID",
      "PropertyDataTypeKey": "Record",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "IWAMQueryDCID_UserID",
            "Name": "IWAMQueryDCID_UserID",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "UserID",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "UserID"
            },
            "Tooltip": "UserID",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "IWAMQueryDCID",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Record\",\"EnumString\":\"\",\"Type\":[{\"Name\":\"ACTIVE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_EMAIL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_EMPLOYEE_TYPE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_JOB_SERIES\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_ORGANIZATION_LEVEL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DCMA_SITE_ID\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"DIRECT_SUPERVISOR\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"IS_SUPERVISOR\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"TELEPHONE\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USERID\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_FIRST_NAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_FULLNAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_LAST_NAME\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]},{\"Name\":\"USR_MIDDLE_INITIAL\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}]}}"
    },
    {
      "Category": 2,
      "DisplayName": "UpdateExtendedAttributes",
      "Hidden": true,
      "Name": "UpdateExtendedAttributes",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "UpdateExtendedAttributes_ExtendedAttributesJSONID",
            "Name": "UpdateExtendedAttributes_ExtendedAttributesJSONID",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ID of attribute to update",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ExtendedAttributesJSONID"
            },
            "Tooltip": "ID of attribute to update",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "UpdateExtendedAttributes_ActionItem",
            "Name": "UpdateExtendedAttributes_ActionItem",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ActionItem",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ActionItem"
            },
            "Tooltip": "ActionItem",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "UpdateExtendedAttributes_ExtendedAttributesJSONResponse",
            "Name": "UpdateExtendedAttributes_ExtendedAttributesJSONResponse",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "Value of user input to update in extended attributes",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ExtendedAttributesJSONResponse"
            },
            "Tooltip": "Value of user input to update in extended attributes",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "UpdateExtendedAttributes",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    },
    {
      "Category": 2,
      "DisplayName": "AttachChangerGearServiceRequest",
      "Hidden": true,
      "Name": "AttachChangerGearServiceRequest",
      "PropertyDataTypeKey": "Boolean",
      "PropertyScopeKey": {
        "PropertyScopeRuleNamespaceKey": "3",
        "PropertyScopeRulesKey": [
          {
            "DisplayName": "AttachChangerGearServiceRequest_ActionItem",
            "Name": "AttachChangerGearServiceRequest_ActionItem",
            "PropertyDataTypeKey": "Number",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ActionItem",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ActionItem"
            },
            "Tooltip": "ActionItem",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Number\",\"EnumString\":\"\",\"Type\":[]}}"
          },
          {
            "DisplayName": "AttachChangerGearServiceRequest_ChangeGearServiceRequestNumber",
            "Name": "AttachChangerGearServiceRequest_ChangeGearServiceRequestNumber",
            "PropertyDataTypeKey": "String",
            "ScopeVariableInfo": {
              "DependencyType": "New",
              "Description": "ChangeGearServiceRequestNumber",
              "IsRequired": true,
              "ResolveExpands": false,
              "ResolveSelects": false,
              "ScopeVariableName": "ChangeGearServiceRequestNumber"
            },
            "Tooltip": "ChangeGearServiceRequestNumber",
            "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"String\",\"EnumString\":\"\",\"Type\":[]}}"
          }
        ]
      },
      "Tooltip": "AttachChangerGearServiceRequest",
      "Type": "{\"Version\":\"1.337\",\"Type\":{\"Name\":\"Root\",\"Kind\":\"Boolean\",\"EnumString\":\"\",\"Type\":[]}}"
    }
  ],
  "FirstParty": true,
  "Id": "http://microsoft.com/appmagic/Component",
  "IsComponentLocked": false,
  "IsComponentTemplate": true,
  "IsCustomGroupControlTemplate": false,
  "IsPcfControl": false,
  "IsPremiumPcfControl": false,
  "IsWidgetTemplate": false,
  "LastModifiedTimestamp": "638447235783069717",
  "Name": "2475a326773b4beeb2b8a2b849912bbc",
  "OverridableProperties": {},
  "Version": "1.0"
}